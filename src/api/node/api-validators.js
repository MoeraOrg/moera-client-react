// This file is generated

"use strict";
export const CommentOperations = validate11;
const schema12 = {"type":"object","properties":{"view":{"type":"string","nullable":true},"edit":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true},"viewReactions":{"type":"string","nullable":true},"viewNegativeReactions":{"type":"string","nullable":true},"viewReactionTotals":{"type":"string","nullable":true},"viewNegativeReactionTotals":{"type":"string","nullable":true},"viewReactionRatios":{"type":"string","nullable":true},"viewNegativeReactionRatios":{"type":"string","nullable":true},"addReaction":{"type":"string","nullable":true},"addNegativeReaction":{"type":"string","nullable":true}},"additionalProperties":false};
const func2 = Object.prototype.hasOwnProperty;

function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema12.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.edit !== undefined){
let data1 = data.edit;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/edit",schemaPath:"#/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["edit"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data2 = data.delete;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["delete"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactions !== undefined){
let data3 = data.viewReactions;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewReactions",schemaPath:"#/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["viewReactions"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactions !== undefined){
let data4 = data.viewNegativeReactions;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewNegativeReactions",schemaPath:"#/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["viewNegativeReactions"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactionTotals !== undefined){
let data5 = data.viewReactionTotals;
const _errs17 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewReactionTotals",schemaPath:"#/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["viewReactionTotals"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactionTotals !== undefined){
let data6 = data.viewNegativeReactionTotals;
const _errs20 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewNegativeReactionTotals",schemaPath:"#/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["viewNegativeReactionTotals"] = coerced6;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactionRatios !== undefined){
let data7 = data.viewReactionRatios;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewReactionRatios",schemaPath:"#/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["viewReactionRatios"] = coerced7;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactionRatios !== undefined){
let data8 = data.viewNegativeReactionRatios;
const _errs26 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/viewNegativeReactionRatios",schemaPath:"#/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["viewNegativeReactionRatios"] = coerced8;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addReaction !== undefined){
let data9 = data.addReaction;
const _errs29 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/addReaction",schemaPath:"#/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["addReaction"] = coerced9;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addNegativeReaction !== undefined){
let data10 = data.addNegativeReaction;
const _errs32 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate11.errors = [{instancePath:instancePath+"/addNegativeReaction",schemaPath:"#/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["addNegativeReaction"] = coerced10;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate11.errors = vErrors;
return errors === 0;
}

export const ContactOperations = validate12;
const schema13 = {"type":"object","properties":{"viewFeedSubscriber":{"type":"string","nullable":true},"viewFeedSubscription":{"type":"string","nullable":true},"viewFriend":{"type":"string","nullable":true},"viewFriendOf":{"type":"string","nullable":true},"viewBlock":{"type":"string","nullable":true},"viewBlockBy":{"type":"string","nullable":true}},"additionalProperties":false};

function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "viewFeedSubscriber") || (key0 === "viewFeedSubscription")) || (key0 === "viewFriend")) || (key0 === "viewFriendOf")) || (key0 === "viewBlock")) || (key0 === "viewBlockBy"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.viewFeedSubscriber !== undefined){
let data0 = data.viewFeedSubscriber;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewFeedSubscriber",schemaPath:"#/properties/viewFeedSubscriber/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["viewFeedSubscriber"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFeedSubscription !== undefined){
let data1 = data.viewFeedSubscription;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewFeedSubscription",schemaPath:"#/properties/viewFeedSubscription/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["viewFeedSubscription"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriend !== undefined){
let data2 = data.viewFriend;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewFriend",schemaPath:"#/properties/viewFriend/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["viewFriend"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriendOf !== undefined){
let data3 = data.viewFriendOf;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewFriendOf",schemaPath:"#/properties/viewFriendOf/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["viewFriendOf"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewBlock !== undefined){
let data4 = data.viewBlock;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewBlock",schemaPath:"#/properties/viewBlock/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["viewBlock"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewBlockBy !== undefined){
let data5 = data.viewBlockBy;
const _errs17 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate12.errors = [{instancePath:instancePath+"/viewBlockBy",schemaPath:"#/properties/viewBlockBy/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["viewBlockBy"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
else {
validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate12.errors = vErrors;
return errors === 0;
}

export const FeedOperations = validate13;
const schema14 = {"type":"object","properties":{"add":{"type":"string","nullable":true}},"additionalProperties":false};

function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "add")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.add !== undefined){
let data0 = data.add;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate13.errors = [{instancePath:instancePath+"/add",schemaPath:"#/properties/add/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["add"] = coerced0;
}
}
}
}
}
}
else {
validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate13.errors = vErrors;
return errors === 0;
}

export const FriendOperations = validate14;
const schema15 = {"type":"object","properties":{"view":{"type":"string","nullable":true}},"additionalProperties":false};

function validate14(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "view")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate14.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
}
}
}
else {
validate14.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate14.errors = vErrors;
return errors === 0;
}

export const FriendGroupOperations = validate15;
const schema16 = {"type":"object","properties":{"view":{"type":"string","nullable":true}},"additionalProperties":false};

function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "view")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate15.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
}
}
}
else {
validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate15.errors = vErrors;
return errors === 0;
}

export const NodeNameOperations = validate16;
const schema17 = {"type":"object","properties":{"manage":{"type":"string","nullable":true}},"additionalProperties":false};

function validate16(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "manage")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.manage !== undefined){
let data0 = data.manage;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate16.errors = [{instancePath:instancePath+"/manage",schemaPath:"#/properties/manage/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["manage"] = coerced0;
}
}
}
}
}
}
else {
validate16.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate16.errors = vErrors;
return errors === 0;
}

export const PeopleOperations = validate17;
const schema18 = {"type":"object","properties":{"viewSubscribers":{"type":"string","nullable":true},"viewSubscriptions":{"type":"string","nullable":true},"viewFriends":{"type":"string","nullable":true},"viewFriendOfs":{"type":"string","nullable":true},"viewBlocked":{"type":"string","nullable":true},"viewBlockedBy":{"type":"string","nullable":true},"viewSubscribersTotal":{"type":"string","nullable":true},"viewSubscriptionsTotal":{"type":"string","nullable":true},"viewFriendsTotal":{"type":"string","nullable":true},"viewFriendOfsTotal":{"type":"string","nullable":true}},"additionalProperties":false};

function validate17(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema18.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.viewSubscribers !== undefined){
let data0 = data.viewSubscribers;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewSubscribers",schemaPath:"#/properties/viewSubscribers/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["viewSubscribers"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewSubscriptions !== undefined){
let data1 = data.viewSubscriptions;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewSubscriptions",schemaPath:"#/properties/viewSubscriptions/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["viewSubscriptions"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriends !== undefined){
let data2 = data.viewFriends;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewFriends",schemaPath:"#/properties/viewFriends/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["viewFriends"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriendOfs !== undefined){
let data3 = data.viewFriendOfs;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewFriendOfs",schemaPath:"#/properties/viewFriendOfs/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["viewFriendOfs"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewBlocked !== undefined){
let data4 = data.viewBlocked;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewBlocked",schemaPath:"#/properties/viewBlocked/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["viewBlocked"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewBlockedBy !== undefined){
let data5 = data.viewBlockedBy;
const _errs17 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewBlockedBy",schemaPath:"#/properties/viewBlockedBy/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["viewBlockedBy"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewSubscribersTotal !== undefined){
let data6 = data.viewSubscribersTotal;
const _errs20 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewSubscribersTotal",schemaPath:"#/properties/viewSubscribersTotal/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["viewSubscribersTotal"] = coerced6;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewSubscriptionsTotal !== undefined){
let data7 = data.viewSubscriptionsTotal;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewSubscriptionsTotal",schemaPath:"#/properties/viewSubscriptionsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["viewSubscriptionsTotal"] = coerced7;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriendsTotal !== undefined){
let data8 = data.viewFriendsTotal;
const _errs26 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewFriendsTotal",schemaPath:"#/properties/viewFriendsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["viewFriendsTotal"] = coerced8;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewFriendOfsTotal !== undefined){
let data9 = data.viewFriendOfsTotal;
const _errs29 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate17.errors = [{instancePath:instancePath+"/viewFriendOfsTotal",schemaPath:"#/properties/viewFriendOfsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["viewFriendOfsTotal"] = coerced9;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate17.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate17.errors = vErrors;
return errors === 0;
}

export const PostingOperations = validate18;
const schema19 = {"type":"object","properties":{"view":{"type":"string","nullable":true},"edit":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true},"viewComments":{"type":"string","nullable":true},"addComment":{"type":"string","nullable":true},"overrideComment":{"type":"string","nullable":true},"viewReactions":{"type":"string","nullable":true},"viewNegativeReactions":{"type":"string","nullable":true},"viewReactionTotals":{"type":"string","nullable":true},"viewNegativeReactionTotals":{"type":"string","nullable":true},"viewReactionRatios":{"type":"string","nullable":true},"viewNegativeReactionRatios":{"type":"string","nullable":true},"addReaction":{"type":"string","nullable":true},"addNegativeReaction":{"type":"string","nullable":true},"overrideReaction":{"type":"string","nullable":true},"overrideCommentReaction":{"type":"string","nullable":true}},"additionalProperties":false};

function validate18(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema19.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.edit !== undefined){
let data1 = data.edit;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/edit",schemaPath:"#/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["edit"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data2 = data.delete;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["delete"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewComments !== undefined){
let data3 = data.viewComments;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewComments",schemaPath:"#/properties/viewComments/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["viewComments"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addComment !== undefined){
let data4 = data.addComment;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/addComment",schemaPath:"#/properties/addComment/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["addComment"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.overrideComment !== undefined){
let data5 = data.overrideComment;
const _errs17 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/overrideComment",schemaPath:"#/properties/overrideComment/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["overrideComment"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactions !== undefined){
let data6 = data.viewReactions;
const _errs20 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewReactions",schemaPath:"#/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["viewReactions"] = coerced6;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactions !== undefined){
let data7 = data.viewNegativeReactions;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewNegativeReactions",schemaPath:"#/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["viewNegativeReactions"] = coerced7;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactionTotals !== undefined){
let data8 = data.viewReactionTotals;
const _errs26 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewReactionTotals",schemaPath:"#/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["viewReactionTotals"] = coerced8;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactionTotals !== undefined){
let data9 = data.viewNegativeReactionTotals;
const _errs29 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewNegativeReactionTotals",schemaPath:"#/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["viewNegativeReactionTotals"] = coerced9;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewReactionRatios !== undefined){
let data10 = data.viewReactionRatios;
const _errs32 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewReactionRatios",schemaPath:"#/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["viewReactionRatios"] = coerced10;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewNegativeReactionRatios !== undefined){
let data11 = data.viewNegativeReactionRatios;
const _errs35 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/viewNegativeReactionRatios",schemaPath:"#/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data !== undefined){
data["viewNegativeReactionRatios"] = coerced11;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addReaction !== undefined){
let data12 = data.addReaction;
const _errs38 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/addReaction",schemaPath:"#/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data !== undefined){
data["addReaction"] = coerced12;
}
}
}
var valid0 = _errs38 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addNegativeReaction !== undefined){
let data13 = data.addNegativeReaction;
const _errs41 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/addNegativeReaction",schemaPath:"#/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["addNegativeReaction"] = coerced13;
}
}
}
var valid0 = _errs41 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.overrideReaction !== undefined){
let data14 = data.overrideReaction;
const _errs44 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/overrideReaction",schemaPath:"#/properties/overrideReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["overrideReaction"] = coerced14;
}
}
}
var valid0 = _errs44 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.overrideCommentReaction !== undefined){
let data15 = data.overrideCommentReaction;
const _errs47 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
validate18.errors = [{instancePath:instancePath+"/overrideCommentReaction",schemaPath:"#/properties/overrideCommentReaction/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data !== undefined){
data["overrideCommentReaction"] = coerced15;
}
}
}
var valid0 = _errs47 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate18.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate18.errors = vErrors;
return errors === 0;
}

export const PrivateMediaFileOperations = validate19;
const schema20 = {"type":"object","properties":{"view":{"type":"string","nullable":true}},"additionalProperties":false};

function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "view")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate19.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
}
}
}
else {
validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate19.errors = vErrors;
return errors === 0;
}

export const ProfileOperations = validate20;
const schema21 = {"type":"object","properties":{"edit":{"type":"string","nullable":true},"viewEmail":{"type":"string","nullable":true}},"additionalProperties":false};

function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "edit") || (key0 === "viewEmail"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.edit !== undefined){
let data0 = data.edit;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate20.errors = [{instancePath:instancePath+"/edit",schemaPath:"#/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["edit"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewEmail !== undefined){
let data1 = data.viewEmail;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate20.errors = [{instancePath:instancePath+"/viewEmail",schemaPath:"#/properties/viewEmail/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["viewEmail"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate20.errors = vErrors;
return errors === 0;
}

export const ReactionOperations = validate21;
const schema22 = {"type":"object","properties":{"view":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true}},"additionalProperties":false};

function validate21(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "view") || (key0 === "delete"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate21.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data1 = data.delete;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate21.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["delete"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate21.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate21.errors = vErrors;
return errors === 0;
}

export const StoryOperations = validate22;
const schema23 = {"type":"object","properties":{"edit":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true}},"additionalProperties":false};

function validate22(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "edit") || (key0 === "delete"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.edit !== undefined){
let data0 = data.edit;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate22.errors = [{instancePath:instancePath+"/edit",schemaPath:"#/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["edit"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data1 = data.delete;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate22.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["delete"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate22.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate22.errors = vErrors;
return errors === 0;
}

export const SubscriberOperations = validate23;
const schema24 = {"type":"object","properties":{"view":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true}},"additionalProperties":false};

function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "view") || (key0 === "delete"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate23.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data1 = data.delete;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate23.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["delete"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate23.errors = vErrors;
return errors === 0;
}

export const SubscriptionOperations = validate24;
const schema25 = {"type":"object","properties":{"view":{"type":"string","nullable":true},"delete":{"type":"string","nullable":true}},"additionalProperties":false};

function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "view") || (key0 === "delete"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.view !== undefined){
let data0 = data.view;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate24.errors = [{instancePath:instancePath+"/view",schemaPath:"#/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["view"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data1 = data.delete;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate24.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["delete"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate24.errors = vErrors;
return errors === 0;
}

export const AcceptedReactions = validate25;
const schema26 = {"type":"object","properties":{"positive":{"type":"string"},"negative":{"type":"string"}},"required":["positive","negative"],"additionalProperties":false};

function validate25(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.positive === undefined) && (missing0 = "positive")) || ((data.negative === undefined) && (missing0 = "negative"))){
validate25.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "positive") || (key0 === "negative"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.positive !== undefined){
let data0 = data.positive;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate25.errors = [{instancePath:instancePath+"/positive",schemaPath:"#/properties/positive/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["positive"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.negative !== undefined){
let data1 = data.negative;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate25.errors = [{instancePath:instancePath+"/negative",schemaPath:"#/properties/negative/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["negative"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate25.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate25.errors = vErrors;
return errors === 0;
}

export const AsyncOperationCreated = validate26;
const schema27 = {"type":"object","properties":{"id":{"type":"string"}},"required":["id"],"additionalProperties":false};

function validate26(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.id === undefined) && (missing0 = "id")){
validate26.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "id")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate26.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
}
}
}
}
else {
validate26.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate26.errors = vErrors;
return errors === 0;
}

export const AvatarImage = validate27;
const schema28 = {"type":"object","properties":{"mediaId":{"type":"string"},"path":{"type":"string"},"width":{"type":"integer","nullable":true},"height":{"type":"integer","nullable":true},"shape":{"type":"string","nullable":true}},"required":["mediaId","path"],"additionalProperties":false};

function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.mediaId === undefined) && (missing0 = "mediaId")) || ((data.path === undefined) && (missing0 = "path"))){
validate27.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((key0 === "mediaId") || (key0 === "path")) || (key0 === "width")) || (key0 === "height")) || (key0 === "shape"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.mediaId !== undefined){
let data0 = data.mediaId;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate27.errors = [{instancePath:instancePath+"/mediaId",schemaPath:"#/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["mediaId"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.path !== undefined){
let data1 = data.path;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate27.errors = [{instancePath:instancePath+"/path",schemaPath:"#/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["path"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.width !== undefined){
let data2 = data.width;
const _errs6 = errors;
if((!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate27.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["width"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.height !== undefined){
let data3 = data.height;
const _errs9 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate27.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["height"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.shape !== undefined){
let data4 = data.shape;
const _errs12 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate27.errors = [{instancePath:instancePath+"/shape",schemaPath:"#/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["shape"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
else {
validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate27.errors = vErrors;
return errors === 0;
}

export const AvatarInfo = validate28;
const schema29 = {"type":"object","properties":{"id":{"type":"string"},"mediaId":{"type":"string"},"path":{"type":"string"},"width":{"type":"integer","nullable":true},"height":{"type":"integer","nullable":true},"shape":{"type":"string","nullable":true},"ordinal":{"type":"integer"}},"required":["id","mediaId","path","ordinal"],"additionalProperties":false};

function validate28(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.mediaId === undefined) && (missing0 = "mediaId"))) || ((data.path === undefined) && (missing0 = "path"))) || ((data.ordinal === undefined) && (missing0 = "ordinal"))){
validate28.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "id") || (key0 === "mediaId")) || (key0 === "path")) || (key0 === "width")) || (key0 === "height")) || (key0 === "shape")) || (key0 === "ordinal"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate28.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.mediaId !== undefined){
let data1 = data.mediaId;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate28.errors = [{instancePath:instancePath+"/mediaId",schemaPath:"#/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["mediaId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.path !== undefined){
let data2 = data.path;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate28.errors = [{instancePath:instancePath+"/path",schemaPath:"#/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["path"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.width !== undefined){
let data3 = data.width;
const _errs8 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate28.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["width"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.height !== undefined){
let data4 = data.height;
const _errs11 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate28.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["height"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.shape !== undefined){
let data5 = data.shape;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate28.errors = [{instancePath:instancePath+"/shape",schemaPath:"#/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["shape"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ordinal !== undefined){
let data6 = data.ordinal;
const _errs17 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate28.errors = [{instancePath:instancePath+"/ordinal",schemaPath:"#/properties/ordinal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["ordinal"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate28.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate28.errors = vErrors;
return errors === 0;
}

export const AvatarInfoArray = validate29;
const schema30 = {"type":"array","items":{"$ref":"node#/definitions/AvatarInfo"}};

function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if(((((data0.id === undefined) && (missing0 = "id")) || ((data0.mediaId === undefined) && (missing0 = "mediaId"))) || ((data0.path === undefined) && (missing0 = "path"))) || ((data0.ordinal === undefined) && (missing0 = "ordinal"))){
validate29.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/AvatarInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!(((((((key0 === "id") || (key0 === "mediaId")) || (key0 === "path")) || (key0 === "width")) || (key0 === "height")) || (key0 === "shape")) || (key0 === "ordinal"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.id !== undefined){
let data1 = data0.id;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/id",schemaPath:"node#/definitions/AvatarInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["id"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.mediaId !== undefined){
let data2 = data0.mediaId;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/mediaId",schemaPath:"node#/definitions/AvatarInfo/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["mediaId"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.path !== undefined){
let data3 = data0.path;
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/path",schemaPath:"node#/definitions/AvatarInfo/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data0 !== undefined){
data0["path"] = coerced3;
}
}
}
var valid2 = _errs9 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.width !== undefined){
let data4 = data0.width;
const _errs11 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/width",schemaPath:"node#/definitions/AvatarInfo/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data0 !== undefined){
data0["width"] = coerced4;
}
}
}
var valid2 = _errs11 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.height !== undefined){
let data5 = data0.height;
const _errs14 = errors;
if((!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/height",schemaPath:"node#/definitions/AvatarInfo/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data0 !== undefined){
data0["height"] = coerced5;
}
}
}
var valid2 = _errs14 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.shape !== undefined){
let data6 = data0.shape;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/shape",schemaPath:"node#/definitions/AvatarInfo/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data0 !== undefined){
data0["shape"] = coerced6;
}
}
}
var valid2 = _errs17 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.ordinal !== undefined){
let data7 = data0.ordinal;
const _errs20 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0+"/ordinal",schemaPath:"node#/definitions/AvatarInfo/properties/ordinal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data0 !== undefined){
data0["ordinal"] = coerced7;
}
}
}
var valid2 = _errs20 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate29.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/AvatarInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate29.errors = vErrors;
return errors === 0;
}

export const AvatarOrdinal = validate30;
const schema32 = {"type":"object","properties":{"id":{"type":"string"},"ordinal":{"type":"integer"}},"required":["id","ordinal"],"additionalProperties":false};

function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.id === undefined) && (missing0 = "id")) || ((data.ordinal === undefined) && (missing0 = "ordinal"))){
validate30.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "id") || (key0 === "ordinal"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate30.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ordinal !== undefined){
let data1 = data.ordinal;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate30.errors = [{instancePath:instancePath+"/ordinal",schemaPath:"#/properties/ordinal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ordinal"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate30.errors = vErrors;
return errors === 0;
}

export const AvatarOrdinalArray = validate31;
const schema33 = {"type":"array","items":{"$ref":"node#/definitions/AvatarOrdinal"}};

function validate31(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate31.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if(((data0.id === undefined) && (missing0 = "id")) || ((data0.ordinal === undefined) && (missing0 = "ordinal"))){
validate31.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/AvatarOrdinal/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!((key0 === "id") || (key0 === "ordinal"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.id !== undefined){
let data1 = data0.id;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate31.errors = [{instancePath:instancePath+"/" + i0+"/id",schemaPath:"node#/definitions/AvatarOrdinal/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["id"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.ordinal !== undefined){
let data2 = data0.ordinal;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate31.errors = [{instancePath:instancePath+"/" + i0+"/ordinal",schemaPath:"node#/definitions/AvatarOrdinal/properties/ordinal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["ordinal"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
else {
validate31.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/AvatarOrdinal/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate31.errors = vErrors;
return errors === 0;
}

export const BlockedInstantInfo = validate32;
const schema35 = {"type":"object","properties":{"id":{"type":"string"},"storyType":{"type":"string"},"entryId":{"type":"string","nullable":true},"remoteNodeName":{"type":"string","nullable":true},"remotePostingId":{"type":"string","nullable":true},"remoteOwnerName":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true}},"required":["id","storyType","createdAt"],"additionalProperties":false};

function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.id === undefined) && (missing0 = "id")) || ((data.storyType === undefined) && (missing0 = "storyType"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate32.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((((key0 === "id") || (key0 === "storyType")) || (key0 === "entryId")) || (key0 === "remoteNodeName")) || (key0 === "remotePostingId")) || (key0 === "remoteOwnerName")) || (key0 === "createdAt")) || (key0 === "deadline"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate32.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.storyType !== undefined){
let data1 = data.storyType;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate32.errors = [{instancePath:instancePath+"/storyType",schemaPath:"#/properties/storyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["storyType"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.entryId !== undefined){
let data2 = data.entryId;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate32.errors = [{instancePath:instancePath+"/entryId",schemaPath:"#/properties/entryId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["entryId"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteNodeName !== undefined){
let data3 = data.remoteNodeName;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate32.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["remoteNodeName"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingId !== undefined){
let data4 = data.remotePostingId;
const _errs12 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate32.errors = [{instancePath:instancePath+"/remotePostingId",schemaPath:"#/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["remotePostingId"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteOwnerName !== undefined){
let data5 = data.remoteOwnerName;
const _errs15 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate32.errors = [{instancePath:instancePath+"/remoteOwnerName",schemaPath:"#/properties/remoteOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["remoteOwnerName"] = coerced5;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data6 = data.createdAt;
const _errs18 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate32.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["createdAt"] = coerced6;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data7 = data.deadline;
const _errs20 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate32.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["deadline"] = coerced7;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
else {
validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate32.errors = vErrors;
return errors === 0;
}

export const BlockedInstantInfoArray = validate33;
const schema36 = {"type":"array","items":{"$ref":"node#/definitions/BlockedInstantInfo"}};

function validate33(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate33.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if((((data0.id === undefined) && (missing0 = "id")) || ((data0.storyType === undefined) && (missing0 = "storyType"))) || ((data0.createdAt === undefined) && (missing0 = "createdAt"))){
validate33.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/BlockedInstantInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!((((((((key0 === "id") || (key0 === "storyType")) || (key0 === "entryId")) || (key0 === "remoteNodeName")) || (key0 === "remotePostingId")) || (key0 === "remoteOwnerName")) || (key0 === "createdAt")) || (key0 === "deadline"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.id !== undefined){
let data1 = data0.id;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/id",schemaPath:"node#/definitions/BlockedInstantInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["id"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.storyType !== undefined){
let data2 = data0.storyType;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/storyType",schemaPath:"node#/definitions/BlockedInstantInfo/properties/storyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["storyType"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.entryId !== undefined){
let data3 = data0.entryId;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/entryId",schemaPath:"node#/definitions/BlockedInstantInfo/properties/entryId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data0 !== undefined){
data0["entryId"] = coerced3;
}
}
}
var valid2 = _errs9 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.remoteNodeName !== undefined){
let data4 = data0.remoteNodeName;
const _errs12 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/remoteNodeName",schemaPath:"node#/definitions/BlockedInstantInfo/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data0 !== undefined){
data0["remoteNodeName"] = coerced4;
}
}
}
var valid2 = _errs12 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.remotePostingId !== undefined){
let data5 = data0.remotePostingId;
const _errs15 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/remotePostingId",schemaPath:"node#/definitions/BlockedInstantInfo/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data0 !== undefined){
data0["remotePostingId"] = coerced5;
}
}
}
var valid2 = _errs15 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.remoteOwnerName !== undefined){
let data6 = data0.remoteOwnerName;
const _errs18 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/remoteOwnerName",schemaPath:"node#/definitions/BlockedInstantInfo/properties/remoteOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data0 !== undefined){
data0["remoteOwnerName"] = coerced6;
}
}
}
var valid2 = _errs18 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.createdAt !== undefined){
let data7 = data0.createdAt;
const _errs21 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/createdAt",schemaPath:"node#/definitions/BlockedInstantInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data0 !== undefined){
data0["createdAt"] = coerced7;
}
}
}
var valid2 = _errs21 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.deadline !== undefined){
let data8 = data0.deadline;
const _errs23 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0+"/deadline",schemaPath:"node#/definitions/BlockedInstantInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data0 !== undefined){
data0["deadline"] = coerced8;
}
}
}
var valid2 = _errs23 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
}
}
}
}
}
}
else {
validate33.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/BlockedInstantInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate33.errors = vErrors;
return errors === 0;
}

export const BlockedPostingInstantInfo = validate34;
const schema38 = {"type":"object","properties":{"id":{"type":"string"},"storyType":{"type":"string"},"remoteOwnerName":{"type":"string","nullable":true},"deadline":{"type":"integer","nullable":true}},"required":["id","storyType"],"additionalProperties":false};

function validate34(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.id === undefined) && (missing0 = "id")) || ((data.storyType === undefined) && (missing0 = "storyType"))){
validate34.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "id") || (key0 === "storyType")) || (key0 === "remoteOwnerName")) || (key0 === "deadline"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate34.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.storyType !== undefined){
let data1 = data.storyType;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate34.errors = [{instancePath:instancePath+"/storyType",schemaPath:"#/properties/storyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["storyType"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteOwnerName !== undefined){
let data2 = data.remoteOwnerName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate34.errors = [{instancePath:instancePath+"/remoteOwnerName",schemaPath:"#/properties/remoteOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["remoteOwnerName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data3 = data.deadline;
const _errs9 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate34.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["deadline"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate34.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate34.errors = vErrors;
return errors === 0;
}

export const BlockedUsersChecksums = validate35;
const schema39 = {"type":"object","properties":{"visibility":{"type":"integer"}},"required":["visibility"],"additionalProperties":false};

function validate35(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.visibility === undefined) && (missing0 = "visibility")){
validate35.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "visibility")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.visibility !== undefined){
let data0 = data.visibility;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate35.errors = [{instancePath:instancePath+"/visibility",schemaPath:"#/properties/visibility/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["visibility"] = coerced0;
}
}
}
}
}
}
}
else {
validate35.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate35.errors = vErrors;
return errors === 0;
}

export const CarteInfo = validate36;
const schema40 = {"type":"object","properties":{"carte":{"type":"string"},"beginning":{"type":"integer"},"deadline":{"type":"integer"},"nodeName":{"type":"string","nullable":true},"clientScope":{"type":"array","items":{"type":"string"},"nullable":true},"adminScope":{"type":"array","items":{"type":"string"},"nullable":true}},"required":["carte","beginning","deadline"],"additionalProperties":false};

function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.carte === undefined) && (missing0 = "carte")) || ((data.beginning === undefined) && (missing0 = "beginning"))) || ((data.deadline === undefined) && (missing0 = "deadline"))){
validate36.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "carte") || (key0 === "beginning")) || (key0 === "deadline")) || (key0 === "nodeName")) || (key0 === "clientScope")) || (key0 === "adminScope"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.carte !== undefined){
let data0 = data.carte;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate36.errors = [{instancePath:instancePath+"/carte",schemaPath:"#/properties/carte/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["carte"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.beginning !== undefined){
let data1 = data.beginning;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate36.errors = [{instancePath:instancePath+"/beginning",schemaPath:"#/properties/beginning/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["beginning"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data2 = data.deadline;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate36.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["deadline"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data3 = data.nodeName;
const _errs8 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate36.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["nodeName"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientScope !== undefined){
let data4 = data.clientScope;
const _errs11 = errors;
if((!(Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "string" || dataType4 === "number"
              || dataType4 === "boolean" || data4 === null){
coerced4 = [data4];
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate36.errors = [{instancePath:instancePath+"/clientScope",schemaPath:"#/properties/clientScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["clientScope"] = coerced4;
}
}
}
if(errors === _errs11){
if(Array.isArray(data4)){
var valid1 = true;
const len0 = data4.length;
for(let i0=0; i0<len0; i0++){
let data5 = data4[i0];
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate36.errors = [{instancePath:instancePath+"/clientScope/" + i0,schemaPath:"#/properties/clientScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4[i0] = coerced5;
}
}
}
var valid1 = _errs14 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.adminScope !== undefined){
let data6 = data.adminScope;
const _errs16 = errors;
if((!(Array.isArray(data6))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((Array.isArray(data6)) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "string" || dataType6 === "number"
              || dataType6 === "boolean" || data6 === null){
coerced6 = [data6];
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate36.errors = [{instancePath:instancePath+"/adminScope",schemaPath:"#/properties/adminScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["adminScope"] = coerced6;
}
}
}
if(errors === _errs16){
if(Array.isArray(data6)){
var valid2 = true;
const len1 = data6.length;
for(let i1=0; i1<len1; i1++){
let data7 = data6[i1];
const _errs19 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
validate36.errors = [{instancePath:instancePath+"/adminScope/" + i1,schemaPath:"#/properties/adminScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data6 !== undefined){
data6[i1] = coerced7;
}
}
}
var valid2 = _errs19 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate36.errors = vErrors;
return errors === 0;
}

export const CarteSet = validate37;
const schema41 = {"type":"object","properties":{"cartesIp":{"type":"string","nullable":true},"cartes":{"type":"array","items":{"$ref":"node#/definitions/CarteInfo"}},"createdAt":{"type":"integer"}},"required":["cartes","createdAt"],"additionalProperties":false};

function validate37(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.cartes === undefined) && (missing0 = "cartes")) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate37.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "cartesIp") || (key0 === "cartes")) || (key0 === "createdAt"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.cartesIp !== undefined){
let data0 = data.cartesIp;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartesIp",schemaPath:"#/properties/cartesIp/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["cartesIp"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.cartes !== undefined){
let data1 = data.cartes;
const _errs5 = errors;
if(!(Array.isArray(data1))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(Array.isArray(data1)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "string" || dataType1 === "number"
              || dataType1 === "boolean" || data1 === null){
coerced1 = [data1];
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes",schemaPath:"#/properties/cartes/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["cartes"] = coerced1;
}
}
}
if(errors === _errs5){
if(Array.isArray(data1)){
var valid1 = true;
const len0 = data1.length;
for(let i0=0; i0<len0; i0++){
let data2 = data1[i0];
const _errs7 = errors;
const _errs8 = errors;
if(errors === _errs8){
if(data2 && typeof data2 == "object" && !Array.isArray(data2)){
let missing1;
if((((data2.carte === undefined) && (missing1 = "carte")) || ((data2.beginning === undefined) && (missing1 = "beginning"))) || ((data2.deadline === undefined) && (missing1 = "deadline"))){
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0,schemaPath:"node#/definitions/CarteInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs10 = errors;
for(const key1 in data2){
if(!((((((key1 === "carte") || (key1 === "beginning")) || (key1 === "deadline")) || (key1 === "nodeName")) || (key1 === "clientScope")) || (key1 === "adminScope"))){
delete data2[key1];
}
}
if(_errs10 === errors){
if(data2.carte !== undefined){
let data3 = data2.carte;
const _errs11 = errors;
if(typeof data3 !== "string"){
let dataType2 = typeof data3;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType2 = typeof data3;
if(typeof data3 === "string"){
coerced2 = data3;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data3;
}
else if(data3 === null){
coerced2 = "";
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/carte",schemaPath:"node#/definitions/CarteInfo/properties/carte/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data3 = coerced2;
if(data2 !== undefined){
data2["carte"] = coerced2;
}
}
}
var valid3 = _errs11 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.beginning !== undefined){
let data4 = data2.beginning;
const _errs13 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data4 === null
              || (dataType3 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced3 = +data4;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/beginning",schemaPath:"node#/definitions/CarteInfo/properties/beginning/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data2 !== undefined){
data2["beginning"] = coerced3;
}
}
}
var valid3 = _errs13 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.deadline !== undefined){
let data5 = data2.deadline;
const _errs15 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data5 === null
              || (dataType4 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced4 = +data5;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/deadline",schemaPath:"node#/definitions/CarteInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data2 !== undefined){
data2["deadline"] = coerced4;
}
}
}
var valid3 = _errs15 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.nodeName !== undefined){
let data6 = data2.nodeName;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data6;
}
else if(data6 === null){
coerced5 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced5 = null;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/nodeName",schemaPath:"node#/definitions/CarteInfo/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data2 !== undefined){
data2["nodeName"] = coerced5;
}
}
}
var valid3 = _errs17 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.clientScope !== undefined){
let data7 = data2.clientScope;
const _errs20 = errors;
if((!(Array.isArray(data7))) && (data7 !== null)){
let dataType6 = typeof data7;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType6 = typeof data7;
if((Array.isArray(data7)) && (data7 === null)){
coerced6 = data7;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "string" || dataType6 === "number"
              || dataType6 === "boolean" || data7 === null){
coerced6 = [data7];
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced6 = null;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/clientScope",schemaPath:"node#/definitions/CarteInfo/properties/clientScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced6 !== undefined){
data7 = coerced6;
if(data2 !== undefined){
data2["clientScope"] = coerced6;
}
}
}
if(errors === _errs20){
if(Array.isArray(data7)){
var valid4 = true;
const len1 = data7.length;
for(let i1=0; i1<len1; i1++){
let data8 = data7[i1];
const _errs23 = errors;
if(typeof data8 !== "string"){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if(typeof data8 === "string"){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data8;
}
else if(data8 === null){
coerced7 = "";
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/clientScope/" + i1,schemaPath:"node#/definitions/CarteInfo/properties/clientScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data7 !== undefined){
data7[i1] = coerced7;
}
}
}
var valid4 = _errs23 === errors;
if(!valid4){
break;
}
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.adminScope !== undefined){
let data9 = data2.adminScope;
const _errs25 = errors;
if((!(Array.isArray(data9))) && (data9 !== null)){
let dataType8 = typeof data9;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType8 = typeof data9;
if((Array.isArray(data9)) && (data9 === null)){
coerced8 = data9;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "string" || dataType8 === "number"
              || dataType8 === "boolean" || data9 === null){
coerced8 = [data9];
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced8 = null;
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/adminScope",schemaPath:"node#/definitions/CarteInfo/properties/adminScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced8 !== undefined){
data9 = coerced8;
if(data2 !== undefined){
data2["adminScope"] = coerced8;
}
}
}
if(errors === _errs25){
if(Array.isArray(data9)){
var valid5 = true;
const len2 = data9.length;
for(let i2=0; i2<len2; i2++){
let data10 = data9[i2];
const _errs28 = errors;
if(typeof data10 !== "string"){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if(typeof data10 === "string"){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data10;
}
else if(data10 === null){
coerced9 = "";
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0+"/adminScope/" + i2,schemaPath:"node#/definitions/CarteInfo/properties/adminScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data9 !== undefined){
data9[i2] = coerced9;
}
}
}
var valid5 = _errs28 === errors;
if(!valid5){
break;
}
}
}
}
var valid3 = _errs25 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
}
else {
validate37.errors = [{instancePath:instancePath+"/cartes/" + i0,schemaPath:"node#/definitions/CarteInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs7 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data11 = data.createdAt;
const _errs30 = errors;
if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){
let dataType10 = typeof data11;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType10 = typeof data11;
if(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11))){
coerced10 = data11;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "boolean" || data11 === null
              || (dataType10 === "string" && data11 && data11 == +data11 && !(data11 % 1))){
coerced10 = +data11;
}
else {
validate37.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced10 !== undefined){
data11 = coerced10;
if(data !== undefined){
data["createdAt"] = coerced10;
}
}
}
var valid0 = _errs30 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate37.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate37.errors = vErrors;
return errors === 0;
}

export const CarteVerificationInfo = validate38;
const schema43 = {"type":"object","properties":{"valid":{"type":"boolean"},"clientName":{"type":"string","nullable":true},"clientScope":{"type":"array","items":{"type":"string"},"nullable":true},"adminScope":{"type":"array","items":{"type":"string"},"nullable":true},"errorCode":{"type":"string","nullable":true},"errorMessage":{"type":"string","nullable":true}},"required":["valid"],"additionalProperties":false};

function validate38(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.valid === undefined) && (missing0 = "valid")){
validate38.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "valid") || (key0 === "clientName")) || (key0 === "clientScope")) || (key0 === "adminScope")) || (key0 === "errorCode")) || (key0 === "errorMessage"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.valid !== undefined){
let data0 = data.valid;
const _errs2 = errors;
if(typeof data0 !== "boolean"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "boolean"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else {
validate38.errors = [{instancePath:instancePath+"/valid",schemaPath:"#/properties/valid/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["valid"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientName !== undefined){
let data1 = data.clientName;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate38.errors = [{instancePath:instancePath+"/clientName",schemaPath:"#/properties/clientName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["clientName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientScope !== undefined){
let data2 = data.clientScope;
const _errs7 = errors;
if((!(Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate38.errors = [{instancePath:instancePath+"/clientScope",schemaPath:"#/properties/clientScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["clientScope"] = coerced2;
}
}
}
if(errors === _errs7){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
let data3 = data2[i0];
const _errs10 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate38.errors = [{instancePath:instancePath+"/clientScope/" + i0,schemaPath:"#/properties/clientScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2[i0] = coerced3;
}
}
}
var valid1 = _errs10 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.adminScope !== undefined){
let data4 = data.adminScope;
const _errs12 = errors;
if((!(Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "string" || dataType4 === "number"
              || dataType4 === "boolean" || data4 === null){
coerced4 = [data4];
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate38.errors = [{instancePath:instancePath+"/adminScope",schemaPath:"#/properties/adminScope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["adminScope"] = coerced4;
}
}
}
if(errors === _errs12){
if(Array.isArray(data4)){
var valid2 = true;
const len1 = data4.length;
for(let i1=0; i1<len1; i1++){
let data5 = data4[i1];
const _errs15 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate38.errors = [{instancePath:instancePath+"/adminScope/" + i1,schemaPath:"#/properties/adminScope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4[i1] = coerced5;
}
}
}
var valid2 = _errs15 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorCode !== undefined){
let data6 = data.errorCode;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate38.errors = [{instancePath:instancePath+"/errorCode",schemaPath:"#/properties/errorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["errorCode"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorMessage !== undefined){
let data7 = data.errorMessage;
const _errs20 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate38.errors = [{instancePath:instancePath+"/errorMessage",schemaPath:"#/properties/errorMessage/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["errorMessage"] = coerced7;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate38.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate38.errors = vErrors;
return errors === 0;
}

export const ClientReactionInfo = validate39;
const schema44 = {"type":"object","properties":{"negative":{"type":"boolean"},"emoji":{"type":"integer"},"createdAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true}},"required":["negative","emoji","createdAt"],"additionalProperties":false};

function validate39(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.negative === undefined) && (missing0 = "negative")) || ((data.emoji === undefined) && (missing0 = "emoji"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate39.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "negative") || (key0 === "emoji")) || (key0 === "createdAt")) || (key0 === "deadline"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.negative !== undefined){
let data0 = data.negative;
const _errs2 = errors;
if(typeof data0 !== "boolean"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "boolean"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else {
validate39.errors = [{instancePath:instancePath+"/negative",schemaPath:"#/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["negative"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.emoji !== undefined){
let data1 = data.emoji;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate39.errors = [{instancePath:instancePath+"/emoji",schemaPath:"#/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["emoji"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data2 = data.createdAt;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate39.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["createdAt"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data3 = data.deadline;
const _errs8 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate39.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["deadline"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate39.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate39.errors = vErrors;
return errors === 0;
}

export const CommentTotalInfo = validate40;
const schema45 = {"type":"object","properties":{"total":{"type":"integer"}},"required":["total"],"additionalProperties":false};

function validate40(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.total === undefined) && (missing0 = "total")){
validate40.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "total")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.total !== undefined){
let data0 = data.total;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate40.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["total"] = coerced0;
}
}
}
}
}
}
}
else {
validate40.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate40.errors = vErrors;
return errors === 0;
}

export const ContactInfo = validate41;
const schema46 = {"type":"object","properties":{"nodeName":{"type":"string"},"fullName":{"type":"string","nullable":true},"gender":{"type":"string","nullable":true},"avatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"closeness":{"type":"number"},"hasFeedSubscriber":{"type":"boolean","nullable":true},"hasFeedSubscription":{"type":"boolean","nullable":true},"hasFriend":{"type":"boolean","nullable":true},"hasFriendOf":{"type":"boolean","nullable":true},"hasBlock":{"type":"boolean","nullable":true},"hasBlockBy":{"type":"boolean","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/ContactOperations","type":"object","nullable":true},{"type":"null"}]},"ownerOperations":{"anyOf":[{"$ref":"node#/definitions/ContactOperations","type":"object","nullable":true},{"type":"null"}]},"adminOperations":{"anyOf":[{"$ref":"node#/definitions/ContactOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["nodeName","closeness"],"additionalProperties":false};

function validate41(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.nodeName === undefined) && (missing0 = "nodeName")) || ((data.closeness === undefined) && (missing0 = "closeness"))){
validate41.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema46.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate41.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.fullName !== undefined){
let data1 = data.fullName;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/fullName",schemaPath:"#/properties/fullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["fullName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.gender !== undefined){
let data2 = data.gender;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/gender",schemaPath:"#/properties/gender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["gender"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.avatar !== undefined){
let data3 = data.avatar;
const _errs10 = errors;
const _errs11 = errors;
let valid1 = false;
const _errs12 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err0 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["avatar"] = coerced3;
}
}
}
const _errs13 = errors;
if(errors === _errs13){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
let missing1;
if(((data3.mediaId === undefined) && (missing1 = "mediaId")) || ((data3.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs15 = errors;
for(const key1 in data3){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data3[key1];
}
}
if(_errs15 === errors){
if(data3.mediaId !== undefined){
let data4 = data3.mediaId;
const _errs16 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
const err2 = {instancePath:instancePath+"/avatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data3 !== undefined){
data3["mediaId"] = coerced4;
}
}
}
var valid3 = _errs16 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.path !== undefined){
let data5 = data3.path;
const _errs18 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
const err3 = {instancePath:instancePath+"/avatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data3 !== undefined){
data3["path"] = coerced5;
}
}
}
var valid3 = _errs18 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.width !== undefined){
let data6 = data3.width;
const _errs20 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err4 = {instancePath:instancePath+"/avatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data3 !== undefined){
data3["width"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.height !== undefined){
let data7 = data3.height;
const _errs23 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err5 = {instancePath:instancePath+"/avatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data3 !== undefined){
data3["height"] = coerced7;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.shape !== undefined){
let data8 = data3.shape;
const _errs26 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err6 = {instancePath:instancePath+"/avatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data3 !== undefined){
data3["shape"] = coerced8;
}
}
}
var valid3 = _errs26 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs12 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs31 = errors;
if(data3 !== null){
let dataType9 = typeof data3;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType9 = typeof data3;
if(data3 === null){
coerced9 = data3;
}
}
if(!(coerced9 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced9 = null;
}
else {
const err8 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced9 !== undefined){
data3 = coerced9;
if(data !== undefined){
data["avatar"] = coerced9;
}
}
}
var _valid0 = _errs31 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate41.errors = vErrors;
return false;
}
else {
errors = _errs11;
if(vErrors !== null){
if(_errs11){
vErrors.length = _errs11;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs10 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.closeness !== undefined){
let data9 = data.closeness;
const _errs33 = errors;
if(!((typeof data9 == "number") && (isFinite(data9)))){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((typeof data9 == "number") && (isFinite(data9))){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "boolean" || data9 === null
              || (dataType10 == "string" && data9 && data9 == +data9)){
coerced10 = +data9;
}
else {
validate41.errors = [{instancePath:instancePath+"/closeness",schemaPath:"#/properties/closeness/type",keyword:"type",params:{type: "number"},message:"must be number"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["closeness"] = coerced10;
}
}
}
var valid0 = _errs33 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasFeedSubscriber !== undefined){
let data10 = data.hasFeedSubscriber;
const _errs35 = errors;
if((typeof data10 !== "boolean") && (data10 !== null)){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if((typeof data10 === "boolean") && (data10 === null)){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(data10 === "false" || data10 === 0 || data10 === null){
coerced11 = false;
}
else if(data10 === "true" || data10 === 1){
coerced11 = true;
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced11 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasFeedSubscriber",schemaPath:"#/properties/hasFeedSubscriber/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["hasFeedSubscriber"] = coerced11;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasFeedSubscription !== undefined){
let data11 = data.hasFeedSubscription;
const _errs38 = errors;
if((typeof data11 !== "boolean") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "boolean") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(data11 === "false" || data11 === 0 || data11 === null){
coerced12 = false;
}
else if(data11 === "true" || data11 === 1){
coerced12 = true;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasFeedSubscription",schemaPath:"#/properties/hasFeedSubscription/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["hasFeedSubscription"] = coerced12;
}
}
}
var valid0 = _errs38 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasFriend !== undefined){
let data12 = data.hasFriend;
const _errs41 = errors;
if((typeof data12 !== "boolean") && (data12 !== null)){
let dataType13 = typeof data12;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType13 = typeof data12;
if((typeof data12 === "boolean") && (data12 === null)){
coerced13 = data12;
}
}
if(!(coerced13 !== undefined)){
if(data12 === "false" || data12 === 0 || data12 === null){
coerced13 = false;
}
else if(data12 === "true" || data12 === 1){
coerced13 = true;
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced13 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasFriend",schemaPath:"#/properties/hasFriend/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced13 !== undefined){
data12 = coerced13;
if(data !== undefined){
data["hasFriend"] = coerced13;
}
}
}
var valid0 = _errs41 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasFriendOf !== undefined){
let data13 = data.hasFriendOf;
const _errs44 = errors;
if((typeof data13 !== "boolean") && (data13 !== null)){
let dataType14 = typeof data13;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType14 = typeof data13;
if((typeof data13 === "boolean") && (data13 === null)){
coerced14 = data13;
}
}
if(!(coerced14 !== undefined)){
if(data13 === "false" || data13 === 0 || data13 === null){
coerced14 = false;
}
else if(data13 === "true" || data13 === 1){
coerced14 = true;
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced14 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasFriendOf",schemaPath:"#/properties/hasFriendOf/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced14 !== undefined){
data13 = coerced14;
if(data !== undefined){
data["hasFriendOf"] = coerced14;
}
}
}
var valid0 = _errs44 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasBlock !== undefined){
let data14 = data.hasBlock;
const _errs47 = errors;
if((typeof data14 !== "boolean") && (data14 !== null)){
let dataType15 = typeof data14;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType15 = typeof data14;
if((typeof data14 === "boolean") && (data14 === null)){
coerced15 = data14;
}
}
if(!(coerced15 !== undefined)){
if(data14 === "false" || data14 === 0 || data14 === null){
coerced15 = false;
}
else if(data14 === "true" || data14 === 1){
coerced15 = true;
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced15 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasBlock",schemaPath:"#/properties/hasBlock/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced15 !== undefined){
data14 = coerced15;
if(data !== undefined){
data["hasBlock"] = coerced15;
}
}
}
var valid0 = _errs47 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hasBlockBy !== undefined){
let data15 = data.hasBlockBy;
const _errs50 = errors;
if((typeof data15 !== "boolean") && (data15 !== null)){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType16 = typeof data15;
if((typeof data15 === "boolean") && (data15 === null)){
coerced16 = data15;
}
}
if(!(coerced16 !== undefined)){
if(data15 === "false" || data15 === 0 || data15 === null){
coerced16 = false;
}
else if(data15 === "true" || data15 === 1){
coerced16 = true;
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced16 = null;
}
else {
validate41.errors = [{instancePath:instancePath+"/hasBlockBy",schemaPath:"#/properties/hasBlockBy/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["hasBlockBy"] = coerced16;
}
}
}
var valid0 = _errs50 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data16 = data.operations;
const _errs53 = errors;
const _errs54 = errors;
let valid4 = false;
const _errs55 = errors;
if((!(data16 && typeof data16 == "object" && !Array.isArray(data16))) && (data16 !== null)){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType17 = typeof data16;
if((data16 && typeof data16 == "object" && !Array.isArray(data16)) && (data16 === null)){
coerced17 = data16;
}
}
if(!(coerced17 !== undefined)){
if(data16 === "" || data16 === 0 || data16 === false){
coerced17 = null;
}
else {
const err10 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["operations"] = coerced17;
}
}
}
const _errs56 = errors;
if(errors === _errs56){
if(data16 && typeof data16 == "object" && !Array.isArray(data16)){
const _errs58 = errors;
for(const key2 in data16){
if(!((((((key2 === "viewFeedSubscriber") || (key2 === "viewFeedSubscription")) || (key2 === "viewFriend")) || (key2 === "viewFriendOf")) || (key2 === "viewBlock")) || (key2 === "viewBlockBy"))){
delete data16[key2];
}
}
if(_errs58 === errors){
if(data16.viewFeedSubscriber !== undefined){
let data17 = data16.viewFeedSubscriber;
const _errs59 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data17;
}
else if(data17 === null){
coerced18 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced18 = null;
}
else {
const err11 = {instancePath:instancePath+"/operations/viewFeedSubscriber",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscriber/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data16 !== undefined){
data16["viewFeedSubscriber"] = coerced18;
}
}
}
var valid6 = _errs59 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.viewFeedSubscription !== undefined){
let data18 = data16.viewFeedSubscription;
const _errs62 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data18;
}
else if(data18 === null){
coerced19 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced19 = null;
}
else {
const err12 = {instancePath:instancePath+"/operations/viewFeedSubscription",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscription/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data16 !== undefined){
data16["viewFeedSubscription"] = coerced19;
}
}
}
var valid6 = _errs62 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.viewFriend !== undefined){
let data19 = data16.viewFriend;
const _errs65 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data19;
}
else if(data19 === null){
coerced20 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced20 = null;
}
else {
const err13 = {instancePath:instancePath+"/operations/viewFriend",schemaPath:"node#/definitions/ContactOperations/properties/viewFriend/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data16 !== undefined){
data16["viewFriend"] = coerced20;
}
}
}
var valid6 = _errs65 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.viewFriendOf !== undefined){
let data20 = data16.viewFriendOf;
const _errs68 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType21 = typeof data20;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType21 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced21 = data20;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 == "number" || dataType21 == "boolean"){
coerced21 = "" + data20;
}
else if(data20 === null){
coerced21 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced21 = null;
}
else {
const err14 = {instancePath:instancePath+"/operations/viewFriendOf",schemaPath:"node#/definitions/ContactOperations/properties/viewFriendOf/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced21 !== undefined){
data20 = coerced21;
if(data16 !== undefined){
data16["viewFriendOf"] = coerced21;
}
}
}
var valid6 = _errs68 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.viewBlock !== undefined){
let data21 = data16.viewBlock;
const _errs71 = errors;
if((typeof data21 !== "string") && (data21 !== null)){
let dataType22 = typeof data21;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType22 = typeof data21;
if((typeof data21 === "string") && (data21 === null)){
coerced22 = data21;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data21;
}
else if(data21 === null){
coerced22 = "";
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced22 = null;
}
else {
const err15 = {instancePath:instancePath+"/operations/viewBlock",schemaPath:"node#/definitions/ContactOperations/properties/viewBlock/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced22 !== undefined){
data21 = coerced22;
if(data16 !== undefined){
data16["viewBlock"] = coerced22;
}
}
}
var valid6 = _errs71 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.viewBlockBy !== undefined){
let data22 = data16.viewBlockBy;
const _errs74 = errors;
if((typeof data22 !== "string") && (data22 !== null)){
let dataType23 = typeof data22;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType23 = typeof data22;
if((typeof data22 === "string") && (data22 === null)){
coerced23 = data22;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data22;
}
else if(data22 === null){
coerced23 = "";
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced23 = null;
}
else {
const err16 = {instancePath:instancePath+"/operations/viewBlockBy",schemaPath:"node#/definitions/ContactOperations/properties/viewBlockBy/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced23 !== undefined){
data22 = coerced23;
if(data16 !== undefined){
data16["viewBlockBy"] = coerced23;
}
}
}
var valid6 = _errs74 === errors;
}
else {
var valid6 = true;
}
}
}
}
}
}
}
}
else {
const err17 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/ContactOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
var _valid1 = _errs55 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs79 = errors;
if(data16 !== null){
let dataType24 = typeof data16;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType24 = typeof data16;
if(data16 === null){
coerced24 = data16;
}
}
if(!(coerced24 !== undefined)){
if(data16 === "" || data16 === 0 || data16 === false){
coerced24 = null;
}
else {
const err18 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced24 !== undefined){
data16 = coerced24;
if(data !== undefined){
data["operations"] = coerced24;
}
}
}
var _valid1 = _errs79 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err19 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
validate41.errors = vErrors;
return false;
}
else {
errors = _errs54;
if(vErrors !== null){
if(_errs54){
vErrors.length = _errs54;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs53 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerOperations !== undefined){
let data23 = data.ownerOperations;
const _errs81 = errors;
const _errs82 = errors;
let valid7 = false;
const _errs83 = errors;
if((!(data23 && typeof data23 == "object" && !Array.isArray(data23))) && (data23 !== null)){
let dataType25 = typeof data23;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType25 = typeof data23;
if((data23 && typeof data23 == "object" && !Array.isArray(data23)) && (data23 === null)){
coerced25 = data23;
}
}
if(!(coerced25 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced25 = null;
}
else {
const err20 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced25 !== undefined){
data23 = coerced25;
if(data !== undefined){
data["ownerOperations"] = coerced25;
}
}
}
const _errs84 = errors;
if(errors === _errs84){
if(data23 && typeof data23 == "object" && !Array.isArray(data23)){
const _errs86 = errors;
for(const key3 in data23){
if(!((((((key3 === "viewFeedSubscriber") || (key3 === "viewFeedSubscription")) || (key3 === "viewFriend")) || (key3 === "viewFriendOf")) || (key3 === "viewBlock")) || (key3 === "viewBlockBy"))){
delete data23[key3];
}
}
if(_errs86 === errors){
if(data23.viewFeedSubscriber !== undefined){
let data24 = data23.viewFeedSubscriber;
const _errs87 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType26 = typeof data24;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType26 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced26 = data24;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 == "number" || dataType26 == "boolean"){
coerced26 = "" + data24;
}
else if(data24 === null){
coerced26 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced26 = null;
}
else {
const err21 = {instancePath:instancePath+"/ownerOperations/viewFeedSubscriber",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscriber/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced26 !== undefined){
data24 = coerced26;
if(data23 !== undefined){
data23["viewFeedSubscriber"] = coerced26;
}
}
}
var valid9 = _errs87 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.viewFeedSubscription !== undefined){
let data25 = data23.viewFeedSubscription;
const _errs90 = errors;
if((typeof data25 !== "string") && (data25 !== null)){
let dataType27 = typeof data25;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType27 = typeof data25;
if((typeof data25 === "string") && (data25 === null)){
coerced27 = data25;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 == "number" || dataType27 == "boolean"){
coerced27 = "" + data25;
}
else if(data25 === null){
coerced27 = "";
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced27 = null;
}
else {
const err22 = {instancePath:instancePath+"/ownerOperations/viewFeedSubscription",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscription/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced27 !== undefined){
data25 = coerced27;
if(data23 !== undefined){
data23["viewFeedSubscription"] = coerced27;
}
}
}
var valid9 = _errs90 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.viewFriend !== undefined){
let data26 = data23.viewFriend;
const _errs93 = errors;
if((typeof data26 !== "string") && (data26 !== null)){
let dataType28 = typeof data26;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType28 = typeof data26;
if((typeof data26 === "string") && (data26 === null)){
coerced28 = data26;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 == "number" || dataType28 == "boolean"){
coerced28 = "" + data26;
}
else if(data26 === null){
coerced28 = "";
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced28 = null;
}
else {
const err23 = {instancePath:instancePath+"/ownerOperations/viewFriend",schemaPath:"node#/definitions/ContactOperations/properties/viewFriend/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced28 !== undefined){
data26 = coerced28;
if(data23 !== undefined){
data23["viewFriend"] = coerced28;
}
}
}
var valid9 = _errs93 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.viewFriendOf !== undefined){
let data27 = data23.viewFriendOf;
const _errs96 = errors;
if((typeof data27 !== "string") && (data27 !== null)){
let dataType29 = typeof data27;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType29 = typeof data27;
if((typeof data27 === "string") && (data27 === null)){
coerced29 = data27;
}
}
if(!(coerced29 !== undefined)){
if(dataType29 == "number" || dataType29 == "boolean"){
coerced29 = "" + data27;
}
else if(data27 === null){
coerced29 = "";
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced29 = null;
}
else {
const err24 = {instancePath:instancePath+"/ownerOperations/viewFriendOf",schemaPath:"node#/definitions/ContactOperations/properties/viewFriendOf/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced29 !== undefined){
data27 = coerced29;
if(data23 !== undefined){
data23["viewFriendOf"] = coerced29;
}
}
}
var valid9 = _errs96 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.viewBlock !== undefined){
let data28 = data23.viewBlock;
const _errs99 = errors;
if((typeof data28 !== "string") && (data28 !== null)){
let dataType30 = typeof data28;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType30 = typeof data28;
if((typeof data28 === "string") && (data28 === null)){
coerced30 = data28;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data28;
}
else if(data28 === null){
coerced30 = "";
}
else if(data28 === "" || data28 === 0 || data28 === false){
coerced30 = null;
}
else {
const err25 = {instancePath:instancePath+"/ownerOperations/viewBlock",schemaPath:"node#/definitions/ContactOperations/properties/viewBlock/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
if(coerced30 !== undefined){
data28 = coerced30;
if(data23 !== undefined){
data23["viewBlock"] = coerced30;
}
}
}
var valid9 = _errs99 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.viewBlockBy !== undefined){
let data29 = data23.viewBlockBy;
const _errs102 = errors;
if((typeof data29 !== "string") && (data29 !== null)){
let dataType31 = typeof data29;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType31 = typeof data29;
if((typeof data29 === "string") && (data29 === null)){
coerced31 = data29;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data29;
}
else if(data29 === null){
coerced31 = "";
}
else if(data29 === "" || data29 === 0 || data29 === false){
coerced31 = null;
}
else {
const err26 = {instancePath:instancePath+"/ownerOperations/viewBlockBy",schemaPath:"node#/definitions/ContactOperations/properties/viewBlockBy/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced31 !== undefined){
data29 = coerced31;
if(data23 !== undefined){
data23["viewBlockBy"] = coerced31;
}
}
}
var valid9 = _errs102 === errors;
}
else {
var valid9 = true;
}
}
}
}
}
}
}
}
else {
const err27 = {instancePath:instancePath+"/ownerOperations",schemaPath:"node#/definitions/ContactOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
var _valid2 = _errs83 === errors;
valid7 = valid7 || _valid2;
if(!valid7){
const _errs107 = errors;
if(data23 !== null){
let dataType32 = typeof data23;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType32 = typeof data23;
if(data23 === null){
coerced32 = data23;
}
}
if(!(coerced32 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced32 = null;
}
else {
const err28 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced32 !== undefined){
data23 = coerced32;
if(data !== undefined){
data["ownerOperations"] = coerced32;
}
}
}
var _valid2 = _errs107 === errors;
valid7 = valid7 || _valid2;
}
if(!valid7){
const err29 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
validate41.errors = vErrors;
return false;
}
else {
errors = _errs82;
if(vErrors !== null){
if(_errs82){
vErrors.length = _errs82;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs81 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.adminOperations !== undefined){
let data30 = data.adminOperations;
const _errs109 = errors;
const _errs110 = errors;
let valid10 = false;
const _errs111 = errors;
if((!(data30 && typeof data30 == "object" && !Array.isArray(data30))) && (data30 !== null)){
let dataType33 = typeof data30;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType33 = typeof data30;
if((data30 && typeof data30 == "object" && !Array.isArray(data30)) && (data30 === null)){
coerced33 = data30;
}
}
if(!(coerced33 !== undefined)){
if(data30 === "" || data30 === 0 || data30 === false){
coerced33 = null;
}
else {
const err30 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
if(coerced33 !== undefined){
data30 = coerced33;
if(data !== undefined){
data["adminOperations"] = coerced33;
}
}
}
const _errs112 = errors;
if(errors === _errs112){
if(data30 && typeof data30 == "object" && !Array.isArray(data30)){
const _errs114 = errors;
for(const key4 in data30){
if(!((((((key4 === "viewFeedSubscriber") || (key4 === "viewFeedSubscription")) || (key4 === "viewFriend")) || (key4 === "viewFriendOf")) || (key4 === "viewBlock")) || (key4 === "viewBlockBy"))){
delete data30[key4];
}
}
if(_errs114 === errors){
if(data30.viewFeedSubscriber !== undefined){
let data31 = data30.viewFeedSubscriber;
const _errs115 = errors;
if((typeof data31 !== "string") && (data31 !== null)){
let dataType34 = typeof data31;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType34 = typeof data31;
if((typeof data31 === "string") && (data31 === null)){
coerced34 = data31;
}
}
if(!(coerced34 !== undefined)){
if(dataType34 == "number" || dataType34 == "boolean"){
coerced34 = "" + data31;
}
else if(data31 === null){
coerced34 = "";
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced34 = null;
}
else {
const err31 = {instancePath:instancePath+"/adminOperations/viewFeedSubscriber",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscriber/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
if(coerced34 !== undefined){
data31 = coerced34;
if(data30 !== undefined){
data30["viewFeedSubscriber"] = coerced34;
}
}
}
var valid12 = _errs115 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data30.viewFeedSubscription !== undefined){
let data32 = data30.viewFeedSubscription;
const _errs118 = errors;
if((typeof data32 !== "string") && (data32 !== null)){
let dataType35 = typeof data32;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType35 = typeof data32;
if((typeof data32 === "string") && (data32 === null)){
coerced35 = data32;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data32;
}
else if(data32 === null){
coerced35 = "";
}
else if(data32 === "" || data32 === 0 || data32 === false){
coerced35 = null;
}
else {
const err32 = {instancePath:instancePath+"/adminOperations/viewFeedSubscription",schemaPath:"node#/definitions/ContactOperations/properties/viewFeedSubscription/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(coerced35 !== undefined){
data32 = coerced35;
if(data30 !== undefined){
data30["viewFeedSubscription"] = coerced35;
}
}
}
var valid12 = _errs118 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data30.viewFriend !== undefined){
let data33 = data30.viewFriend;
const _errs121 = errors;
if((typeof data33 !== "string") && (data33 !== null)){
let dataType36 = typeof data33;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType36 = typeof data33;
if((typeof data33 === "string") && (data33 === null)){
coerced36 = data33;
}
}
if(!(coerced36 !== undefined)){
if(dataType36 == "number" || dataType36 == "boolean"){
coerced36 = "" + data33;
}
else if(data33 === null){
coerced36 = "";
}
else if(data33 === "" || data33 === 0 || data33 === false){
coerced36 = null;
}
else {
const err33 = {instancePath:instancePath+"/adminOperations/viewFriend",schemaPath:"node#/definitions/ContactOperations/properties/viewFriend/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(coerced36 !== undefined){
data33 = coerced36;
if(data30 !== undefined){
data30["viewFriend"] = coerced36;
}
}
}
var valid12 = _errs121 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data30.viewFriendOf !== undefined){
let data34 = data30.viewFriendOf;
const _errs124 = errors;
if((typeof data34 !== "string") && (data34 !== null)){
let dataType37 = typeof data34;
let coerced37 = undefined;
if(dataType37 == 'object' && Array.isArray(data34) && data34.length == 1){
data34 = data34[0];
dataType37 = typeof data34;
if((typeof data34 === "string") && (data34 === null)){
coerced37 = data34;
}
}
if(!(coerced37 !== undefined)){
if(dataType37 == "number" || dataType37 == "boolean"){
coerced37 = "" + data34;
}
else if(data34 === null){
coerced37 = "";
}
else if(data34 === "" || data34 === 0 || data34 === false){
coerced37 = null;
}
else {
const err34 = {instancePath:instancePath+"/adminOperations/viewFriendOf",schemaPath:"node#/definitions/ContactOperations/properties/viewFriendOf/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
if(coerced37 !== undefined){
data34 = coerced37;
if(data30 !== undefined){
data30["viewFriendOf"] = coerced37;
}
}
}
var valid12 = _errs124 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data30.viewBlock !== undefined){
let data35 = data30.viewBlock;
const _errs127 = errors;
if((typeof data35 !== "string") && (data35 !== null)){
let dataType38 = typeof data35;
let coerced38 = undefined;
if(dataType38 == 'object' && Array.isArray(data35) && data35.length == 1){
data35 = data35[0];
dataType38 = typeof data35;
if((typeof data35 === "string") && (data35 === null)){
coerced38 = data35;
}
}
if(!(coerced38 !== undefined)){
if(dataType38 == "number" || dataType38 == "boolean"){
coerced38 = "" + data35;
}
else if(data35 === null){
coerced38 = "";
}
else if(data35 === "" || data35 === 0 || data35 === false){
coerced38 = null;
}
else {
const err35 = {instancePath:instancePath+"/adminOperations/viewBlock",schemaPath:"node#/definitions/ContactOperations/properties/viewBlock/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(coerced38 !== undefined){
data35 = coerced38;
if(data30 !== undefined){
data30["viewBlock"] = coerced38;
}
}
}
var valid12 = _errs127 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data30.viewBlockBy !== undefined){
let data36 = data30.viewBlockBy;
const _errs130 = errors;
if((typeof data36 !== "string") && (data36 !== null)){
let dataType39 = typeof data36;
let coerced39 = undefined;
if(dataType39 == 'object' && Array.isArray(data36) && data36.length == 1){
data36 = data36[0];
dataType39 = typeof data36;
if((typeof data36 === "string") && (data36 === null)){
coerced39 = data36;
}
}
if(!(coerced39 !== undefined)){
if(dataType39 == "number" || dataType39 == "boolean"){
coerced39 = "" + data36;
}
else if(data36 === null){
coerced39 = "";
}
else if(data36 === "" || data36 === 0 || data36 === false){
coerced39 = null;
}
else {
const err36 = {instancePath:instancePath+"/adminOperations/viewBlockBy",schemaPath:"node#/definitions/ContactOperations/properties/viewBlockBy/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(coerced39 !== undefined){
data36 = coerced39;
if(data30 !== undefined){
data30["viewBlockBy"] = coerced39;
}
}
}
var valid12 = _errs130 === errors;
}
else {
var valid12 = true;
}
}
}
}
}
}
}
}
else {
const err37 = {instancePath:instancePath+"/adminOperations",schemaPath:"node#/definitions/ContactOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
var _valid3 = _errs111 === errors;
valid10 = valid10 || _valid3;
if(!valid10){
const _errs135 = errors;
if(data30 !== null){
let dataType40 = typeof data30;
let coerced40 = undefined;
if(dataType40 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType40 = typeof data30;
if(data30 === null){
coerced40 = data30;
}
}
if(!(coerced40 !== undefined)){
if(data30 === "" || data30 === 0 || data30 === false){
coerced40 = null;
}
else {
const err38 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
if(coerced40 !== undefined){
data30 = coerced40;
if(data !== undefined){
data["adminOperations"] = coerced40;
}
}
}
var _valid3 = _errs135 === errors;
valid10 = valid10 || _valid3;
}
if(!valid10){
const err39 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
validate41.errors = vErrors;
return false;
}
else {
errors = _errs110;
if(vErrors !== null){
if(_errs110){
vErrors.length = _errs110;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs109 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate41.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate41.errors = vErrors;
return errors === 0;
}

export const ContactInfoArray = validate42;
const schema51 = {"type":"array","items":{"$ref":"node#/definitions/ContactInfo"}};

function validate42(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate42.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate41(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate42.errors = vErrors;
return errors === 0;
}

export const CredentialsCreated = validate44;
const schema52 = {"type":"object","properties":{"created":{"type":"boolean"}},"required":["created"],"additionalProperties":false};

function validate44(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.created === undefined) && (missing0 = "created")){
validate44.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "created")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.created !== undefined){
let data0 = data.created;
if(typeof data0 !== "boolean"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "boolean"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else {
validate44.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["created"] = coerced0;
}
}
}
}
}
}
}
else {
validate44.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate44.errors = vErrors;
return errors === 0;
}

export const DeleteNodeStatus = validate45;
const schema53 = {"type":"object","properties":{"requested":{"type":"boolean"}},"required":["requested"],"additionalProperties":false};

function validate45(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.requested === undefined) && (missing0 = "requested")){
validate45.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "requested")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.requested !== undefined){
let data0 = data.requested;
if(typeof data0 !== "boolean"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "boolean"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else {
validate45.errors = [{instancePath:instancePath+"/requested",schemaPath:"#/properties/requested/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["requested"] = coerced0;
}
}
}
}
}
}
}
else {
validate45.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate45.errors = vErrors;
return errors === 0;
}

export const DomainAvailable = validate46;
const schema54 = {"type":"object","properties":{"name":{"type":"string"}},"required":["name"],"additionalProperties":false};

function validate46(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.name === undefined) && (missing0 = "name")){
validate46.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "name")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate46.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
}
}
}
}
else {
validate46.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate46.errors = vErrors;
return errors === 0;
}

export const DomainInfo = validate47;
const schema55 = {"type":"object","properties":{"name":{"type":"string"},"nodeId":{"type":"string"},"createdAt":{"type":"integer"}},"required":["name","nodeId","createdAt"],"additionalProperties":false};

function validate47(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.name === undefined) && (missing0 = "name")) || ((data.nodeId === undefined) && (missing0 = "nodeId"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate47.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "name") || (key0 === "nodeId")) || (key0 === "createdAt"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate47.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeId !== undefined){
let data1 = data.nodeId;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate47.errors = [{instancePath:instancePath+"/nodeId",schemaPath:"#/properties/nodeId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["nodeId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data2 = data.createdAt;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate47.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["createdAt"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate47.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate47.errors = vErrors;
return errors === 0;
}

export const DomainInfoArray = validate48;
const schema56 = {"type":"array","items":{"$ref":"node#/definitions/DomainInfo"}};

function validate48(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate48.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if((((data0.name === undefined) && (missing0 = "name")) || ((data0.nodeId === undefined) && (missing0 = "nodeId"))) || ((data0.createdAt === undefined) && (missing0 = "createdAt"))){
validate48.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/DomainInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!(((key0 === "name") || (key0 === "nodeId")) || (key0 === "createdAt"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.name !== undefined){
let data1 = data0.name;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate48.errors = [{instancePath:instancePath+"/" + i0+"/name",schemaPath:"node#/definitions/DomainInfo/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["name"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.nodeId !== undefined){
let data2 = data0.nodeId;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate48.errors = [{instancePath:instancePath+"/" + i0+"/nodeId",schemaPath:"node#/definitions/DomainInfo/properties/nodeId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["nodeId"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.createdAt !== undefined){
let data3 = data0.createdAt;
const _errs9 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate48.errors = [{instancePath:instancePath+"/" + i0+"/createdAt",schemaPath:"node#/definitions/DomainInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data0 !== undefined){
data0["createdAt"] = coerced3;
}
}
}
var valid2 = _errs9 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
}
else {
validate48.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/DomainInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate48.errors = vErrors;
return errors === 0;
}

export const EmailHint = validate49;
const schema58 = {"type":"object","properties":{"emailHint":{"type":"string"}},"required":["emailHint"],"additionalProperties":false};

function validate49(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.emailHint === undefined) && (missing0 = "emailHint")){
validate49.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "emailHint")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.emailHint !== undefined){
let data0 = data.emailHint;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate49.errors = [{instancePath:instancePath+"/emailHint",schemaPath:"#/properties/emailHint/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["emailHint"] = coerced0;
}
}
}
}
}
}
}
else {
validate49.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate49.errors = vErrors;
return errors === 0;
}

export const FeedReference = validate50;
const schema59 = {"type":"object","properties":{"feedName":{"type":"string"},"publishedAt":{"type":"integer"},"pinned":{"type":"boolean","nullable":true},"moment":{"type":"integer"},"storyId":{"type":"string"},"operations":{"anyOf":[{"$ref":"node#/definitions/StoryOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["feedName","publishedAt","moment","storyId"],"additionalProperties":false};

function validate50(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.feedName === undefined) && (missing0 = "feedName")) || ((data.publishedAt === undefined) && (missing0 = "publishedAt"))) || ((data.moment === undefined) && (missing0 = "moment"))) || ((data.storyId === undefined) && (missing0 = "storyId"))){
validate50.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "feedName") || (key0 === "publishedAt")) || (key0 === "pinned")) || (key0 === "moment")) || (key0 === "storyId")) || (key0 === "operations"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.feedName !== undefined){
let data0 = data.feedName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate50.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["feedName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.publishedAt !== undefined){
let data1 = data.publishedAt;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate50.errors = [{instancePath:instancePath+"/publishedAt",schemaPath:"#/properties/publishedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["publishedAt"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.pinned !== undefined){
let data2 = data.pinned;
const _errs6 = errors;
if((typeof data2 !== "boolean") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "boolean") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "false" || data2 === 0 || data2 === null){
coerced2 = false;
}
else if(data2 === "true" || data2 === 1){
coerced2 = true;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate50.errors = [{instancePath:instancePath+"/pinned",schemaPath:"#/properties/pinned/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["pinned"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data3 = data.moment;
const _errs9 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate50.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["moment"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.storyId !== undefined){
let data4 = data.storyId;
const _errs11 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
validate50.errors = [{instancePath:instancePath+"/storyId",schemaPath:"#/properties/storyId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["storyId"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data5 = data.operations;
const _errs13 = errors;
const _errs14 = errors;
let valid1 = false;
const _errs15 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["operations"] = coerced5;
}
}
}
const _errs16 = errors;
if(errors === _errs16){
if(data5 && typeof data5 == "object" && !Array.isArray(data5)){
const _errs18 = errors;
for(const key1 in data5){
if(!((key1 === "edit") || (key1 === "delete"))){
delete data5[key1];
}
}
if(_errs18 === errors){
if(data5.edit !== undefined){
let data6 = data5.edit;
const _errs19 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/StoryOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data5 !== undefined){
data5["edit"] = coerced6;
}
}
}
var valid3 = _errs19 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.delete !== undefined){
let data7 = data5.delete;
const _errs22 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err2 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/StoryOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data5 !== undefined){
data5["delete"] = coerced7;
}
}
}
var valid3 = _errs22 === errors;
}
else {
var valid3 = true;
}
}
}
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/StoryOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
var _valid0 = _errs15 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs27 = errors;
if(data5 !== null){
let dataType8 = typeof data5;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType8 = typeof data5;
if(data5 === null){
coerced8 = data5;
}
}
if(!(coerced8 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced8 = null;
}
else {
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced8 !== undefined){
data5 = coerced8;
if(data !== undefined){
data["operations"] = coerced8;
}
}
}
var _valid0 = _errs27 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err5 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
validate50.errors = vErrors;
return false;
}
else {
errors = _errs14;
if(vErrors !== null){
if(_errs14){
vErrors.length = _errs14;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate50.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate50.errors = vErrors;
return errors === 0;
}

export const FeedStatus = validate51;
const schema61 = {"type":"object","properties":{"total":{"type":"integer"},"totalPinned":{"type":"integer"},"lastMoment":{"type":"integer","nullable":true},"notViewed":{"type":"integer","nullable":true},"notRead":{"type":"integer","nullable":true},"notViewedMoment":{"type":"integer","nullable":true},"notReadMoment":{"type":"integer","nullable":true}},"required":["total","totalPinned"],"additionalProperties":false};

function validate51(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.total === undefined) && (missing0 = "total")) || ((data.totalPinned === undefined) && (missing0 = "totalPinned"))){
validate51.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "total") || (key0 === "totalPinned")) || (key0 === "lastMoment")) || (key0 === "notViewed")) || (key0 === "notRead")) || (key0 === "notViewedMoment")) || (key0 === "notReadMoment"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.total !== undefined){
let data0 = data.total;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate51.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["total"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalPinned !== undefined){
let data1 = data.totalPinned;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate51.errors = [{instancePath:instancePath+"/totalPinned",schemaPath:"#/properties/totalPinned/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["totalPinned"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.lastMoment !== undefined){
let data2 = data.lastMoment;
const _errs6 = errors;
if((!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate51.errors = [{instancePath:instancePath+"/lastMoment",schemaPath:"#/properties/lastMoment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["lastMoment"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notViewed !== undefined){
let data3 = data.notViewed;
const _errs9 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate51.errors = [{instancePath:instancePath+"/notViewed",schemaPath:"#/properties/notViewed/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["notViewed"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notRead !== undefined){
let data4 = data.notRead;
const _errs12 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate51.errors = [{instancePath:instancePath+"/notRead",schemaPath:"#/properties/notRead/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["notRead"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notViewedMoment !== undefined){
let data5 = data.notViewedMoment;
const _errs15 = errors;
if((!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate51.errors = [{instancePath:instancePath+"/notViewedMoment",schemaPath:"#/properties/notViewedMoment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["notViewedMoment"] = coerced5;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notReadMoment !== undefined){
let data6 = data.notReadMoment;
const _errs18 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate51.errors = [{instancePath:instancePath+"/notReadMoment",schemaPath:"#/properties/notReadMoment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["notReadMoment"] = coerced6;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate51.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate51.errors = vErrors;
return errors === 0;
}

export const FeedWithStatus = validate52;
const schema62 = {"type":"object","properties":{"feedName":{"type":"string"},"notViewed":{"type":"integer"},"notRead":{"type":"integer"}},"required":["feedName","notViewed","notRead"],"additionalProperties":false};

function validate52(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.feedName === undefined) && (missing0 = "feedName")) || ((data.notViewed === undefined) && (missing0 = "notViewed"))) || ((data.notRead === undefined) && (missing0 = "notRead"))){
validate52.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "feedName") || (key0 === "notViewed")) || (key0 === "notRead"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.feedName !== undefined){
let data0 = data.feedName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate52.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["feedName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notViewed !== undefined){
let data1 = data.notViewed;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate52.errors = [{instancePath:instancePath+"/notViewed",schemaPath:"#/properties/notViewed/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["notViewed"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.notRead !== undefined){
let data2 = data.notRead;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate52.errors = [{instancePath:instancePath+"/notRead",schemaPath:"#/properties/notRead/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["notRead"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate52.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate52.errors = vErrors;
return errors === 0;
}

export const FriendGroupDetails = validate53;
const schema63 = {"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string","nullable":true},"addedAt":{"type":"integer"},"operations":{"anyOf":[{"$ref":"node#/definitions/FriendOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","addedAt"],"additionalProperties":false};

function validate53(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.id === undefined) && (missing0 = "id")) || ((data.addedAt === undefined) && (missing0 = "addedAt"))){
validate53.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "id") || (key0 === "title")) || (key0 === "addedAt")) || (key0 === "operations"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate53.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data1 = data.title;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate53.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["title"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.addedAt !== undefined){
let data2 = data.addedAt;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate53.errors = [{instancePath:instancePath+"/addedAt",schemaPath:"#/properties/addedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["addedAt"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data3 = data.operations;
const _errs9 = errors;
const _errs10 = errors;
let valid1 = false;
const _errs11 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["operations"] = coerced3;
}
}
}
const _errs12 = errors;
if(errors === _errs12){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
const _errs14 = errors;
for(const key1 in data3){
if(!(key1 === "view")){
delete data3[key1];
}
}
if(_errs14 === errors){
if(data3.view !== undefined){
let data4 = data3.view;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/FriendOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data3 !== undefined){
data3["view"] = coerced4;
}
}
}
}
}
}
else {
const err2 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/FriendOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
var _valid0 = _errs11 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs20 = errors;
if(data3 !== null){
let dataType5 = typeof data3;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType5 = typeof data3;
if(data3 === null){
coerced5 = data3;
}
}
if(!(coerced5 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced5 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced5 !== undefined){
data3 = coerced5;
if(data !== undefined){
data["operations"] = coerced5;
}
}
}
var _valid0 = _errs20 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
validate53.errors = vErrors;
return false;
}
else {
errors = _errs10;
if(vErrors !== null){
if(_errs10){
vErrors.length = _errs10;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate53.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate53.errors = vErrors;
return errors === 0;
}

export const FriendGroupInfo = validate54;
const schema65 = {"type":"object","properties":{"id":{"type":"string"},"title":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"operations":{"anyOf":[{"$ref":"node#/definitions/FriendGroupOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","createdAt"],"additionalProperties":false};

function validate54(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.id === undefined) && (missing0 = "id")) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate54.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "id") || (key0 === "title")) || (key0 === "createdAt")) || (key0 === "operations"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate54.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data1 = data.title;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate54.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["title"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data2 = data.createdAt;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate54.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["createdAt"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data3 = data.operations;
const _errs9 = errors;
const _errs10 = errors;
let valid1 = false;
const _errs11 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["operations"] = coerced3;
}
}
}
const _errs12 = errors;
if(errors === _errs12){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
const _errs14 = errors;
for(const key1 in data3){
if(!(key1 === "view")){
delete data3[key1];
}
}
if(_errs14 === errors){
if(data3.view !== undefined){
let data4 = data3.view;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/FriendGroupOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data3 !== undefined){
data3["view"] = coerced4;
}
}
}
}
}
}
else {
const err2 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/FriendGroupOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
var _valid0 = _errs11 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs20 = errors;
if(data3 !== null){
let dataType5 = typeof data3;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType5 = typeof data3;
if(data3 === null){
coerced5 = data3;
}
}
if(!(coerced5 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced5 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced5 !== undefined){
data3 = coerced5;
if(data !== undefined){
data["operations"] = coerced5;
}
}
}
var _valid0 = _errs20 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
validate54.errors = vErrors;
return false;
}
else {
errors = _errs10;
if(vErrors !== null){
if(_errs10){
vErrors.length = _errs10;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate54.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate54.errors = vErrors;
return errors === 0;
}

export const FriendGroupInfoArray = validate55;
const schema67 = {"type":"array","items":{"$ref":"node#/definitions/FriendGroupInfo"}};

function validate55(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate55.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate54(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate54.errors : vErrors.concat(validate54.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate55.errors = vErrors;
return errors === 0;
}

export const FriendGroupsFeatures = validate57;
const schema68 = {"type":"object","properties":{"available":{"type":"array","items":{"$ref":"node#/definitions/FriendGroupInfo"}},"memberOf":{"type":"array","items":{"$ref":"node#/definitions/FriendGroupDetails"},"nullable":true}},"required":["available"],"additionalProperties":false};

function validate57(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.available === undefined) && (missing0 = "available")){
validate57.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "available") || (key0 === "memberOf"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.available !== undefined){
let data0 = data.available;
const _errs2 = errors;
if(!(Array.isArray(data0))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(Array.isArray(data0)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data0 === null){
coerced0 = [data0];
}
else {
validate57.errors = [{instancePath:instancePath+"/available",schemaPath:"#/properties/available/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["available"] = coerced0;
}
}
}
if(errors === _errs2){
if(Array.isArray(data0)){
var valid1 = true;
const len0 = data0.length;
for(let i0=0; i0<len0; i0++){
const _errs4 = errors;
if(!(validate54(data0[i0], {instancePath:instancePath+"/available/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate54.errors : vErrors.concat(validate54.errors);
errors = vErrors.length;
}
var valid1 = _errs4 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.memberOf !== undefined){
let data2 = data.memberOf;
const _errs5 = errors;
if((!(Array.isArray(data2))) && (data2 !== null)){
let dataType1 = typeof data2;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType1 = typeof data2;
if((Array.isArray(data2)) && (data2 === null)){
coerced1 = data2;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "string" || dataType1 === "number"
              || dataType1 === "boolean" || data2 === null){
coerced1 = [data2];
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced1 = null;
}
else {
validate57.errors = [{instancePath:instancePath+"/memberOf",schemaPath:"#/properties/memberOf/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced1 !== undefined){
data2 = coerced1;
if(data !== undefined){
data["memberOf"] = coerced1;
}
}
}
if(errors === _errs5){
if(Array.isArray(data2)){
var valid2 = true;
const len1 = data2.length;
for(let i1=0; i1<len1; i1++){
const _errs8 = errors;
if(!(validate53(data2[i1], {instancePath:instancePath+"/memberOf/" + i1,parentData:data2,parentDataProperty:i1,rootData}))){
vErrors = vErrors === null ? validate53.errors : vErrors.concat(validate53.errors);
errors = vErrors.length;
}
var valid2 = _errs8 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate57.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate57.errors = vErrors;
return errors === 0;
}

export const FriendInfo = validate60;
const schema69 = {"type":"object","properties":{"nodeName":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"groups":{"type":"array","items":{"$ref":"node#/definitions/FriendGroupDetails"},"nullable":true}},"required":["nodeName"],"additionalProperties":false};

function validate60(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.nodeName === undefined) && (missing0 = "nodeName")){
validate60.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "nodeName") || (key0 === "contact")) || (key0 === "groups"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate60.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data1 = data.contact;
const _errs4 = errors;
const _errs5 = errors;
let valid1 = false;
const _errs6 = errors;
if((!(data1 && typeof data1 == "object" && !Array.isArray(data1))) && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((data1 && typeof data1 == "object" && !Array.isArray(data1)) && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["contact"] = coerced1;
}
}
}
if(!(validate41(data1, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs6 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs9 = errors;
if(data1 !== null){
let dataType2 = typeof data1;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType2 = typeof data1;
if(data1 === null){
coerced2 = data1;
}
}
if(!(coerced2 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced2 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced2 !== undefined){
data1 = coerced2;
if(data !== undefined){
data["contact"] = coerced2;
}
}
}
var _valid0 = _errs9 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate60.errors = vErrors;
return false;
}
else {
errors = _errs5;
if(vErrors !== null){
if(_errs5){
vErrors.length = _errs5;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.groups !== undefined){
let data2 = data.groups;
const _errs11 = errors;
if((!(Array.isArray(data2))) && (data2 !== null)){
let dataType3 = typeof data2;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType3 = typeof data2;
if((Array.isArray(data2)) && (data2 === null)){
coerced3 = data2;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "string" || dataType3 === "number"
              || dataType3 === "boolean" || data2 === null){
coerced3 = [data2];
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced3 = null;
}
else {
validate60.errors = [{instancePath:instancePath+"/groups",schemaPath:"#/properties/groups/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced3 !== undefined){
data2 = coerced3;
if(data !== undefined){
data["groups"] = coerced3;
}
}
}
if(errors === _errs11){
if(Array.isArray(data2)){
var valid2 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
const _errs14 = errors;
if(!(validate53(data2[i0], {instancePath:instancePath+"/groups/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate53.errors : vErrors.concat(validate53.errors);
errors = vErrors.length;
}
var valid2 = _errs14 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate60.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate60.errors = vErrors;
return errors === 0;
}

export const FriendInfoArray = validate63;
const schema70 = {"type":"array","items":{"$ref":"node#/definitions/FriendInfo"}};

function validate63(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate63.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate60(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate60.errors : vErrors.concat(validate60.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate63.errors = vErrors;
return errors === 0;
}

export const FriendOfInfo = validate65;
const schema71 = {"type":"object","properties":{"remoteNodeName":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"groups":{"type":"array","items":{"$ref":"node#/definitions/FriendGroupDetails"},"nullable":true}},"required":["remoteNodeName"],"additionalProperties":false};

function validate65(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.remoteNodeName === undefined) && (missing0 = "remoteNodeName")){
validate65.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "remoteNodeName") || (key0 === "contact")) || (key0 === "groups"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.remoteNodeName !== undefined){
let data0 = data.remoteNodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate65.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["remoteNodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data1 = data.contact;
const _errs4 = errors;
const _errs5 = errors;
let valid1 = false;
const _errs6 = errors;
if((!(data1 && typeof data1 == "object" && !Array.isArray(data1))) && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((data1 && typeof data1 == "object" && !Array.isArray(data1)) && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["contact"] = coerced1;
}
}
}
if(!(validate41(data1, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs6 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs9 = errors;
if(data1 !== null){
let dataType2 = typeof data1;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType2 = typeof data1;
if(data1 === null){
coerced2 = data1;
}
}
if(!(coerced2 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced2 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced2 !== undefined){
data1 = coerced2;
if(data !== undefined){
data["contact"] = coerced2;
}
}
}
var _valid0 = _errs9 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate65.errors = vErrors;
return false;
}
else {
errors = _errs5;
if(vErrors !== null){
if(_errs5){
vErrors.length = _errs5;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.groups !== undefined){
let data2 = data.groups;
const _errs11 = errors;
if((!(Array.isArray(data2))) && (data2 !== null)){
let dataType3 = typeof data2;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType3 = typeof data2;
if((Array.isArray(data2)) && (data2 === null)){
coerced3 = data2;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "string" || dataType3 === "number"
              || dataType3 === "boolean" || data2 === null){
coerced3 = [data2];
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced3 = null;
}
else {
validate65.errors = [{instancePath:instancePath+"/groups",schemaPath:"#/properties/groups/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced3 !== undefined){
data2 = coerced3;
if(data !== undefined){
data["groups"] = coerced3;
}
}
}
if(errors === _errs11){
if(Array.isArray(data2)){
var valid2 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
const _errs14 = errors;
if(!(validate53(data2[i0], {instancePath:instancePath+"/groups/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate53.errors : vErrors.concat(validate53.errors);
errors = vErrors.length;
}
var valid2 = _errs14 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate65.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate65.errors = vErrors;
return errors === 0;
}

export const FriendOfInfoArray = validate68;
const schema72 = {"type":"array","items":{"$ref":"node#/definitions/FriendOfInfo"}};

function validate68(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate68.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate65(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate65.errors : vErrors.concat(validate65.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate68.errors = vErrors;
return errors === 0;
}

export const FundraiserInfo = validate70;
const schema73 = {"type":"object","properties":{"title":{"type":"string"},"qrCode":{"type":"string","nullable":true},"text":{"type":"string","nullable":true},"href":{"type":"string","nullable":true}},"required":["title"],"additionalProperties":false};

function validate70(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.title === undefined) && (missing0 = "title")){
validate70.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "title") || (key0 === "qrCode")) || (key0 === "text")) || (key0 === "href"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.title !== undefined){
let data0 = data.title;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate70.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["title"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.qrCode !== undefined){
let data1 = data.qrCode;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate70.errors = [{instancePath:instancePath+"/qrCode",schemaPath:"#/properties/qrCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["qrCode"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.text !== undefined){
let data2 = data.text;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate70.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["text"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.href !== undefined){
let data3 = data.href;
const _errs10 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate70.errors = [{instancePath:instancePath+"/href",schemaPath:"#/properties/href/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["href"] = coerced3;
}
}
}
var valid0 = _errs10 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate70.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate70.errors = vErrors;
return errors === 0;
}

export const GrantInfo = validate71;
const schema74 = {"type":"object","properties":{"nodeName":{"type":"string"},"scope":{"type":"array","items":{"type":"string"}}},"required":["nodeName","scope"],"additionalProperties":false};

function validate71(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.nodeName === undefined) && (missing0 = "nodeName")) || ((data.scope === undefined) && (missing0 = "scope"))){
validate71.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "nodeName") || (key0 === "scope"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate71.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.scope !== undefined){
let data1 = data.scope;
const _errs4 = errors;
if(!(Array.isArray(data1))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(Array.isArray(data1)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "string" || dataType1 === "number"
              || dataType1 === "boolean" || data1 === null){
coerced1 = [data1];
}
else {
validate71.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["scope"] = coerced1;
}
}
}
if(errors === _errs4){
if(Array.isArray(data1)){
var valid1 = true;
const len0 = data1.length;
for(let i0=0; i0<len0; i0++){
let data2 = data1[i0];
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate71.errors = [{instancePath:instancePath+"/scope/" + i0,schemaPath:"#/properties/scope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data1 !== undefined){
data1[i0] = coerced2;
}
}
}
var valid1 = _errs6 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate71.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate71.errors = vErrors;
return errors === 0;
}

export const GrantInfoArray = validate72;
const schema75 = {"type":"array","items":{"$ref":"node#/definitions/GrantInfo"}};

function validate72(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate72.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if(((data0.nodeName === undefined) && (missing0 = "nodeName")) || ((data0.scope === undefined) && (missing0 = "scope"))){
validate72.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/GrantInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!((key0 === "nodeName") || (key0 === "scope"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.nodeName !== undefined){
let data1 = data0.nodeName;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate72.errors = [{instancePath:instancePath+"/" + i0+"/nodeName",schemaPath:"node#/definitions/GrantInfo/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["nodeName"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.scope !== undefined){
let data2 = data0.scope;
const _errs7 = errors;
if(!(Array.isArray(data2))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(Array.isArray(data2)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else {
validate72.errors = [{instancePath:instancePath+"/" + i0+"/scope",schemaPath:"node#/definitions/GrantInfo/properties/scope/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["scope"] = coerced2;
}
}
}
if(errors === _errs7){
if(Array.isArray(data2)){
var valid3 = true;
const len1 = data2.length;
for(let i1=0; i1<len1; i1++){
let data3 = data2[i1];
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate72.errors = [{instancePath:instancePath+"/" + i0+"/scope/" + i1,schemaPath:"node#/definitions/GrantInfo/properties/scope/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2[i1] = coerced3;
}
}
}
var valid3 = _errs9 === errors;
if(!valid3){
break;
}
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
else {
validate72.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/GrantInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate72.errors = vErrors;
return errors === 0;
}

export const KeyMnemonic = validate73;
const schema77 = {"type":"object","properties":{"mnemonic":{"type":"array","items":{"type":"string"}}},"required":["mnemonic"],"additionalProperties":false};

function validate73(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.mnemonic === undefined) && (missing0 = "mnemonic")){
validate73.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "mnemonic")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.mnemonic !== undefined){
let data0 = data.mnemonic;
const _errs2 = errors;
if(!(Array.isArray(data0))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(Array.isArray(data0)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data0 === null){
coerced0 = [data0];
}
else {
validate73.errors = [{instancePath:instancePath+"/mnemonic",schemaPath:"#/properties/mnemonic/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["mnemonic"] = coerced0;
}
}
}
if(errors === _errs2){
if(Array.isArray(data0)){
var valid1 = true;
const len0 = data0.length;
for(let i0=0; i0<len0; i0++){
let data1 = data0[i0];
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate73.errors = [{instancePath:instancePath+"/mnemonic/" + i0,schemaPath:"#/properties/mnemonic/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0[i0] = coerced1;
}
}
}
var valid1 = _errs4 === errors;
if(!valid1){
break;
}
}
}
}
}
}
}
}
else {
validate73.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate73.errors = vErrors;
return errors === 0;
}

export const LinkPreview = validate74;
const schema78 = {"type":"object","properties":{"siteName":{"type":"string","nullable":true},"url":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"imageHash":{"type":"string","nullable":true}},"additionalProperties":false};

function validate74(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((key0 === "siteName") || (key0 === "url")) || (key0 === "title")) || (key0 === "description")) || (key0 === "imageHash"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.siteName !== undefined){
let data0 = data.siteName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate74.errors = [{instancePath:instancePath+"/siteName",schemaPath:"#/properties/siteName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["siteName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.url !== undefined){
let data1 = data.url;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate74.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["url"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data2 = data.title;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate74.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["title"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.description !== undefined){
let data3 = data.description;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate74.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["description"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.imageHash !== undefined){
let data4 = data.imageHash;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate74.errors = [{instancePath:instancePath+"/imageHash",schemaPath:"#/properties/imageHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["imageHash"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate74.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate74.errors = vErrors;
return errors === 0;
}

export const LinkPreviewInfo = validate75;
const schema79 = {"type":"object","properties":{"siteName":{"type":"string","nullable":true},"url":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"imageUrl":{"type":"string","nullable":true}},"additionalProperties":false};

function validate75(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((key0 === "siteName") || (key0 === "url")) || (key0 === "title")) || (key0 === "description")) || (key0 === "imageUrl"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.siteName !== undefined){
let data0 = data.siteName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate75.errors = [{instancePath:instancePath+"/siteName",schemaPath:"#/properties/siteName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["siteName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.url !== undefined){
let data1 = data.url;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate75.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["url"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data2 = data.title;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate75.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["title"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.description !== undefined){
let data3 = data.description;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate75.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["description"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.imageUrl !== undefined){
let data4 = data.imageUrl;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate75.errors = [{instancePath:instancePath+"/imageUrl",schemaPath:"#/properties/imageUrl/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["imageUrl"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate75.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate75.errors = vErrors;
return errors === 0;
}

export const MediaFilePreviewInfo = validate76;
const schema80 = {"type":"object","properties":{"targetWidth":{"type":"integer"},"directPath":{"type":"string","nullable":true},"width":{"type":"integer"},"height":{"type":"integer"},"original":{"type":"boolean","nullable":true}},"required":["targetWidth","width","height"],"additionalProperties":false};

function validate76(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.targetWidth === undefined) && (missing0 = "targetWidth")) || ((data.width === undefined) && (missing0 = "width"))) || ((data.height === undefined) && (missing0 = "height"))){
validate76.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((key0 === "targetWidth") || (key0 === "directPath")) || (key0 === "width")) || (key0 === "height")) || (key0 === "original"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.targetWidth !== undefined){
let data0 = data.targetWidth;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate76.errors = [{instancePath:instancePath+"/targetWidth",schemaPath:"#/properties/targetWidth/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["targetWidth"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.directPath !== undefined){
let data1 = data.directPath;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate76.errors = [{instancePath:instancePath+"/directPath",schemaPath:"#/properties/directPath/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["directPath"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.width !== undefined){
let data2 = data.width;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate76.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["width"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.height !== undefined){
let data3 = data.height;
const _errs9 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate76.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["height"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.original !== undefined){
let data4 = data.original;
const _errs11 = errors;
if((typeof data4 !== "boolean") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "boolean") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(data4 === "false" || data4 === 0 || data4 === null){
coerced4 = false;
}
else if(data4 === "true" || data4 === 1){
coerced4 = true;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate76.errors = [{instancePath:instancePath+"/original",schemaPath:"#/properties/original/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["original"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
else {
validate76.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate76.errors = vErrors;
return errors === 0;
}

export const NodeNameInfo = validate77;
const schema81 = {"type":"object","properties":{"name":{"type":"string","nullable":true},"operationStatus":{"type":"string","nullable":true},"operationStatusUpdated":{"type":"integer","nullable":true},"operationErrorCode":{"type":"string","nullable":true},"operationErrorMessage":{"type":"string","nullable":true},"storedMnemonic":{"type":"boolean","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/NodeNameOperations","type":"object","nullable":true},{"type":"null"}]}},"additionalProperties":false};

function validate77(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "name") || (key0 === "operationStatus")) || (key0 === "operationStatusUpdated")) || (key0 === "operationErrorCode")) || (key0 === "operationErrorMessage")) || (key0 === "storedMnemonic")) || (key0 === "operations"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operationStatus !== undefined){
let data1 = data.operationStatus;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/operationStatus",schemaPath:"#/properties/operationStatus/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["operationStatus"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operationStatusUpdated !== undefined){
let data2 = data.operationStatusUpdated;
const _errs8 = errors;
if((!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/operationStatusUpdated",schemaPath:"#/properties/operationStatusUpdated/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["operationStatusUpdated"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operationErrorCode !== undefined){
let data3 = data.operationErrorCode;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/operationErrorCode",schemaPath:"#/properties/operationErrorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["operationErrorCode"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operationErrorMessage !== undefined){
let data4 = data.operationErrorMessage;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/operationErrorMessage",schemaPath:"#/properties/operationErrorMessage/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["operationErrorMessage"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.storedMnemonic !== undefined){
let data5 = data.storedMnemonic;
const _errs17 = errors;
if((typeof data5 !== "boolean") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "boolean") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "false" || data5 === 0 || data5 === null){
coerced5 = false;
}
else if(data5 === "true" || data5 === 1){
coerced5 = true;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate77.errors = [{instancePath:instancePath+"/storedMnemonic",schemaPath:"#/properties/storedMnemonic/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["storedMnemonic"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data6 = data.operations;
const _errs20 = errors;
const _errs21 = errors;
let valid1 = false;
const _errs22 = errors;
if((!(data6 && typeof data6 == "object" && !Array.isArray(data6))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((data6 && typeof data6 == "object" && !Array.isArray(data6)) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["operations"] = coerced6;
}
}
}
const _errs23 = errors;
if(errors === _errs23){
if(data6 && typeof data6 == "object" && !Array.isArray(data6)){
const _errs25 = errors;
for(const key1 in data6){
if(!(key1 === "manage")){
delete data6[key1];
}
}
if(_errs25 === errors){
if(data6.manage !== undefined){
let data7 = data6.manage;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/manage",schemaPath:"node#/definitions/NodeNameOperations/properties/manage/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data6 !== undefined){
data6["manage"] = coerced7;
}
}
}
}
}
}
else {
const err2 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/NodeNameOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
var _valid0 = _errs22 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs31 = errors;
if(data6 !== null){
let dataType8 = typeof data6;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType8 = typeof data6;
if(data6 === null){
coerced8 = data6;
}
}
if(!(coerced8 !== undefined)){
if(data6 === "" || data6 === 0 || data6 === false){
coerced8 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced8 !== undefined){
data6 = coerced8;
if(data !== undefined){
data["operations"] = coerced8;
}
}
}
var _valid0 = _errs31 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
validate77.errors = vErrors;
return false;
}
else {
errors = _errs21;
if(vErrors !== null){
if(_errs21){
vErrors.length = _errs21;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate77.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate77.errors = vErrors;
return errors === 0;
}

export const PeopleGeneralInfo = validate78;
const schema83 = {"type":"object","properties":{"feedSubscribersTotal":{"type":"integer","nullable":true},"feedSubscriptionsTotal":{"type":"integer","nullable":true},"friendsTotal":{"type":"object","patternProperties":{"^.*$":{"type":"integer"}},"nullable":true},"friendOfsTotal":{"type":"integer","nullable":true},"blockedTotal":{"type":"integer","nullable":true},"blockedByTotal":{"type":"integer","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/PeopleOperations","type":"object","nullable":true},{"type":"null"}]}},"additionalProperties":false};
const pattern0 = new RegExp("^.*$", "u");

function validate78(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "feedSubscribersTotal") || (key0 === "feedSubscriptionsTotal")) || (key0 === "friendsTotal")) || (key0 === "friendOfsTotal")) || (key0 === "blockedTotal")) || (key0 === "blockedByTotal")) || (key0 === "operations"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.feedSubscribersTotal !== undefined){
let data0 = data.feedSubscribersTotal;
const _errs2 = errors;
if((!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))) && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))) && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/feedSubscribersTotal",schemaPath:"#/properties/feedSubscribersTotal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["feedSubscribersTotal"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedSubscriptionsTotal !== undefined){
let data1 = data.feedSubscriptionsTotal;
const _errs5 = errors;
if((!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))) && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))) && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/feedSubscriptionsTotal",schemaPath:"#/properties/feedSubscriptionsTotal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["feedSubscriptionsTotal"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.friendsTotal !== undefined){
let data2 = data.friendsTotal;
const _errs8 = errors;
if((!(data2 && typeof data2 == "object" && !Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((data2 && typeof data2 == "object" && !Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/friendsTotal",schemaPath:"#/properties/friendsTotal/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["friendsTotal"] = coerced2;
}
}
}
if(errors === _errs8){
if(data2 && typeof data2 == "object" && !Array.isArray(data2)){
var valid1 = true;
for(const key1 in data2){
if(pattern0.test(key1)){
let data3 = data2[key1];
const _errs11 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate78.errors = [{instancePath:instancePath+"/friendsTotal/" + key1.replace(/~/g, "~0").replace(/\//g, "~1"),schemaPath:"#/properties/friendsTotal/patternProperties/%5E.*%24/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2[key1] = coerced3;
}
}
}
var valid1 = _errs11 === errors;
if(!valid1){
break;
}
}
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.friendOfsTotal !== undefined){
let data4 = data.friendOfsTotal;
const _errs13 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/friendOfsTotal",schemaPath:"#/properties/friendOfsTotal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["friendOfsTotal"] = coerced4;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedTotal !== undefined){
let data5 = data.blockedTotal;
const _errs16 = errors;
if((!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/blockedTotal",schemaPath:"#/properties/blockedTotal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["blockedTotal"] = coerced5;
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedByTotal !== undefined){
let data6 = data.blockedByTotal;
const _errs19 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate78.errors = [{instancePath:instancePath+"/blockedByTotal",schemaPath:"#/properties/blockedByTotal/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["blockedByTotal"] = coerced6;
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data7 = data.operations;
const _errs22 = errors;
const _errs23 = errors;
let valid2 = false;
const _errs24 = errors;
if((!(data7 && typeof data7 == "object" && !Array.isArray(data7))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((data7 && typeof data7 == "object" && !Array.isArray(data7)) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["operations"] = coerced7;
}
}
}
const _errs25 = errors;
if(errors === _errs25){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
const _errs27 = errors;
for(const key2 in data7){
if(!(func2.call(schema18.properties, key2))){
delete data7[key2];
}
}
if(_errs27 === errors){
if(data7.viewSubscribers !== undefined){
let data8 = data7.viewSubscribers;
const _errs28 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/viewSubscribers",schemaPath:"node#/definitions/PeopleOperations/properties/viewSubscribers/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data7 !== undefined){
data7["viewSubscribers"] = coerced8;
}
}
}
var valid4 = _errs28 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewSubscriptions !== undefined){
let data9 = data7.viewSubscriptions;
const _errs31 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err2 = {instancePath:instancePath+"/operations/viewSubscriptions",schemaPath:"node#/definitions/PeopleOperations/properties/viewSubscriptions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data7 !== undefined){
data7["viewSubscriptions"] = coerced9;
}
}
}
var valid4 = _errs31 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewFriends !== undefined){
let data10 = data7.viewFriends;
const _errs34 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations/viewFriends",schemaPath:"node#/definitions/PeopleOperations/properties/viewFriends/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data7 !== undefined){
data7["viewFriends"] = coerced10;
}
}
}
var valid4 = _errs34 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewFriendOfs !== undefined){
let data11 = data7.viewFriendOfs;
const _errs37 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
const err4 = {instancePath:instancePath+"/operations/viewFriendOfs",schemaPath:"node#/definitions/PeopleOperations/properties/viewFriendOfs/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data7 !== undefined){
data7["viewFriendOfs"] = coerced11;
}
}
}
var valid4 = _errs37 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewBlocked !== undefined){
let data12 = data7.viewBlocked;
const _errs40 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err5 = {instancePath:instancePath+"/operations/viewBlocked",schemaPath:"node#/definitions/PeopleOperations/properties/viewBlocked/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data7 !== undefined){
data7["viewBlocked"] = coerced12;
}
}
}
var valid4 = _errs40 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewBlockedBy !== undefined){
let data13 = data7.viewBlockedBy;
const _errs43 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
const err6 = {instancePath:instancePath+"/operations/viewBlockedBy",schemaPath:"node#/definitions/PeopleOperations/properties/viewBlockedBy/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data7 !== undefined){
data7["viewBlockedBy"] = coerced13;
}
}
}
var valid4 = _errs43 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewSubscribersTotal !== undefined){
let data14 = data7.viewSubscribersTotal;
const _errs46 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
const err7 = {instancePath:instancePath+"/operations/viewSubscribersTotal",schemaPath:"node#/definitions/PeopleOperations/properties/viewSubscribersTotal/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data7 !== undefined){
data7["viewSubscribersTotal"] = coerced14;
}
}
}
var valid4 = _errs46 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewSubscriptionsTotal !== undefined){
let data15 = data7.viewSubscriptionsTotal;
const _errs49 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
const err8 = {instancePath:instancePath+"/operations/viewSubscriptionsTotal",schemaPath:"node#/definitions/PeopleOperations/properties/viewSubscriptionsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data7 !== undefined){
data7["viewSubscriptionsTotal"] = coerced15;
}
}
}
var valid4 = _errs49 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewFriendsTotal !== undefined){
let data16 = data7.viewFriendsTotal;
const _errs52 = errors;
if((typeof data16 !== "string") && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((typeof data16 === "string") && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data16;
}
else if(data16 === null){
coerced16 = "";
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
const err9 = {instancePath:instancePath+"/operations/viewFriendsTotal",schemaPath:"node#/definitions/PeopleOperations/properties/viewFriendsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data7 !== undefined){
data7["viewFriendsTotal"] = coerced16;
}
}
}
var valid4 = _errs52 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.viewFriendOfsTotal !== undefined){
let data17 = data7.viewFriendOfsTotal;
const _errs55 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced17 = null;
}
else {
const err10 = {instancePath:instancePath+"/operations/viewFriendOfsTotal",schemaPath:"node#/definitions/PeopleOperations/properties/viewFriendOfsTotal/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data7 !== undefined){
data7["viewFriendOfsTotal"] = coerced17;
}
}
}
var valid4 = _errs55 === errors;
}
else {
var valid4 = true;
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err11 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/PeopleOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
var _valid0 = _errs24 === errors;
valid2 = valid2 || _valid0;
if(!valid2){
const _errs60 = errors;
if(data7 !== null){
let dataType18 = typeof data7;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType18 = typeof data7;
if(data7 === null){
coerced18 = data7;
}
}
if(!(coerced18 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced18 = null;
}
else {
const err12 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced18 !== undefined){
data7 = coerced18;
if(data !== undefined){
data["operations"] = coerced18;
}
}
}
var _valid0 = _errs60 === errors;
valid2 = valid2 || _valid0;
}
if(!valid2){
const err13 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
validate78.errors = vErrors;
return false;
}
else {
errors = _errs23;
if(vErrors !== null){
if(_errs23){
vErrors.length = _errs23;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs22 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate78.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate78.errors = vErrors;
return errors === 0;
}

export const PostingFeatures = validate79;
const schema85 = {"type":"object","properties":{"post":{"type":"boolean","nullable":true},"subjectPresent":{"type":"boolean"},"sourceFormats":{"type":"array","items":{"type":"string"}},"mediaMaxSize":{"type":"integer"},"imageRecommendedSize":{"type":"integer"},"imageRecommendedPixels":{"type":"integer"},"imageFormats":{"type":"array","items":{"type":"string"}}},"required":["subjectPresent","sourceFormats","mediaMaxSize","imageRecommendedSize","imageRecommendedPixels","imageFormats"],"additionalProperties":false};

function validate79(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.subjectPresent === undefined) && (missing0 = "subjectPresent")) || ((data.sourceFormats === undefined) && (missing0 = "sourceFormats"))) || ((data.mediaMaxSize === undefined) && (missing0 = "mediaMaxSize"))) || ((data.imageRecommendedSize === undefined) && (missing0 = "imageRecommendedSize"))) || ((data.imageRecommendedPixels === undefined) && (missing0 = "imageRecommendedPixels"))) || ((data.imageFormats === undefined) && (missing0 = "imageFormats"))){
validate79.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "post") || (key0 === "subjectPresent")) || (key0 === "sourceFormats")) || (key0 === "mediaMaxSize")) || (key0 === "imageRecommendedSize")) || (key0 === "imageRecommendedPixels")) || (key0 === "imageFormats"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.post !== undefined){
let data0 = data.post;
const _errs2 = errors;
if((typeof data0 !== "boolean") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "boolean") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate79.errors = [{instancePath:instancePath+"/post",schemaPath:"#/properties/post/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["post"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.subjectPresent !== undefined){
let data1 = data.subjectPresent;
const _errs5 = errors;
if(typeof data1 !== "boolean"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "boolean"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "false" || data1 === 0 || data1 === null){
coerced1 = false;
}
else if(data1 === "true" || data1 === 1){
coerced1 = true;
}
else {
validate79.errors = [{instancePath:instancePath+"/subjectPresent",schemaPath:"#/properties/subjectPresent/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["subjectPresent"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sourceFormats !== undefined){
let data2 = data.sourceFormats;
const _errs7 = errors;
if(!(Array.isArray(data2))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(Array.isArray(data2)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else {
validate79.errors = [{instancePath:instancePath+"/sourceFormats",schemaPath:"#/properties/sourceFormats/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["sourceFormats"] = coerced2;
}
}
}
if(errors === _errs7){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
let data3 = data2[i0];
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate79.errors = [{instancePath:instancePath+"/sourceFormats/" + i0,schemaPath:"#/properties/sourceFormats/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2[i0] = coerced3;
}
}
}
var valid1 = _errs9 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.mediaMaxSize !== undefined){
let data4 = data.mediaMaxSize;
const _errs11 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else {
validate79.errors = [{instancePath:instancePath+"/mediaMaxSize",schemaPath:"#/properties/mediaMaxSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["mediaMaxSize"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.imageRecommendedSize !== undefined){
let data5 = data.imageRecommendedSize;
const _errs13 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else {
validate79.errors = [{instancePath:instancePath+"/imageRecommendedSize",schemaPath:"#/properties/imageRecommendedSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["imageRecommendedSize"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.imageRecommendedPixels !== undefined){
let data6 = data.imageRecommendedPixels;
const _errs15 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate79.errors = [{instancePath:instancePath+"/imageRecommendedPixels",schemaPath:"#/properties/imageRecommendedPixels/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["imageRecommendedPixels"] = coerced6;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.imageFormats !== undefined){
let data7 = data.imageFormats;
const _errs17 = errors;
if(!(Array.isArray(data7))){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(Array.isArray(data7)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "string" || dataType7 === "number"
              || dataType7 === "boolean" || data7 === null){
coerced7 = [data7];
}
else {
validate79.errors = [{instancePath:instancePath+"/imageFormats",schemaPath:"#/properties/imageFormats/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["imageFormats"] = coerced7;
}
}
}
if(errors === _errs17){
if(Array.isArray(data7)){
var valid2 = true;
const len1 = data7.length;
for(let i1=0; i1<len1; i1++){
let data8 = data7[i1];
const _errs19 = errors;
if(typeof data8 !== "string"){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(typeof data8 === "string"){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else {
validate79.errors = [{instancePath:instancePath+"/imageFormats/" + i1,schemaPath:"#/properties/imageFormats/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data7 !== undefined){
data7[i1] = coerced8;
}
}
}
var valid2 = _errs19 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate79.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate79.errors = vErrors;
return errors === 0;
}

export const PostingSourceInfo = validate80;
const schema86 = {"type":"object","properties":{"nodeName":{"type":"string"},"fullName":{"type":"string","nullable":true},"avatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"feedName":{"type":"string"},"postingId":{"type":"string"},"createdAt":{"type":"integer"}},"required":["nodeName","feedName","postingId","createdAt"],"additionalProperties":false};

function validate80(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.nodeName === undefined) && (missing0 = "nodeName")) || ((data.feedName === undefined) && (missing0 = "feedName"))) || ((data.postingId === undefined) && (missing0 = "postingId"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate80.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "nodeName") || (key0 === "fullName")) || (key0 === "avatar")) || (key0 === "feedName")) || (key0 === "postingId")) || (key0 === "createdAt"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate80.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.fullName !== undefined){
let data1 = data.fullName;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate80.errors = [{instancePath:instancePath+"/fullName",schemaPath:"#/properties/fullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["fullName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.avatar !== undefined){
let data2 = data.avatar;
const _errs7 = errors;
const _errs8 = errors;
let valid1 = false;
const _errs9 = errors;
if((!(data2 && typeof data2 == "object" && !Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((data2 && typeof data2 == "object" && !Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
const err0 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["avatar"] = coerced2;
}
}
}
const _errs10 = errors;
if(errors === _errs10){
if(data2 && typeof data2 == "object" && !Array.isArray(data2)){
let missing1;
if(((data2.mediaId === undefined) && (missing1 = "mediaId")) || ((data2.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs12 = errors;
for(const key1 in data2){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data2[key1];
}
}
if(_errs12 === errors){
if(data2.mediaId !== undefined){
let data3 = data2.mediaId;
const _errs13 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
const err2 = {instancePath:instancePath+"/avatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2["mediaId"] = coerced3;
}
}
}
var valid3 = _errs13 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.path !== undefined){
let data4 = data2.path;
const _errs15 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
const err3 = {instancePath:instancePath+"/avatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data2 !== undefined){
data2["path"] = coerced4;
}
}
}
var valid3 = _errs15 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.width !== undefined){
let data5 = data2.width;
const _errs17 = errors;
if((!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err4 = {instancePath:instancePath+"/avatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data2 !== undefined){
data2["width"] = coerced5;
}
}
}
var valid3 = _errs17 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.height !== undefined){
let data6 = data2.height;
const _errs20 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err5 = {instancePath:instancePath+"/avatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data2 !== undefined){
data2["height"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.shape !== undefined){
let data7 = data2.shape;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err6 = {instancePath:instancePath+"/avatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data2 !== undefined){
data2["shape"] = coerced7;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs9 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs28 = errors;
if(data2 !== null){
let dataType8 = typeof data2;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType8 = typeof data2;
if(data2 === null){
coerced8 = data2;
}
}
if(!(coerced8 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced8 = null;
}
else {
const err8 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced8 !== undefined){
data2 = coerced8;
if(data !== undefined){
data["avatar"] = coerced8;
}
}
}
var _valid0 = _errs28 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate80.errors = vErrors;
return false;
}
else {
errors = _errs8;
if(vErrors !== null){
if(_errs8){
vErrors.length = _errs8;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data8 = data.feedName;
const _errs30 = errors;
if(typeof data8 !== "string"){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if(typeof data8 === "string"){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data8;
}
else if(data8 === null){
coerced9 = "";
}
else {
validate80.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data !== undefined){
data["feedName"] = coerced9;
}
}
}
var valid0 = _errs30 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data9 = data.postingId;
const _errs32 = errors;
if(typeof data9 !== "string"){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if(typeof data9 === "string"){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data9;
}
else if(data9 === null){
coerced10 = "";
}
else {
validate80.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["postingId"] = coerced10;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data10 = data.createdAt;
const _errs34 = errors;
if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10))){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data10 === null
              || (dataType11 === "string" && data10 && data10 == +data10 && !(data10 % 1))){
coerced11 = +data10;
}
else {
validate80.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["createdAt"] = coerced11;
}
}
}
var valid0 = _errs34 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate80.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate80.errors = vErrors;
return errors === 0;
}

export const PrivateMediaFileInfo = validate81;
const schema88 = {"type":"object","properties":{"id":{"type":"string"},"hash":{"type":"string"},"path":{"type":"string"},"directPath":{"type":"string","nullable":true},"mimeType":{"type":"string"},"width":{"type":"integer","default":0},"height":{"type":"integer","default":0},"orientation":{"type":"integer","default":1},"size":{"type":"integer"},"postingId":{"type":"string","nullable":true},"previews":{"type":"array","items":{"$ref":"node#/definitions/MediaFilePreviewInfo"},"nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/PrivateMediaFileOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","hash","path","mimeType","width","height","orientation","size"],"additionalProperties":false};

function validate81(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.width === undefined){
data.width = 0;
}
if(data.height === undefined){
data.height = 0;
}
if(data.orientation === undefined){
data.orientation = 1;
}
let missing0;
if(((((((((data.id === undefined) && (missing0 = "id")) || ((data.hash === undefined) && (missing0 = "hash"))) || ((data.path === undefined) && (missing0 = "path"))) || ((data.mimeType === undefined) && (missing0 = "mimeType"))) || ((data.width === undefined) && (missing0 = "width"))) || ((data.height === undefined) && (missing0 = "height"))) || ((data.orientation === undefined) && (missing0 = "orientation"))) || ((data.size === undefined) && (missing0 = "size"))){
validate81.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema88.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate81.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hash !== undefined){
let data1 = data.hash;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate81.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["hash"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.path !== undefined){
let data2 = data.path;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate81.errors = [{instancePath:instancePath+"/path",schemaPath:"#/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["path"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.directPath !== undefined){
let data3 = data.directPath;
const _errs8 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate81.errors = [{instancePath:instancePath+"/directPath",schemaPath:"#/properties/directPath/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["directPath"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.mimeType !== undefined){
let data4 = data.mimeType;
const _errs11 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
validate81.errors = [{instancePath:instancePath+"/mimeType",schemaPath:"#/properties/mimeType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["mimeType"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data5 = data.width;
const _errs13 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else {
validate81.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["width"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
if(valid0){
let data6 = data.height;
const _errs15 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate81.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["height"] = coerced6;
}
}
}
var valid0 = _errs15 === errors;
if(valid0){
let data7 = data.orientation;
const _errs17 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else {
validate81.errors = [{instancePath:instancePath+"/orientation",schemaPath:"#/properties/orientation/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["orientation"] = coerced7;
}
}
}
var valid0 = _errs17 === errors;
if(valid0){
if(data.size !== undefined){
let data8 = data.size;
const _errs19 = errors;
if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else {
validate81.errors = [{instancePath:instancePath+"/size",schemaPath:"#/properties/size/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["size"] = coerced8;
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data9 = data.postingId;
const _errs21 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate81.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["postingId"] = coerced9;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.previews !== undefined){
let data10 = data.previews;
const _errs24 = errors;
if((!(Array.isArray(data10))) && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((Array.isArray(data10)) && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "string" || dataType10 === "number"
              || dataType10 === "boolean" || data10 === null){
coerced10 = [data10];
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews",schemaPath:"#/properties/previews/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["previews"] = coerced10;
}
}
}
if(errors === _errs24){
if(Array.isArray(data10)){
var valid1 = true;
const len0 = data10.length;
for(let i0=0; i0<len0; i0++){
let data11 = data10[i0];
const _errs27 = errors;
const _errs28 = errors;
if(errors === _errs28){
if(data11 && typeof data11 == "object" && !Array.isArray(data11)){
let missing1;
if((((data11.targetWidth === undefined) && (missing1 = "targetWidth")) || ((data11.width === undefined) && (missing1 = "width"))) || ((data11.height === undefined) && (missing1 = "height"))){
validate81.errors = [{instancePath:instancePath+"/previews/" + i0,schemaPath:"node#/definitions/MediaFilePreviewInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs30 = errors;
for(const key1 in data11){
if(!(((((key1 === "targetWidth") || (key1 === "directPath")) || (key1 === "width")) || (key1 === "height")) || (key1 === "original"))){
delete data11[key1];
}
}
if(_errs30 === errors){
if(data11.targetWidth !== undefined){
let data12 = data11.targetWidth;
const _errs31 = errors;
if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){
let dataType11 = typeof data12;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType11 = typeof data12;
if(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12))){
coerced11 = data12;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data12 === null
              || (dataType11 === "string" && data12 && data12 == +data12 && !(data12 % 1))){
coerced11 = +data12;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0+"/targetWidth",schemaPath:"node#/definitions/MediaFilePreviewInfo/properties/targetWidth/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced11 !== undefined){
data12 = coerced11;
if(data11 !== undefined){
data11["targetWidth"] = coerced11;
}
}
}
var valid3 = _errs31 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data11.directPath !== undefined){
let data13 = data11.directPath;
const _errs33 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType12 = typeof data13;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType12 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced12 = data13;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data13;
}
else if(data13 === null){
coerced12 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced12 = null;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0+"/directPath",schemaPath:"node#/definitions/MediaFilePreviewInfo/properties/directPath/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data13 = coerced12;
if(data11 !== undefined){
data11["directPath"] = coerced12;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data11.width !== undefined){
let data14 = data11.width;
const _errs36 = errors;
if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){
let dataType13 = typeof data14;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType13 = typeof data14;
if(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14))){
coerced13 = data14;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 === "boolean" || data14 === null
              || (dataType13 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced13 = +data14;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0+"/width",schemaPath:"node#/definitions/MediaFilePreviewInfo/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced13 !== undefined){
data14 = coerced13;
if(data11 !== undefined){
data11["width"] = coerced13;
}
}
}
var valid3 = _errs36 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data11.height !== undefined){
let data15 = data11.height;
const _errs38 = errors;
if(!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))){
let dataType14 = typeof data15;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType14 = typeof data15;
if(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15))){
coerced14 = data15;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "boolean" || data15 === null
              || (dataType14 === "string" && data15 && data15 == +data15 && !(data15 % 1))){
coerced14 = +data15;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0+"/height",schemaPath:"node#/definitions/MediaFilePreviewInfo/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced14 !== undefined){
data15 = coerced14;
if(data11 !== undefined){
data11["height"] = coerced14;
}
}
}
var valid3 = _errs38 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data11.original !== undefined){
let data16 = data11.original;
const _errs40 = errors;
if((typeof data16 !== "boolean") && (data16 !== null)){
let dataType15 = typeof data16;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType15 = typeof data16;
if((typeof data16 === "boolean") && (data16 === null)){
coerced15 = data16;
}
}
if(!(coerced15 !== undefined)){
if(data16 === "false" || data16 === 0 || data16 === null){
coerced15 = false;
}
else if(data16 === "true" || data16 === 1){
coerced15 = true;
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced15 = null;
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0+"/original",schemaPath:"node#/definitions/MediaFilePreviewInfo/properties/original/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced15 !== undefined){
data16 = coerced15;
if(data11 !== undefined){
data11["original"] = coerced15;
}
}
}
var valid3 = _errs40 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
validate81.errors = [{instancePath:instancePath+"/previews/" + i0,schemaPath:"node#/definitions/MediaFilePreviewInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs27 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data17 = data.operations;
const _errs43 = errors;
const _errs44 = errors;
let valid4 = false;
const _errs45 = errors;
if((!(data17 && typeof data17 == "object" && !Array.isArray(data17))) && (data17 !== null)){
let dataType16 = typeof data17;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType16 = typeof data17;
if((data17 && typeof data17 == "object" && !Array.isArray(data17)) && (data17 === null)){
coerced16 = data17;
}
}
if(!(coerced16 !== undefined)){
if(data17 === "" || data17 === 0 || data17 === false){
coerced16 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced16 !== undefined){
data17 = coerced16;
if(data !== undefined){
data["operations"] = coerced16;
}
}
}
const _errs46 = errors;
if(errors === _errs46){
if(data17 && typeof data17 == "object" && !Array.isArray(data17)){
const _errs48 = errors;
for(const key2 in data17){
if(!(key2 === "view")){
delete data17[key2];
}
}
if(_errs48 === errors){
if(data17.view !== undefined){
let data18 = data17.view;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType17 = typeof data18;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType17 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced17 = data18;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data18;
}
else if(data18 === null){
coerced17 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced17 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/PrivateMediaFileOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced17 !== undefined){
data18 = coerced17;
if(data17 !== undefined){
data17["view"] = coerced17;
}
}
}
}
}
}
else {
const err2 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/PrivateMediaFileOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
var _valid0 = _errs45 === errors;
valid4 = valid4 || _valid0;
if(!valid4){
const _errs54 = errors;
if(data17 !== null){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if(data17 === null){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(data17 === "" || data17 === 0 || data17 === false){
coerced18 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data !== undefined){
data["operations"] = coerced18;
}
}
}
var _valid0 = _errs54 === errors;
valid4 = valid4 || _valid0;
}
if(!valid4){
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
validate81.errors = vErrors;
return false;
}
else {
errors = _errs44;
if(vErrors !== null){
if(_errs44){
vErrors.length = _errs44;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs43 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate81.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate81.errors = vErrors;
return errors === 0;
}

export const ProfileInfo = validate82;
const schema91 = {"type":"object","properties":{"fullName":{"type":"string","nullable":true},"gender":{"type":"string","nullable":true},"email":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"bioSrc":{"type":"string","nullable":true},"bioSrcFormat":{"type":"string","nullable":true},"bioHtml":{"type":"string","nullable":true},"avatar":{"anyOf":[{"$ref":"node#/definitions/AvatarInfo","type":"object","nullable":true},{"type":"null"}]},"fundraisers":{"type":"array","items":{"$ref":"node#/definitions/FundraiserInfo"},"nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/ProfileOperations","type":"object","nullable":true},{"type":"null"}]}},"additionalProperties":false};

function validate82(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema91.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.fullName !== undefined){
let data0 = data.fullName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/fullName",schemaPath:"#/properties/fullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["fullName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.gender !== undefined){
let data1 = data.gender;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/gender",schemaPath:"#/properties/gender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["gender"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.email !== undefined){
let data2 = data.email;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/email",schemaPath:"#/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["email"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data3 = data.title;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["title"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bioSrc !== undefined){
let data4 = data.bioSrc;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/bioSrc",schemaPath:"#/properties/bioSrc/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["bioSrc"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bioSrcFormat !== undefined){
let data5 = data.bioSrcFormat;
const _errs17 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/bioSrcFormat",schemaPath:"#/properties/bioSrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["bioSrcFormat"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bioHtml !== undefined){
let data6 = data.bioHtml;
const _errs20 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/bioHtml",schemaPath:"#/properties/bioHtml/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["bioHtml"] = coerced6;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.avatar !== undefined){
let data7 = data.avatar;
const _errs23 = errors;
const _errs24 = errors;
let valid1 = false;
const _errs25 = errors;
if((!(data7 && typeof data7 == "object" && !Array.isArray(data7))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((data7 && typeof data7 == "object" && !Array.isArray(data7)) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err0 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["avatar"] = coerced7;
}
}
}
const _errs26 = errors;
if(errors === _errs26){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
let missing0;
if(((((data7.id === undefined) && (missing0 = "id")) || ((data7.mediaId === undefined) && (missing0 = "mediaId"))) || ((data7.path === undefined) && (missing0 = "path"))) || ((data7.ordinal === undefined) && (missing0 = "ordinal"))){
const err1 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs28 = errors;
for(const key1 in data7){
if(!(((((((key1 === "id") || (key1 === "mediaId")) || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape")) || (key1 === "ordinal"))){
delete data7[key1];
}
}
if(_errs28 === errors){
if(data7.id !== undefined){
let data8 = data7.id;
const _errs29 = errors;
if(typeof data8 !== "string"){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(typeof data8 === "string"){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else {
const err2 = {instancePath:instancePath+"/avatar/id",schemaPath:"node#/definitions/AvatarInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data7 !== undefined){
data7["id"] = coerced8;
}
}
}
var valid3 = _errs29 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.mediaId !== undefined){
let data9 = data7.mediaId;
const _errs31 = errors;
if(typeof data9 !== "string"){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if(typeof data9 === "string"){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else {
const err3 = {instancePath:instancePath+"/avatar/mediaId",schemaPath:"node#/definitions/AvatarInfo/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data7 !== undefined){
data7["mediaId"] = coerced9;
}
}
}
var valid3 = _errs31 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.path !== undefined){
let data10 = data7.path;
const _errs33 = errors;
if(typeof data10 !== "string"){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if(typeof data10 === "string"){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else {
const err4 = {instancePath:instancePath+"/avatar/path",schemaPath:"node#/definitions/AvatarInfo/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data7 !== undefined){
data7["path"] = coerced10;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.width !== undefined){
let data11 = data7.width;
const _errs35 = errors;
if((!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))) && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11))) && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data11 === null
              || (dataType11 === "string" && data11 && data11 == +data11 && !(data11 % 1))){
coerced11 = +data11;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
const err5 = {instancePath:instancePath+"/avatar/width",schemaPath:"node#/definitions/AvatarInfo/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data7 !== undefined){
data7["width"] = coerced11;
}
}
}
var valid3 = _errs35 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.height !== undefined){
let data12 = data7.height;
const _errs38 = errors;
if((!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))) && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12))) && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 === "boolean" || data12 === null
              || (dataType12 === "string" && data12 && data12 == +data12 && !(data12 % 1))){
coerced12 = +data12;
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err6 = {instancePath:instancePath+"/avatar/height",schemaPath:"node#/definitions/AvatarInfo/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data7 !== undefined){
data7["height"] = coerced12;
}
}
}
var valid3 = _errs38 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.shape !== undefined){
let data13 = data7.shape;
const _errs41 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
const err7 = {instancePath:instancePath+"/avatar/shape",schemaPath:"node#/definitions/AvatarInfo/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data7 !== undefined){
data7["shape"] = coerced13;
}
}
}
var valid3 = _errs41 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.ordinal !== undefined){
let data14 = data7.ordinal;
const _errs44 = errors;
if(!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14))){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "boolean" || data14 === null
              || (dataType14 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced14 = +data14;
}
else {
const err8 = {instancePath:instancePath+"/avatar/ordinal",schemaPath:"node#/definitions/AvatarInfo/properties/ordinal/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data7 !== undefined){
data7["ordinal"] = coerced14;
}
}
}
var valid3 = _errs44 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
}
}
else {
const err9 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
var _valid0 = _errs25 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs48 = errors;
if(data7 !== null){
let dataType15 = typeof data7;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType15 = typeof data7;
if(data7 === null){
coerced15 = data7;
}
}
if(!(coerced15 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced15 = null;
}
else {
const err10 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced15 !== undefined){
data7 = coerced15;
if(data !== undefined){
data["avatar"] = coerced15;
}
}
}
var _valid0 = _errs48 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err11 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
validate82.errors = vErrors;
return false;
}
else {
errors = _errs24;
if(vErrors !== null){
if(_errs24){
vErrors.length = _errs24;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.fundraisers !== undefined){
let data15 = data.fundraisers;
const _errs50 = errors;
if((!(Array.isArray(data15))) && (data15 !== null)){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType16 = typeof data15;
if((Array.isArray(data15)) && (data15 === null)){
coerced16 = data15;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "string" || dataType16 === "number"
              || dataType16 === "boolean" || data15 === null){
coerced16 = [data15];
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced16 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers",schemaPath:"#/properties/fundraisers/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["fundraisers"] = coerced16;
}
}
}
if(errors === _errs50){
if(Array.isArray(data15)){
var valid4 = true;
const len0 = data15.length;
for(let i0=0; i0<len0; i0++){
let data16 = data15[i0];
const _errs53 = errors;
const _errs54 = errors;
if(errors === _errs54){
if(data16 && typeof data16 == "object" && !Array.isArray(data16)){
let missing1;
if((data16.title === undefined) && (missing1 = "title")){
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0,schemaPath:"node#/definitions/FundraiserInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs56 = errors;
for(const key2 in data16){
if(!((((key2 === "title") || (key2 === "qrCode")) || (key2 === "text")) || (key2 === "href"))){
delete data16[key2];
}
}
if(_errs56 === errors){
if(data16.title !== undefined){
let data17 = data16.title;
const _errs57 = errors;
if(typeof data17 !== "string"){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if(typeof data17 === "string"){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0+"/title",schemaPath:"node#/definitions/FundraiserInfo/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data16 !== undefined){
data16["title"] = coerced17;
}
}
}
var valid6 = _errs57 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.qrCode !== undefined){
let data18 = data16.qrCode;
const _errs59 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data18;
}
else if(data18 === null){
coerced18 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced18 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0+"/qrCode",schemaPath:"node#/definitions/FundraiserInfo/properties/qrCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data16 !== undefined){
data16["qrCode"] = coerced18;
}
}
}
var valid6 = _errs59 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.text !== undefined){
let data19 = data16.text;
const _errs62 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType19 = typeof data19;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType19 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced19 = data19;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data19;
}
else if(data19 === null){
coerced19 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced19 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0+"/text",schemaPath:"node#/definitions/FundraiserInfo/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data19 = coerced19;
if(data16 !== undefined){
data16["text"] = coerced19;
}
}
}
var valid6 = _errs62 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.href !== undefined){
let data20 = data16.href;
const _errs65 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType20 = typeof data20;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType20 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced20 = data20;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data20;
}
else if(data20 === null){
coerced20 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced20 = null;
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0+"/href",schemaPath:"node#/definitions/FundraiserInfo/properties/href/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced20 !== undefined){
data20 = coerced20;
if(data16 !== undefined){
data16["href"] = coerced20;
}
}
}
var valid6 = _errs65 === errors;
}
else {
var valid6 = true;
}
}
}
}
}
}
}
else {
validate82.errors = [{instancePath:instancePath+"/fundraisers/" + i0,schemaPath:"node#/definitions/FundraiserInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid4 = _errs53 === errors;
if(!valid4){
break;
}
}
}
}
var valid0 = _errs50 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data21 = data.operations;
const _errs68 = errors;
const _errs69 = errors;
let valid7 = false;
const _errs70 = errors;
if((!(data21 && typeof data21 == "object" && !Array.isArray(data21))) && (data21 !== null)){
let dataType21 = typeof data21;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType21 = typeof data21;
if((data21 && typeof data21 == "object" && !Array.isArray(data21)) && (data21 === null)){
coerced21 = data21;
}
}
if(!(coerced21 !== undefined)){
if(data21 === "" || data21 === 0 || data21 === false){
coerced21 = null;
}
else {
const err12 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced21 !== undefined){
data21 = coerced21;
if(data !== undefined){
data["operations"] = coerced21;
}
}
}
const _errs71 = errors;
if(errors === _errs71){
if(data21 && typeof data21 == "object" && !Array.isArray(data21)){
const _errs73 = errors;
for(const key3 in data21){
if(!((key3 === "edit") || (key3 === "viewEmail"))){
delete data21[key3];
}
}
if(_errs73 === errors){
if(data21.edit !== undefined){
let data22 = data21.edit;
const _errs74 = errors;
if((typeof data22 !== "string") && (data22 !== null)){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if((typeof data22 === "string") && (data22 === null)){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data22;
}
else if(data22 === null){
coerced22 = "";
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced22 = null;
}
else {
const err13 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/ProfileOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data21 !== undefined){
data21["edit"] = coerced22;
}
}
}
var valid9 = _errs74 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data21.viewEmail !== undefined){
let data23 = data21.viewEmail;
const _errs77 = errors;
if((typeof data23 !== "string") && (data23 !== null)){
let dataType23 = typeof data23;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType23 = typeof data23;
if((typeof data23 === "string") && (data23 === null)){
coerced23 = data23;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data23;
}
else if(data23 === null){
coerced23 = "";
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced23 = null;
}
else {
const err14 = {instancePath:instancePath+"/operations/viewEmail",schemaPath:"node#/definitions/ProfileOperations/properties/viewEmail/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced23 !== undefined){
data23 = coerced23;
if(data21 !== undefined){
data21["viewEmail"] = coerced23;
}
}
}
var valid9 = _errs77 === errors;
}
else {
var valid9 = true;
}
}
}
}
else {
const err15 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/ProfileOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
var _valid1 = _errs70 === errors;
valid7 = valid7 || _valid1;
if(!valid7){
const _errs82 = errors;
if(data21 !== null){
let dataType24 = typeof data21;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType24 = typeof data21;
if(data21 === null){
coerced24 = data21;
}
}
if(!(coerced24 !== undefined)){
if(data21 === "" || data21 === 0 || data21 === false){
coerced24 = null;
}
else {
const err16 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced24 !== undefined){
data21 = coerced24;
if(data !== undefined){
data["operations"] = coerced24;
}
}
}
var _valid1 = _errs82 === errors;
valid7 = valid7 || _valid1;
}
if(!valid7){
const err17 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
validate82.errors = vErrors;
return false;
}
else {
errors = _errs69;
if(vErrors !== null){
if(_errs69){
vErrors.length = _errs69;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs68 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate82.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate82.errors = vErrors;
return errors === 0;
}

export const PublicMediaFileInfo = validate83;
const schema95 = {"type":"object","properties":{"id":{"type":"string"},"path":{"type":"string"},"width":{"type":"integer","default":0},"height":{"type":"integer","default":0},"orientation":{"type":"integer","default":1},"size":{"type":"integer"}},"required":["id","path","width","height","orientation","size"],"additionalProperties":false};

function validate83(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.width === undefined){
data.width = 0;
}
if(data.height === undefined){
data.height = 0;
}
if(data.orientation === undefined){
data.orientation = 1;
}
let missing0;
if(((((((data.id === undefined) && (missing0 = "id")) || ((data.path === undefined) && (missing0 = "path"))) || ((data.width === undefined) && (missing0 = "width"))) || ((data.height === undefined) && (missing0 = "height"))) || ((data.orientation === undefined) && (missing0 = "orientation"))) || ((data.size === undefined) && (missing0 = "size"))){
validate83.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "id") || (key0 === "path")) || (key0 === "width")) || (key0 === "height")) || (key0 === "orientation")) || (key0 === "size"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate83.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.path !== undefined){
let data1 = data.path;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate83.errors = [{instancePath:instancePath+"/path",schemaPath:"#/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["path"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data2 = data.width;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate83.errors = [{instancePath:instancePath+"/width",schemaPath:"#/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["width"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
if(valid0){
let data3 = data.height;
const _errs8 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate83.errors = [{instancePath:instancePath+"/height",schemaPath:"#/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["height"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
if(valid0){
let data4 = data.orientation;
const _errs10 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else {
validate83.errors = [{instancePath:instancePath+"/orientation",schemaPath:"#/properties/orientation/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["orientation"] = coerced4;
}
}
}
var valid0 = _errs10 === errors;
if(valid0){
if(data.size !== undefined){
let data5 = data.size;
const _errs12 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else {
validate83.errors = [{instancePath:instancePath+"/size",schemaPath:"#/properties/size/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["size"] = coerced5;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate83.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate83.errors = vErrors;
return errors === 0;
}

export const ReactionInfo = validate84;
const schema96 = {"type":"object","properties":{"ownerName":{"type":"string","nullable":true},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"ownerAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"postingId":{"type":"string","nullable":true},"postingRevisionId":{"type":"string","nullable":true},"commentId":{"type":"string","nullable":true},"commentRevisionId":{"type":"string","nullable":true},"negative":{"type":"boolean","nullable":true},"emoji":{"type":"integer","nullable":true},"moment":{"type":"integer","nullable":true},"createdAt":{"type":"integer","nullable":true},"deadline":{"type":"integer","nullable":true},"signature":{"type":"string","nullable":true},"signatureVersion":{"type":"integer","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"ownerOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"seniorOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"majorOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]}},"additionalProperties":false};

function validate84(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema96.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.ownerName !== undefined){
let data0 = data.ownerName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["ownerName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data1 = data.ownerFullName;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerFullName"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data2 = data.ownerGender;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerGender"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerAvatar !== undefined){
let data3 = data.ownerAvatar;
const _errs11 = errors;
const _errs12 = errors;
let valid1 = false;
const _errs13 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err0 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["ownerAvatar"] = coerced3;
}
}
}
const _errs14 = errors;
if(errors === _errs14){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
let missing0;
if(((data3.mediaId === undefined) && (missing0 = "mediaId")) || ((data3.path === undefined) && (missing0 = "path"))){
const err1 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs16 = errors;
for(const key1 in data3){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data3[key1];
}
}
if(_errs16 === errors){
if(data3.mediaId !== undefined){
let data4 = data3.mediaId;
const _errs17 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
const err2 = {instancePath:instancePath+"/ownerAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data3 !== undefined){
data3["mediaId"] = coerced4;
}
}
}
var valid3 = _errs17 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.path !== undefined){
let data5 = data3.path;
const _errs19 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
const err3 = {instancePath:instancePath+"/ownerAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data3 !== undefined){
data3["path"] = coerced5;
}
}
}
var valid3 = _errs19 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.width !== undefined){
let data6 = data3.width;
const _errs21 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err4 = {instancePath:instancePath+"/ownerAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data3 !== undefined){
data3["width"] = coerced6;
}
}
}
var valid3 = _errs21 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.height !== undefined){
let data7 = data3.height;
const _errs24 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err5 = {instancePath:instancePath+"/ownerAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data3 !== undefined){
data3["height"] = coerced7;
}
}
}
var valid3 = _errs24 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.shape !== undefined){
let data8 = data3.shape;
const _errs27 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err6 = {instancePath:instancePath+"/ownerAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data3 !== undefined){
data3["shape"] = coerced8;
}
}
}
var valid3 = _errs27 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs13 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs32 = errors;
if(data3 !== null){
let dataType9 = typeof data3;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType9 = typeof data3;
if(data3 === null){
coerced9 = data3;
}
}
if(!(coerced9 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced9 = null;
}
else {
const err8 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced9 !== undefined){
data3 = coerced9;
if(data !== undefined){
data["ownerAvatar"] = coerced9;
}
}
}
var _valid0 = _errs32 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate84.errors = vErrors;
return false;
}
else {
errors = _errs12;
if(vErrors !== null){
if(_errs12){
vErrors.length = _errs12;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data9 = data.postingId;
const _errs34 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data9;
}
else if(data9 === null){
coerced10 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced10 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["postingId"] = coerced10;
}
}
}
var valid0 = _errs34 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingRevisionId !== undefined){
let data10 = data.postingRevisionId;
const _errs37 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data10;
}
else if(data10 === null){
coerced11 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced11 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/postingRevisionId",schemaPath:"#/properties/postingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["postingRevisionId"] = coerced11;
}
}
}
var valid0 = _errs37 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentId !== undefined){
let data11 = data.commentId;
const _errs40 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data11;
}
else if(data11 === null){
coerced12 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/commentId",schemaPath:"#/properties/commentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["commentId"] = coerced12;
}
}
}
var valid0 = _errs40 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentRevisionId !== undefined){
let data12 = data.commentRevisionId;
const _errs43 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType13 = typeof data12;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType13 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced13 = data12;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data12;
}
else if(data12 === null){
coerced13 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced13 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/commentRevisionId",schemaPath:"#/properties/commentRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data12 = coerced13;
if(data !== undefined){
data["commentRevisionId"] = coerced13;
}
}
}
var valid0 = _errs43 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.negative !== undefined){
let data13 = data.negative;
const _errs46 = errors;
if((typeof data13 !== "boolean") && (data13 !== null)){
let dataType14 = typeof data13;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType14 = typeof data13;
if((typeof data13 === "boolean") && (data13 === null)){
coerced14 = data13;
}
}
if(!(coerced14 !== undefined)){
if(data13 === "false" || data13 === 0 || data13 === null){
coerced14 = false;
}
else if(data13 === "true" || data13 === 1){
coerced14 = true;
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced14 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/negative",schemaPath:"#/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced14 !== undefined){
data13 = coerced14;
if(data !== undefined){
data["negative"] = coerced14;
}
}
}
var valid0 = _errs46 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.emoji !== undefined){
let data14 = data.emoji;
const _errs49 = errors;
if((!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))) && (data14 !== null)){
let dataType15 = typeof data14;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType15 = typeof data14;
if((((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14))) && (data14 === null)){
coerced15 = data14;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 === "boolean" || data14 === null
              || (dataType15 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced15 = +data14;
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced15 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/emoji",schemaPath:"#/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced15 !== undefined){
data14 = coerced15;
if(data !== undefined){
data["emoji"] = coerced15;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data15 = data.moment;
const _errs52 = errors;
if((!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))) && (data15 !== null)){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType16 = typeof data15;
if((((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15))) && (data15 === null)){
coerced16 = data15;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "boolean" || data15 === null
              || (dataType16 === "string" && data15 && data15 == +data15 && !(data15 % 1))){
coerced16 = +data15;
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced16 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["moment"] = coerced16;
}
}
}
var valid0 = _errs52 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data16 = data.createdAt;
const _errs55 = errors;
if((!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))) && (data16 !== null)){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType17 = typeof data16;
if((((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16))) && (data16 === null)){
coerced17 = data16;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 === "boolean" || data16 === null
              || (dataType17 === "string" && data16 && data16 == +data16 && !(data16 % 1))){
coerced17 = +data16;
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced17 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["createdAt"] = coerced17;
}
}
}
var valid0 = _errs55 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data17 = data.deadline;
const _errs58 = errors;
if((!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))) && (data17 !== null)){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if((((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17))) && (data17 === null)){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 === "boolean" || data17 === null
              || (dataType18 === "string" && data17 && data17 == +data17 && !(data17 % 1))){
coerced18 = +data17;
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced18 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data !== undefined){
data["deadline"] = coerced18;
}
}
}
var valid0 = _errs58 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data18 = data.signature;
const _errs61 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data18;
}
else if(data18 === null){
coerced19 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced19 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data !== undefined){
data["signature"] = coerced19;
}
}
}
var valid0 = _errs61 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data19 = data.signatureVersion;
const _errs64 = errors;
if((!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))) && (data19 !== null)){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if((((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19))) && (data19 === null)){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 === "boolean" || data19 === null
              || (dataType20 === "string" && data19 && data19 == +data19 && !(data19 % 1))){
coerced20 = +data19;
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced20 = null;
}
else {
validate84.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data !== undefined){
data["signatureVersion"] = coerced20;
}
}
}
var valid0 = _errs64 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data20 = data.operations;
const _errs67 = errors;
const _errs68 = errors;
let valid4 = false;
const _errs69 = errors;
if((!(data20 && typeof data20 == "object" && !Array.isArray(data20))) && (data20 !== null)){
let dataType21 = typeof data20;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType21 = typeof data20;
if((data20 && typeof data20 == "object" && !Array.isArray(data20)) && (data20 === null)){
coerced21 = data20;
}
}
if(!(coerced21 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced21 = null;
}
else {
const err10 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced21 !== undefined){
data20 = coerced21;
if(data !== undefined){
data["operations"] = coerced21;
}
}
}
const _errs70 = errors;
if(errors === _errs70){
if(data20 && typeof data20 == "object" && !Array.isArray(data20)){
const _errs72 = errors;
for(const key2 in data20){
if(!((key2 === "view") || (key2 === "delete"))){
delete data20[key2];
}
}
if(_errs72 === errors){
if(data20.view !== undefined){
let data21 = data20.view;
const _errs73 = errors;
if((typeof data21 !== "string") && (data21 !== null)){
let dataType22 = typeof data21;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType22 = typeof data21;
if((typeof data21 === "string") && (data21 === null)){
coerced22 = data21;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data21;
}
else if(data21 === null){
coerced22 = "";
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced22 = null;
}
else {
const err11 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced22 !== undefined){
data21 = coerced22;
if(data20 !== undefined){
data20["view"] = coerced22;
}
}
}
var valid6 = _errs73 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data20.delete !== undefined){
let data22 = data20.delete;
const _errs76 = errors;
if((typeof data22 !== "string") && (data22 !== null)){
let dataType23 = typeof data22;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType23 = typeof data22;
if((typeof data22 === "string") && (data22 === null)){
coerced23 = data22;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data22;
}
else if(data22 === null){
coerced23 = "";
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced23 = null;
}
else {
const err12 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced23 !== undefined){
data22 = coerced23;
if(data20 !== undefined){
data20["delete"] = coerced23;
}
}
}
var valid6 = _errs76 === errors;
}
else {
var valid6 = true;
}
}
}
}
else {
const err13 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
var _valid1 = _errs69 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs81 = errors;
if(data20 !== null){
let dataType24 = typeof data20;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType24 = typeof data20;
if(data20 === null){
coerced24 = data20;
}
}
if(!(coerced24 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced24 = null;
}
else {
const err14 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced24 !== undefined){
data20 = coerced24;
if(data !== undefined){
data["operations"] = coerced24;
}
}
}
var _valid1 = _errs81 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err15 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
validate84.errors = vErrors;
return false;
}
else {
errors = _errs68;
if(vErrors !== null){
if(_errs68){
vErrors.length = _errs68;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs67 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerOperations !== undefined){
let data23 = data.ownerOperations;
const _errs83 = errors;
const _errs84 = errors;
let valid7 = false;
const _errs85 = errors;
if((!(data23 && typeof data23 == "object" && !Array.isArray(data23))) && (data23 !== null)){
let dataType25 = typeof data23;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType25 = typeof data23;
if((data23 && typeof data23 == "object" && !Array.isArray(data23)) && (data23 === null)){
coerced25 = data23;
}
}
if(!(coerced25 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced25 = null;
}
else {
const err16 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced25 !== undefined){
data23 = coerced25;
if(data !== undefined){
data["ownerOperations"] = coerced25;
}
}
}
const _errs86 = errors;
if(errors === _errs86){
if(data23 && typeof data23 == "object" && !Array.isArray(data23)){
const _errs88 = errors;
for(const key3 in data23){
if(!((key3 === "view") || (key3 === "delete"))){
delete data23[key3];
}
}
if(_errs88 === errors){
if(data23.view !== undefined){
let data24 = data23.view;
const _errs89 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType26 = typeof data24;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType26 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced26 = data24;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 == "number" || dataType26 == "boolean"){
coerced26 = "" + data24;
}
else if(data24 === null){
coerced26 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced26 = null;
}
else {
const err17 = {instancePath:instancePath+"/ownerOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced26 !== undefined){
data24 = coerced26;
if(data23 !== undefined){
data23["view"] = coerced26;
}
}
}
var valid9 = _errs89 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data23.delete !== undefined){
let data25 = data23.delete;
const _errs92 = errors;
if((typeof data25 !== "string") && (data25 !== null)){
let dataType27 = typeof data25;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType27 = typeof data25;
if((typeof data25 === "string") && (data25 === null)){
coerced27 = data25;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 == "number" || dataType27 == "boolean"){
coerced27 = "" + data25;
}
else if(data25 === null){
coerced27 = "";
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced27 = null;
}
else {
const err18 = {instancePath:instancePath+"/ownerOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced27 !== undefined){
data25 = coerced27;
if(data23 !== undefined){
data23["delete"] = coerced27;
}
}
}
var valid9 = _errs92 === errors;
}
else {
var valid9 = true;
}
}
}
}
else {
const err19 = {instancePath:instancePath+"/ownerOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
var _valid2 = _errs85 === errors;
valid7 = valid7 || _valid2;
if(!valid7){
const _errs97 = errors;
if(data23 !== null){
let dataType28 = typeof data23;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType28 = typeof data23;
if(data23 === null){
coerced28 = data23;
}
}
if(!(coerced28 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced28 = null;
}
else {
const err20 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced28 !== undefined){
data23 = coerced28;
if(data !== undefined){
data["ownerOperations"] = coerced28;
}
}
}
var _valid2 = _errs97 === errors;
valid7 = valid7 || _valid2;
}
if(!valid7){
const err21 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
validate84.errors = vErrors;
return false;
}
else {
errors = _errs84;
if(vErrors !== null){
if(_errs84){
vErrors.length = _errs84;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs83 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.seniorOperations !== undefined){
let data26 = data.seniorOperations;
const _errs99 = errors;
const _errs100 = errors;
let valid10 = false;
const _errs101 = errors;
if((!(data26 && typeof data26 == "object" && !Array.isArray(data26))) && (data26 !== null)){
let dataType29 = typeof data26;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType29 = typeof data26;
if((data26 && typeof data26 == "object" && !Array.isArray(data26)) && (data26 === null)){
coerced29 = data26;
}
}
if(!(coerced29 !== undefined)){
if(data26 === "" || data26 === 0 || data26 === false){
coerced29 = null;
}
else {
const err22 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced29 !== undefined){
data26 = coerced29;
if(data !== undefined){
data["seniorOperations"] = coerced29;
}
}
}
const _errs102 = errors;
if(errors === _errs102){
if(data26 && typeof data26 == "object" && !Array.isArray(data26)){
const _errs104 = errors;
for(const key4 in data26){
if(!((key4 === "view") || (key4 === "delete"))){
delete data26[key4];
}
}
if(_errs104 === errors){
if(data26.view !== undefined){
let data27 = data26.view;
const _errs105 = errors;
if((typeof data27 !== "string") && (data27 !== null)){
let dataType30 = typeof data27;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType30 = typeof data27;
if((typeof data27 === "string") && (data27 === null)){
coerced30 = data27;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data27;
}
else if(data27 === null){
coerced30 = "";
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced30 = null;
}
else {
const err23 = {instancePath:instancePath+"/seniorOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced30 !== undefined){
data27 = coerced30;
if(data26 !== undefined){
data26["view"] = coerced30;
}
}
}
var valid12 = _errs105 === errors;
}
else {
var valid12 = true;
}
if(valid12){
if(data26.delete !== undefined){
let data28 = data26.delete;
const _errs108 = errors;
if((typeof data28 !== "string") && (data28 !== null)){
let dataType31 = typeof data28;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType31 = typeof data28;
if((typeof data28 === "string") && (data28 === null)){
coerced31 = data28;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data28;
}
else if(data28 === null){
coerced31 = "";
}
else if(data28 === "" || data28 === 0 || data28 === false){
coerced31 = null;
}
else {
const err24 = {instancePath:instancePath+"/seniorOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced31 !== undefined){
data28 = coerced31;
if(data26 !== undefined){
data26["delete"] = coerced31;
}
}
}
var valid12 = _errs108 === errors;
}
else {
var valid12 = true;
}
}
}
}
else {
const err25 = {instancePath:instancePath+"/seniorOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
var _valid3 = _errs101 === errors;
valid10 = valid10 || _valid3;
if(!valid10){
const _errs113 = errors;
if(data26 !== null){
let dataType32 = typeof data26;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType32 = typeof data26;
if(data26 === null){
coerced32 = data26;
}
}
if(!(coerced32 !== undefined)){
if(data26 === "" || data26 === 0 || data26 === false){
coerced32 = null;
}
else {
const err26 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced32 !== undefined){
data26 = coerced32;
if(data !== undefined){
data["seniorOperations"] = coerced32;
}
}
}
var _valid3 = _errs113 === errors;
valid10 = valid10 || _valid3;
}
if(!valid10){
const err27 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
validate84.errors = vErrors;
return false;
}
else {
errors = _errs100;
if(vErrors !== null){
if(_errs100){
vErrors.length = _errs100;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs99 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.majorOperations !== undefined){
let data29 = data.majorOperations;
const _errs115 = errors;
const _errs116 = errors;
let valid13 = false;
const _errs117 = errors;
if((!(data29 && typeof data29 == "object" && !Array.isArray(data29))) && (data29 !== null)){
let dataType33 = typeof data29;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType33 = typeof data29;
if((data29 && typeof data29 == "object" && !Array.isArray(data29)) && (data29 === null)){
coerced33 = data29;
}
}
if(!(coerced33 !== undefined)){
if(data29 === "" || data29 === 0 || data29 === false){
coerced33 = null;
}
else {
const err28 = {instancePath:instancePath+"/majorOperations",schemaPath:"#/properties/majorOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced33 !== undefined){
data29 = coerced33;
if(data !== undefined){
data["majorOperations"] = coerced33;
}
}
}
const _errs118 = errors;
if(errors === _errs118){
if(data29 && typeof data29 == "object" && !Array.isArray(data29)){
const _errs120 = errors;
for(const key5 in data29){
if(!((key5 === "view") || (key5 === "delete"))){
delete data29[key5];
}
}
if(_errs120 === errors){
if(data29.view !== undefined){
let data30 = data29.view;
const _errs121 = errors;
if((typeof data30 !== "string") && (data30 !== null)){
let dataType34 = typeof data30;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType34 = typeof data30;
if((typeof data30 === "string") && (data30 === null)){
coerced34 = data30;
}
}
if(!(coerced34 !== undefined)){
if(dataType34 == "number" || dataType34 == "boolean"){
coerced34 = "" + data30;
}
else if(data30 === null){
coerced34 = "";
}
else if(data30 === "" || data30 === 0 || data30 === false){
coerced34 = null;
}
else {
const err29 = {instancePath:instancePath+"/majorOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(coerced34 !== undefined){
data30 = coerced34;
if(data29 !== undefined){
data29["view"] = coerced34;
}
}
}
var valid15 = _errs121 === errors;
}
else {
var valid15 = true;
}
if(valid15){
if(data29.delete !== undefined){
let data31 = data29.delete;
const _errs124 = errors;
if((typeof data31 !== "string") && (data31 !== null)){
let dataType35 = typeof data31;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType35 = typeof data31;
if((typeof data31 === "string") && (data31 === null)){
coerced35 = data31;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data31;
}
else if(data31 === null){
coerced35 = "";
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced35 = null;
}
else {
const err30 = {instancePath:instancePath+"/majorOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
if(coerced35 !== undefined){
data31 = coerced35;
if(data29 !== undefined){
data29["delete"] = coerced35;
}
}
}
var valid15 = _errs124 === errors;
}
else {
var valid15 = true;
}
}
}
}
else {
const err31 = {instancePath:instancePath+"/majorOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
var _valid4 = _errs117 === errors;
valid13 = valid13 || _valid4;
if(!valid13){
const _errs129 = errors;
if(data29 !== null){
let dataType36 = typeof data29;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType36 = typeof data29;
if(data29 === null){
coerced36 = data29;
}
}
if(!(coerced36 !== undefined)){
if(data29 === "" || data29 === 0 || data29 === false){
coerced36 = null;
}
else {
const err32 = {instancePath:instancePath+"/majorOperations",schemaPath:"#/properties/majorOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(coerced36 !== undefined){
data29 = coerced36;
if(data !== undefined){
data["majorOperations"] = coerced36;
}
}
}
var _valid4 = _errs129 === errors;
valid13 = valid13 || _valid4;
}
if(!valid13){
const err33 = {instancePath:instancePath+"/majorOperations",schemaPath:"#/properties/majorOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
validate84.errors = vErrors;
return false;
}
else {
errors = _errs116;
if(vErrors !== null){
if(_errs116){
vErrors.length = _errs116;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs115 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate84.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate84.errors = vErrors;
return errors === 0;
}

export const ReactionInfoArray = validate85;
const schema102 = {"type":"array","items":{"$ref":"node#/definitions/ReactionInfo"}};

function validate85(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate85.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate84(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate84.errors : vErrors.concat(validate84.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate85.errors = vErrors;
return errors === 0;
}

export const ReactionsSliceInfo = validate87;
const schema103 = {"type":"object","properties":{"before":{"type":"integer"},"after":{"type":"integer"},"total":{"type":"integer"},"reactions":{"type":"array","items":{"$ref":"node#/definitions/ReactionInfo"}}},"required":["before","after","total","reactions"],"additionalProperties":false};

function validate87(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.before === undefined) && (missing0 = "before")) || ((data.after === undefined) && (missing0 = "after"))) || ((data.total === undefined) && (missing0 = "total"))) || ((data.reactions === undefined) && (missing0 = "reactions"))){
validate87.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "before") || (key0 === "after")) || (key0 === "total")) || (key0 === "reactions"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.before !== undefined){
let data0 = data.before;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate87.errors = [{instancePath:instancePath+"/before",schemaPath:"#/properties/before/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["before"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.after !== undefined){
let data1 = data.after;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate87.errors = [{instancePath:instancePath+"/after",schemaPath:"#/properties/after/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["after"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data2 = data.total;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate87.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["total"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data3 = data.reactions;
const _errs8 = errors;
if(!(Array.isArray(data3))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(Array.isArray(data3)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "string" || dataType3 === "number"
              || dataType3 === "boolean" || data3 === null){
coerced3 = [data3];
}
else {
validate87.errors = [{instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["reactions"] = coerced3;
}
}
}
if(errors === _errs8){
if(Array.isArray(data3)){
var valid1 = true;
const len0 = data3.length;
for(let i0=0; i0<len0; i0++){
const _errs10 = errors;
if(!(validate84(data3[i0], {instancePath:instancePath+"/reactions/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate84.errors : vErrors.concat(validate84.errors);
errors = vErrors.length;
}
var valid1 = _errs10 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate87.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate87.errors = vErrors;
return errors === 0;
}

export const ReactionTotalInfo = validate89;
const schema104 = {"type":"object","properties":{"emoji":{"type":"integer"},"total":{"type":"integer","nullable":true},"share":{"type":"number","nullable":true,"minimum":0,"maximum":1}},"required":["emoji"],"additionalProperties":false};

function validate89(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.emoji === undefined) && (missing0 = "emoji")){
validate89.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "emoji") || (key0 === "total")) || (key0 === "share"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.emoji !== undefined){
let data0 = data.emoji;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate89.errors = [{instancePath:instancePath+"/emoji",schemaPath:"#/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["emoji"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data1 = data.total;
const _errs4 = errors;
if((!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))) && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))) && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate89.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["total"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.share !== undefined){
let data2 = data.share;
const _errs7 = errors;
if((!((typeof data2 == "number") && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (isFinite(data2))) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "boolean" || data2 === null
              || (dataType2 == "string" && data2 && data2 == +data2)){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate89.errors = [{instancePath:instancePath+"/share",schemaPath:"#/properties/share/type",keyword:"type",params:{type: "number"},message:"must be number"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["share"] = coerced2;
}
}
}
if(errors === _errs7){
if((typeof data2 == "number") && (isFinite(data2))){
if(data2 > 1 || isNaN(data2)){
validate89.errors = [{instancePath:instancePath+"/share",schemaPath:"#/properties/share/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];
return false;
}
else {
if(data2 < 0 || isNaN(data2)){
validate89.errors = [{instancePath:instancePath+"/share",schemaPath:"#/properties/share/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];
return false;
}
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate89.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate89.errors = vErrors;
return errors === 0;
}

export const ReactionTotalsInfo = validate90;
const schema105 = {"type":"object","properties":{"entryId":{"type":"string"},"positive":{"type":"array","items":{"$ref":"node#/definitions/ReactionTotalInfo"},"default":[]},"negative":{"type":"array","items":{"$ref":"node#/definitions/ReactionTotalInfo"},"default":[]}},"required":["entryId","positive","negative"],"additionalProperties":false};

function validate90(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.positive === undefined){
data.positive = [];
}
if(data.negative === undefined){
data.negative = [];
}
let missing0;
if((((data.entryId === undefined) && (missing0 = "entryId")) || ((data.positive === undefined) && (missing0 = "positive"))) || ((data.negative === undefined) && (missing0 = "negative"))){
validate90.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "entryId") || (key0 === "positive")) || (key0 === "negative"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.entryId !== undefined){
let data0 = data.entryId;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate90.errors = [{instancePath:instancePath+"/entryId",schemaPath:"#/properties/entryId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["entryId"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data1 = data.positive;
const _errs4 = errors;
if(!(Array.isArray(data1))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(Array.isArray(data1)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "string" || dataType1 === "number"
              || dataType1 === "boolean" || data1 === null){
coerced1 = [data1];
}
else {
validate90.errors = [{instancePath:instancePath+"/positive",schemaPath:"#/properties/positive/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["positive"] = coerced1;
}
}
}
if(errors === _errs4){
if(Array.isArray(data1)){
var valid1 = true;
const len0 = data1.length;
for(let i0=0; i0<len0; i0++){
let data2 = data1[i0];
const _errs6 = errors;
const _errs7 = errors;
if(errors === _errs7){
if(data2 && typeof data2 == "object" && !Array.isArray(data2)){
let missing1;
if((data2.emoji === undefined) && (missing1 = "emoji")){
validate90.errors = [{instancePath:instancePath+"/positive/" + i0,schemaPath:"node#/definitions/ReactionTotalInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs9 = errors;
for(const key1 in data2){
if(!(((key1 === "emoji") || (key1 === "total")) || (key1 === "share"))){
delete data2[key1];
}
}
if(_errs9 === errors){
if(data2.emoji !== undefined){
let data3 = data2.emoji;
const _errs10 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType2 = typeof data3;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType2 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced2 = data3;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data3 === null
              || (dataType2 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced2 = +data3;
}
else {
validate90.errors = [{instancePath:instancePath+"/positive/" + i0+"/emoji",schemaPath:"node#/definitions/ReactionTotalInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data3 = coerced2;
if(data2 !== undefined){
data2["emoji"] = coerced2;
}
}
}
var valid3 = _errs10 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.total !== undefined){
let data4 = data2.total;
const _errs12 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data4 === null
              || (dataType3 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced3 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced3 = null;
}
else {
validate90.errors = [{instancePath:instancePath+"/positive/" + i0+"/total",schemaPath:"node#/definitions/ReactionTotalInfo/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data2 !== undefined){
data2["total"] = coerced3;
}
}
}
var valid3 = _errs12 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.share !== undefined){
let data5 = data2.share;
const _errs15 = errors;
if((!((typeof data5 == "number") && (isFinite(data5)))) && (data5 !== null)){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(((typeof data5 == "number") && (isFinite(data5))) && (data5 === null)){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "boolean" || data5 === null
              || (dataType4 == "string" && data5 && data5 == +data5)){
coerced4 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced4 = null;
}
else {
validate90.errors = [{instancePath:instancePath+"/positive/" + i0+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/type",keyword:"type",params:{type: "number"},message:"must be number"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data2 !== undefined){
data2["share"] = coerced4;
}
}
}
if(errors === _errs15){
if((typeof data5 == "number") && (isFinite(data5))){
if(data5 > 1 || isNaN(data5)){
validate90.errors = [{instancePath:instancePath+"/positive/" + i0+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];
return false;
}
else {
if(data5 < 0 || isNaN(data5)){
validate90.errors = [{instancePath:instancePath+"/positive/" + i0+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];
return false;
}
}
}
}
var valid3 = _errs15 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
else {
validate90.errors = [{instancePath:instancePath+"/positive/" + i0,schemaPath:"node#/definitions/ReactionTotalInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs6 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs4 === errors;
if(valid0){
let data6 = data.negative;
const _errs18 = errors;
if(!(Array.isArray(data6))){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if(Array.isArray(data6)){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "string" || dataType5 === "number"
              || dataType5 === "boolean" || data6 === null){
coerced5 = [data6];
}
else {
validate90.errors = [{instancePath:instancePath+"/negative",schemaPath:"#/properties/negative/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data !== undefined){
data["negative"] = coerced5;
}
}
}
if(errors === _errs18){
if(Array.isArray(data6)){
var valid4 = true;
const len1 = data6.length;
for(let i1=0; i1<len1; i1++){
let data7 = data6[i1];
const _errs20 = errors;
const _errs21 = errors;
if(errors === _errs21){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
let missing2;
if((data7.emoji === undefined) && (missing2 = "emoji")){
validate90.errors = [{instancePath:instancePath+"/negative/" + i1,schemaPath:"node#/definitions/ReactionTotalInfo/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];
return false;
}
else {
const _errs23 = errors;
for(const key2 in data7){
if(!(((key2 === "emoji") || (key2 === "total")) || (key2 === "share"))){
delete data7[key2];
}
}
if(_errs23 === errors){
if(data7.emoji !== undefined){
let data8 = data7.emoji;
const _errs24 = errors;
if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){
let dataType6 = typeof data8;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType6 = typeof data8;
if(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))){
coerced6 = data8;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data8 === null
              || (dataType6 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced6 = +data8;
}
else {
validate90.errors = [{instancePath:instancePath+"/negative/" + i1+"/emoji",schemaPath:"node#/definitions/ReactionTotalInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data8 = coerced6;
if(data7 !== undefined){
data7["emoji"] = coerced6;
}
}
}
var valid6 = _errs24 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data7.total !== undefined){
let data9 = data7.total;
const _errs26 = errors;
if((!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))) && (data9 !== null)){
let dataType7 = typeof data9;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType7 = typeof data9;
if((((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))) && (data9 === null)){
coerced7 = data9;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data9 === null
              || (dataType7 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced7 = +data9;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced7 = null;
}
else {
validate90.errors = [{instancePath:instancePath+"/negative/" + i1+"/total",schemaPath:"node#/definitions/ReactionTotalInfo/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data9 = coerced7;
if(data7 !== undefined){
data7["total"] = coerced7;
}
}
}
var valid6 = _errs26 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data7.share !== undefined){
let data10 = data7.share;
const _errs29 = errors;
if((!((typeof data10 == "number") && (isFinite(data10)))) && (data10 !== null)){
let dataType8 = typeof data10;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType8 = typeof data10;
if(((typeof data10 == "number") && (isFinite(data10))) && (data10 === null)){
coerced8 = data10;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "boolean" || data10 === null
              || (dataType8 == "string" && data10 && data10 == +data10)){
coerced8 = +data10;
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced8 = null;
}
else {
validate90.errors = [{instancePath:instancePath+"/negative/" + i1+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/type",keyword:"type",params:{type: "number"},message:"must be number"}];
return false;
}
}
if(coerced8 !== undefined){
data10 = coerced8;
if(data7 !== undefined){
data7["share"] = coerced8;
}
}
}
if(errors === _errs29){
if((typeof data10 == "number") && (isFinite(data10))){
if(data10 > 1 || isNaN(data10)){
validate90.errors = [{instancePath:instancePath+"/negative/" + i1+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/maximum",keyword:"maximum",params:{comparison: "<=", limit: 1},message:"must be <= 1"}];
return false;
}
else {
if(data10 < 0 || isNaN(data10)){
validate90.errors = [{instancePath:instancePath+"/negative/" + i1+"/share",schemaPath:"node#/definitions/ReactionTotalInfo/properties/share/minimum",keyword:"minimum",params:{comparison: ">=", limit: 0},message:"must be >= 0"}];
return false;
}
}
}
}
var valid6 = _errs29 === errors;
}
else {
var valid6 = true;
}
}
}
}
}
}
else {
validate90.errors = [{instancePath:instancePath+"/negative/" + i1,schemaPath:"node#/definitions/ReactionTotalInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid4 = _errs20 === errors;
if(!valid4){
break;
}
}
}
}
var valid0 = _errs18 === errors;
}
}
}
}
}
else {
validate90.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate90.errors = vErrors;
return errors === 0;
}

export const ReactionTotalsInfoArray = validate91;
const schema108 = {"type":"array","items":{"$ref":"node#/definitions/ReactionTotalsInfo"}};

function validate91(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate91.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate90(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate91.errors = vErrors;
return errors === 0;
}

export const RegisteredNameSecret = validate93;
const schema109 = {"type":"object","properties":{"name":{"type":"string"},"mnemonic":{"type":"array","items":{"type":"string"},"nullable":true,"minItems":24,"maxItems":24},"secret":{"type":"string","nullable":true}},"required":["name"],"additionalProperties":false};

function validate93(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.name === undefined) && (missing0 = "name")){
validate93.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "name") || (key0 === "mnemonic")) || (key0 === "secret"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate93.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.mnemonic !== undefined){
let data1 = data.mnemonic;
const _errs4 = errors;
if((!(Array.isArray(data1))) && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((Array.isArray(data1)) && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "string" || dataType1 === "number"
              || dataType1 === "boolean" || data1 === null){
coerced1 = [data1];
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate93.errors = [{instancePath:instancePath+"/mnemonic",schemaPath:"#/properties/mnemonic/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["mnemonic"] = coerced1;
}
}
}
if(errors === _errs4){
if(Array.isArray(data1)){
if(data1.length > 24){
validate93.errors = [{instancePath:instancePath+"/mnemonic",schemaPath:"#/properties/mnemonic/maxItems",keyword:"maxItems",params:{limit: 24},message:"must NOT have more than 24 items"}];
return false;
}
else {
if(data1.length < 24){
validate93.errors = [{instancePath:instancePath+"/mnemonic",schemaPath:"#/properties/mnemonic/minItems",keyword:"minItems",params:{limit: 24},message:"must NOT have fewer than 24 items"}];
return false;
}
else {
var valid1 = true;
const len0 = data1.length;
for(let i0=0; i0<len0; i0++){
let data2 = data1[i0];
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate93.errors = [{instancePath:instancePath+"/mnemonic/" + i0,schemaPath:"#/properties/mnemonic/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data1 !== undefined){
data1[i0] = coerced2;
}
}
}
var valid1 = _errs7 === errors;
if(!valid1){
break;
}
}
}
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.secret !== undefined){
let data3 = data.secret;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate93.errors = [{instancePath:instancePath+"/secret",schemaPath:"#/properties/secret/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["secret"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate93.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate93.errors = vErrors;
return errors === 0;
}

export const RemoteMediaInfo = validate94;
const schema110 = {"type":"object","properties":{"id":{"type":"string"},"hash":{"type":"string","nullable":true},"digest":{"type":"string","nullable":true}},"required":["id"],"additionalProperties":false};

function validate94(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.id === undefined) && (missing0 = "id")){
validate94.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "id") || (key0 === "hash")) || (key0 === "digest"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate94.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.hash !== undefined){
let data1 = data.hash;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate94.errors = [{instancePath:instancePath+"/hash",schemaPath:"#/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["hash"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data2 = data.digest;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate94.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["digest"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate94.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate94.errors = vErrors;
return errors === 0;
}

export const RemotePostingVerificationInfo = validate95;
const schema111 = {"type":"object","properties":{"id":{"type":"string"},"nodeName":{"type":"string"},"postingId":{"type":"string"},"revisionId":{"type":"string","nullable":true},"status":{"type":"string","nullable":true},"errorCode":{"type":"string","nullable":true},"errorMessage":{"type":"string","nullable":true}},"required":["id","nodeName","postingId"],"additionalProperties":false};

function validate95(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.id === undefined) && (missing0 = "id")) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.postingId === undefined) && (missing0 = "postingId"))){
validate95.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "id") || (key0 === "nodeName")) || (key0 === "postingId")) || (key0 === "revisionId")) || (key0 === "status")) || (key0 === "errorCode")) || (key0 === "errorMessage"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate95.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data1 = data.nodeName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate95.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["nodeName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data2 = data.postingId;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate95.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["postingId"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionId !== undefined){
let data3 = data.revisionId;
const _errs8 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate95.errors = [{instancePath:instancePath+"/revisionId",schemaPath:"#/properties/revisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["revisionId"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.status !== undefined){
let data4 = data.status;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate95.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["status"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorCode !== undefined){
let data5 = data.errorCode;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate95.errors = [{instancePath:instancePath+"/errorCode",schemaPath:"#/properties/errorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["errorCode"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorMessage !== undefined){
let data6 = data.errorMessage;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate95.errors = [{instancePath:instancePath+"/errorMessage",schemaPath:"#/properties/errorMessage/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["errorMessage"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate95.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate95.errors = vErrors;
return errors === 0;
}

export const RemoteReactionVerificationInfo = validate96;
const schema112 = {"type":"object","properties":{"id":{"type":"string"},"nodeName":{"type":"string"},"postingId":{"type":"string"},"reactionOwnerName":{"type":"string"},"status":{"type":"string","nullable":true},"errorCode":{"type":"string","nullable":true},"errorMessage":{"type":"string","nullable":true}},"required":["id","nodeName","postingId","reactionOwnerName"],"additionalProperties":false};

function validate96(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.postingId === undefined) && (missing0 = "postingId"))) || ((data.reactionOwnerName === undefined) && (missing0 = "reactionOwnerName"))){
validate96.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "id") || (key0 === "nodeName")) || (key0 === "postingId")) || (key0 === "reactionOwnerName")) || (key0 === "status")) || (key0 === "errorCode")) || (key0 === "errorMessage"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate96.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data1 = data.nodeName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate96.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["nodeName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data2 = data.postingId;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate96.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["postingId"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactionOwnerName !== undefined){
let data3 = data.reactionOwnerName;
const _errs8 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate96.errors = [{instancePath:instancePath+"/reactionOwnerName",schemaPath:"#/properties/reactionOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["reactionOwnerName"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.status !== undefined){
let data4 = data.status;
const _errs10 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate96.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["status"] = coerced4;
}
}
}
var valid0 = _errs10 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorCode !== undefined){
let data5 = data.errorCode;
const _errs13 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate96.errors = [{instancePath:instancePath+"/errorCode",schemaPath:"#/properties/errorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["errorCode"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.errorMessage !== undefined){
let data6 = data.errorMessage;
const _errs16 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate96.errors = [{instancePath:instancePath+"/errorMessage",schemaPath:"#/properties/errorMessage/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["errorMessage"] = coerced6;
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate96.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate96.errors = vErrors;
return errors === 0;
}

export const RepliedTo = validate97;
const schema113 = {"type":"object","properties":{"id":{"type":"string"},"revisionId":{"type":"string","nullable":true},"name":{"type":"string"},"fullName":{"type":"string","nullable":true},"gender":{"type":"string","nullable":true},"avatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"heading":{"type":"string","nullable":true},"digest":{"type":"string"}},"required":["id","name","digest"],"additionalProperties":false};

function validate97(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.id === undefined) && (missing0 = "id")) || ((data.name === undefined) && (missing0 = "name"))) || ((data.digest === undefined) && (missing0 = "digest"))){
validate97.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((((key0 === "id") || (key0 === "revisionId")) || (key0 === "name")) || (key0 === "fullName")) || (key0 === "gender")) || (key0 === "avatar")) || (key0 === "heading")) || (key0 === "digest"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate97.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionId !== undefined){
let data1 = data.revisionId;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate97.errors = [{instancePath:instancePath+"/revisionId",schemaPath:"#/properties/revisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["revisionId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.name !== undefined){
let data2 = data.name;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate97.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["name"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.fullName !== undefined){
let data3 = data.fullName;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate97.errors = [{instancePath:instancePath+"/fullName",schemaPath:"#/properties/fullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["fullName"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.gender !== undefined){
let data4 = data.gender;
const _errs12 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate97.errors = [{instancePath:instancePath+"/gender",schemaPath:"#/properties/gender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["gender"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.avatar !== undefined){
let data5 = data.avatar;
const _errs15 = errors;
const _errs16 = errors;
let valid1 = false;
const _errs17 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["avatar"] = coerced5;
}
}
}
const _errs18 = errors;
if(errors === _errs18){
if(data5 && typeof data5 == "object" && !Array.isArray(data5)){
let missing1;
if(((data5.mediaId === undefined) && (missing1 = "mediaId")) || ((data5.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs20 = errors;
for(const key1 in data5){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data5[key1];
}
}
if(_errs20 === errors){
if(data5.mediaId !== undefined){
let data6 = data5.mediaId;
const _errs21 = errors;
if(typeof data6 !== "string"){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(typeof data6 === "string"){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else {
const err2 = {instancePath:instancePath+"/avatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data5 !== undefined){
data5["mediaId"] = coerced6;
}
}
}
var valid3 = _errs21 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.path !== undefined){
let data7 = data5.path;
const _errs23 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
const err3 = {instancePath:instancePath+"/avatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data5 !== undefined){
data5["path"] = coerced7;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.width !== undefined){
let data8 = data5.width;
const _errs25 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err4 = {instancePath:instancePath+"/avatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data5 !== undefined){
data5["width"] = coerced8;
}
}
}
var valid3 = _errs25 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.height !== undefined){
let data9 = data5.height;
const _errs28 = errors;
if((!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))) && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))) && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data9 === null
              || (dataType9 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced9 = +data9;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err5 = {instancePath:instancePath+"/avatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data5 !== undefined){
data5["height"] = coerced9;
}
}
}
var valid3 = _errs28 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.shape !== undefined){
let data10 = data5.shape;
const _errs31 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err6 = {instancePath:instancePath+"/avatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data5 !== undefined){
data5["shape"] = coerced10;
}
}
}
var valid3 = _errs31 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs17 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs36 = errors;
if(data5 !== null){
let dataType11 = typeof data5;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType11 = typeof data5;
if(data5 === null){
coerced11 = data5;
}
}
if(!(coerced11 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced11 = null;
}
else {
const err8 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced11 !== undefined){
data5 = coerced11;
if(data !== undefined){
data["avatar"] = coerced11;
}
}
}
var _valid0 = _errs36 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate97.errors = vErrors;
return false;
}
else {
errors = _errs16;
if(vErrors !== null){
if(_errs16){
vErrors.length = _errs16;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data11 = data.heading;
const _errs38 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data11;
}
else if(data11 === null){
coerced12 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
validate97.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["heading"] = coerced12;
}
}
}
var valid0 = _errs38 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data12 = data.digest;
const _errs41 = errors;
if(typeof data12 !== "string"){
let dataType13 = typeof data12;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType13 = typeof data12;
if(typeof data12 === "string"){
coerced13 = data12;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data12;
}
else if(data12 === null){
coerced13 = "";
}
else {
validate97.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data12 = coerced13;
if(data !== undefined){
data["digest"] = coerced13;
}
}
}
var valid0 = _errs41 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
else {
validate97.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate97.errors = vErrors;
return errors === 0;
}

export const Result = validate98;
const schema115 = {"type":"object","properties":{"errorCode":{"type":"string"},"message":{"type":"string","default":""}},"required":["errorCode","message"],"additionalProperties":false};

function validate98(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.message === undefined){
data.message = "";
}
let missing0;
if(((data.errorCode === undefined) && (missing0 = "errorCode")) || ((data.message === undefined) && (missing0 = "message"))){
validate98.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "errorCode") || (key0 === "message"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.errorCode !== undefined){
let data0 = data.errorCode;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate98.errors = [{instancePath:instancePath+"/errorCode",schemaPath:"#/properties/errorCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["errorCode"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data1 = data.message;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate98.errors = [{instancePath:instancePath+"/message",schemaPath:"#/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["message"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
}
}
}
else {
validate98.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate98.errors = vErrors;
return errors === 0;
}

export const SheriffMark = validate99;
const schema116 = {"type":"object","properties":{"sheriffName":{"type":"string"}},"required":["sheriffName"],"additionalProperties":false};

function validate99(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.sheriffName === undefined) && (missing0 = "sheriffName")){
validate99.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(key0 === "sheriffName")){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.sheriffName !== undefined){
let data0 = data.sheriffName;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate99.errors = [{instancePath:instancePath+"/sheriffName",schemaPath:"#/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["sheriffName"] = coerced0;
}
}
}
}
}
}
}
else {
validate99.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate99.errors = vErrors;
return errors === 0;
}

export const SettingInfo = validate100;
const schema117 = {"type":"object","properties":{"name":{"type":"string"},"value":{"type":"string","nullable":true}},"required":["name"],"additionalProperties":false};

function validate100(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.name === undefined) && (missing0 = "name")){
validate100.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "name") || (key0 === "value"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate100.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.value !== undefined){
let data1 = data.value;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate100.errors = [{instancePath:instancePath+"/value",schemaPath:"#/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["value"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate100.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate100.errors = vErrors;
return errors === 0;
}

export const SettingInfoArray = validate101;
const schema118 = {"type":"array","items":{"$ref":"node#/definitions/SettingInfo"}};

function validate101(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate101.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing0;
if((data0.name === undefined) && (missing0 = "name")){
validate101.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/SettingInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!((key0 === "name") || (key0 === "value"))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.name !== undefined){
let data1 = data0.name;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate101.errors = [{instancePath:instancePath+"/" + i0+"/name",schemaPath:"node#/definitions/SettingInfo/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["name"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.value !== undefined){
let data2 = data0.value;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate101.errors = [{instancePath:instancePath+"/" + i0+"/value",schemaPath:"node#/definitions/SettingInfo/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["value"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
else {
validate101.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/SettingInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate101.errors = vErrors;
return errors === 0;
}

export const SettingTypeModifiers = validate102;
const schema120 = {"type":"object","properties":{"format":{"type":"string","nullable":true},"min":{"type":"string","nullable":true},"max":{"type":"string","nullable":true},"multiline":{"type":"boolean","nullable":true},"never":{"type":"boolean","nullable":true},"always":{"type":"boolean","nullable":true},"principals":{"type":"array","items":{"type":"string"},"nullable":true}},"additionalProperties":false};

function validate102(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "format") || (key0 === "min")) || (key0 === "max")) || (key0 === "multiline")) || (key0 === "never")) || (key0 === "always")) || (key0 === "principals"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.format !== undefined){
let data0 = data.format;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/format",schemaPath:"#/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["format"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.min !== undefined){
let data1 = data.min;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/min",schemaPath:"#/properties/min/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["min"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.max !== undefined){
let data2 = data.max;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/max",schemaPath:"#/properties/max/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["max"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.multiline !== undefined){
let data3 = data.multiline;
const _errs11 = errors;
if((typeof data3 !== "boolean") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "boolean") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "false" || data3 === 0 || data3 === null){
coerced3 = false;
}
else if(data3 === "true" || data3 === 1){
coerced3 = true;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/multiline",schemaPath:"#/properties/multiline/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["multiline"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.never !== undefined){
let data4 = data.never;
const _errs14 = errors;
if((typeof data4 !== "boolean") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "boolean") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(data4 === "false" || data4 === 0 || data4 === null){
coerced4 = false;
}
else if(data4 === "true" || data4 === 1){
coerced4 = true;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/never",schemaPath:"#/properties/never/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["never"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.always !== undefined){
let data5 = data.always;
const _errs17 = errors;
if((typeof data5 !== "boolean") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "boolean") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "false" || data5 === 0 || data5 === null){
coerced5 = false;
}
else if(data5 === "true" || data5 === 1){
coerced5 = true;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/always",schemaPath:"#/properties/always/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["always"] = coerced5;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.principals !== undefined){
let data6 = data.principals;
const _errs20 = errors;
if((!(Array.isArray(data6))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((Array.isArray(data6)) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "string" || dataType6 === "number"
              || dataType6 === "boolean" || data6 === null){
coerced6 = [data6];
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate102.errors = [{instancePath:instancePath+"/principals",schemaPath:"#/properties/principals/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["principals"] = coerced6;
}
}
}
if(errors === _errs20){
if(Array.isArray(data6)){
var valid1 = true;
const len0 = data6.length;
for(let i0=0; i0<len0; i0++){
let data7 = data6[i0];
const _errs23 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
validate102.errors = [{instancePath:instancePath+"/principals/" + i0,schemaPath:"#/properties/principals/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data6 !== undefined){
data6[i0] = coerced7;
}
}
}
var valid1 = _errs23 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate102.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate102.errors = vErrors;
return errors === 0;
}

export const SheriffComplaintGroupInfo = validate103;
const schema121 = {"type":"object","properties":{"id":{"type":"string"},"remoteNodeName":{"type":"string"},"remoteNodeFullName":{"type":"string","nullable":true},"remoteFeedName":{"type":"string"},"remotePostingId":{"type":"string","nullable":true},"remotePostingRevisionId":{"type":"string","nullable":true},"remotePostingOwnerName":{"type":"string","nullable":true},"remotePostingOwnerFullName":{"type":"string","nullable":true},"remotePostingOwnerGender":{"type":"string","nullable":true},"remotePostingHeading":{"type":"string","nullable":true},"remoteCommentId":{"type":"string","nullable":true},"remoteCommentRevisionId":{"type":"string","nullable":true},"remoteCommentOwnerName":{"type":"string","nullable":true},"remoteCommentOwnerFullName":{"type":"string","nullable":true},"remoteCommentOwnerGender":{"type":"string","nullable":true},"remoteCommentHeading":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"moment":{"type":"integer"},"status":{"type":"string"},"decisionCode":{"type":"string","nullable":true},"decisionDetails":{"type":"string","nullable":true},"decidedAt":{"type":"integer","nullable":true},"anonymous":{"type":"boolean","nullable":true}},"required":["id","remoteNodeName","remoteFeedName","createdAt","moment","status"],"additionalProperties":false};

function validate103(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.id === undefined) && (missing0 = "id")) || ((data.remoteNodeName === undefined) && (missing0 = "remoteNodeName"))) || ((data.remoteFeedName === undefined) && (missing0 = "remoteFeedName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.moment === undefined) && (missing0 = "moment"))) || ((data.status === undefined) && (missing0 = "status"))){
validate103.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema121.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate103.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteNodeName !== undefined){
let data1 = data.remoteNodeName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["remoteNodeName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteNodeFullName !== undefined){
let data2 = data.remoteNodeFullName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteNodeFullName",schemaPath:"#/properties/remoteNodeFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["remoteNodeFullName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteFeedName !== undefined){
let data3 = data.remoteFeedName;
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteFeedName",schemaPath:"#/properties/remoteFeedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["remoteFeedName"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingId !== undefined){
let data4 = data.remotePostingId;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingId",schemaPath:"#/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["remotePostingId"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingRevisionId !== undefined){
let data5 = data.remotePostingRevisionId;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingRevisionId",schemaPath:"#/properties/remotePostingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["remotePostingRevisionId"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingOwnerName !== undefined){
let data6 = data.remotePostingOwnerName;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingOwnerName",schemaPath:"#/properties/remotePostingOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["remotePostingOwnerName"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingOwnerFullName !== undefined){
let data7 = data.remotePostingOwnerFullName;
const _errs20 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingOwnerFullName",schemaPath:"#/properties/remotePostingOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["remotePostingOwnerFullName"] = coerced7;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingOwnerGender !== undefined){
let data8 = data.remotePostingOwnerGender;
const _errs23 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingOwnerGender",schemaPath:"#/properties/remotePostingOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["remotePostingOwnerGender"] = coerced8;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingHeading !== undefined){
let data9 = data.remotePostingHeading;
const _errs26 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remotePostingHeading",schemaPath:"#/properties/remotePostingHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["remotePostingHeading"] = coerced9;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentId !== undefined){
let data10 = data.remoteCommentId;
const _errs29 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentId",schemaPath:"#/properties/remoteCommentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["remoteCommentId"] = coerced10;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentRevisionId !== undefined){
let data11 = data.remoteCommentRevisionId;
const _errs32 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentRevisionId",schemaPath:"#/properties/remoteCommentRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data !== undefined){
data["remoteCommentRevisionId"] = coerced11;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentOwnerName !== undefined){
let data12 = data.remoteCommentOwnerName;
const _errs35 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentOwnerName",schemaPath:"#/properties/remoteCommentOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data !== undefined){
data["remoteCommentOwnerName"] = coerced12;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentOwnerFullName !== undefined){
let data13 = data.remoteCommentOwnerFullName;
const _errs38 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentOwnerFullName",schemaPath:"#/properties/remoteCommentOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["remoteCommentOwnerFullName"] = coerced13;
}
}
}
var valid0 = _errs38 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentOwnerGender !== undefined){
let data14 = data.remoteCommentOwnerGender;
const _errs41 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentOwnerGender",schemaPath:"#/properties/remoteCommentOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["remoteCommentOwnerGender"] = coerced14;
}
}
}
var valid0 = _errs41 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentHeading !== undefined){
let data15 = data.remoteCommentHeading;
const _errs44 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/remoteCommentHeading",schemaPath:"#/properties/remoteCommentHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data !== undefined){
data["remoteCommentHeading"] = coerced15;
}
}
}
var valid0 = _errs44 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data16 = data.createdAt;
const _errs47 = errors;
if(!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16))){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "boolean" || data16 === null
              || (dataType16 === "string" && data16 && data16 == +data16 && !(data16 % 1))){
coerced16 = +data16;
}
else {
validate103.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data !== undefined){
data["createdAt"] = coerced16;
}
}
}
var valid0 = _errs47 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data17 = data.moment;
const _errs49 = errors;
if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17))){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 === "boolean" || data17 === null
              || (dataType17 === "string" && data17 && data17 == +data17 && !(data17 % 1))){
coerced17 = +data17;
}
else {
validate103.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data !== undefined){
data["moment"] = coerced17;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.status !== undefined){
let data18 = data.status;
const _errs51 = errors;
if(typeof data18 !== "string"){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if(typeof data18 === "string"){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data18;
}
else if(data18 === null){
coerced18 = "";
}
else {
validate103.errors = [{instancePath:instancePath+"/status",schemaPath:"#/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data !== undefined){
data["status"] = coerced18;
}
}
}
var valid0 = _errs51 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.decisionCode !== undefined){
let data19 = data.decisionCode;
const _errs53 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType19 = typeof data19;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType19 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced19 = data19;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data19;
}
else if(data19 === null){
coerced19 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced19 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/decisionCode",schemaPath:"#/properties/decisionCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data19 = coerced19;
if(data !== undefined){
data["decisionCode"] = coerced19;
}
}
}
var valid0 = _errs53 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.decisionDetails !== undefined){
let data20 = data.decisionDetails;
const _errs56 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType20 = typeof data20;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType20 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced20 = data20;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data20;
}
else if(data20 === null){
coerced20 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced20 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/decisionDetails",schemaPath:"#/properties/decisionDetails/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced20 !== undefined){
data20 = coerced20;
if(data !== undefined){
data["decisionDetails"] = coerced20;
}
}
}
var valid0 = _errs56 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.decidedAt !== undefined){
let data21 = data.decidedAt;
const _errs59 = errors;
if((!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))) && (data21 !== null)){
let dataType21 = typeof data21;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType21 = typeof data21;
if((((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))) && (data21 === null)){
coerced21 = data21;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 === "boolean" || data21 === null
              || (dataType21 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced21 = +data21;
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced21 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/decidedAt",schemaPath:"#/properties/decidedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced21 !== undefined){
data21 = coerced21;
if(data !== undefined){
data["decidedAt"] = coerced21;
}
}
}
var valid0 = _errs59 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.anonymous !== undefined){
let data22 = data.anonymous;
const _errs62 = errors;
if((typeof data22 !== "boolean") && (data22 !== null)){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if((typeof data22 === "boolean") && (data22 === null)){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(data22 === "false" || data22 === 0 || data22 === null){
coerced22 = false;
}
else if(data22 === "true" || data22 === 1){
coerced22 = true;
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced22 = null;
}
else {
validate103.errors = [{instancePath:instancePath+"/anonymous",schemaPath:"#/properties/anonymous/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data !== undefined){
data["anonymous"] = coerced22;
}
}
}
var valid0 = _errs62 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate103.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate103.errors = vErrors;
return errors === 0;
}

export const SheriffComplaintGroupsSliceInfo = validate104;
const schema122 = {"type":"object","properties":{"before":{"type":"integer"},"after":{"type":"integer"},"groups":{"type":"array","items":{"$ref":"node#/definitions/SheriffComplaintGroupInfo"}},"total":{"type":"integer"},"totalInPast":{"type":"integer"},"totalInFuture":{"type":"integer"}},"required":["before","after","groups","total","totalInPast","totalInFuture"],"additionalProperties":false};

function validate104(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.before === undefined) && (missing0 = "before")) || ((data.after === undefined) && (missing0 = "after"))) || ((data.groups === undefined) && (missing0 = "groups"))) || ((data.total === undefined) && (missing0 = "total"))) || ((data.totalInPast === undefined) && (missing0 = "totalInPast"))) || ((data.totalInFuture === undefined) && (missing0 = "totalInFuture"))){
validate104.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "before") || (key0 === "after")) || (key0 === "groups")) || (key0 === "total")) || (key0 === "totalInPast")) || (key0 === "totalInFuture"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.before !== undefined){
let data0 = data.before;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate104.errors = [{instancePath:instancePath+"/before",schemaPath:"#/properties/before/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["before"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.after !== undefined){
let data1 = data.after;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate104.errors = [{instancePath:instancePath+"/after",schemaPath:"#/properties/after/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["after"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.groups !== undefined){
let data2 = data.groups;
const _errs6 = errors;
if(!(Array.isArray(data2))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(Array.isArray(data2)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else {
validate104.errors = [{instancePath:instancePath+"/groups",schemaPath:"#/properties/groups/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["groups"] = coerced2;
}
}
}
if(errors === _errs6){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
let data3 = data2[i0];
const _errs8 = errors;
const _errs9 = errors;
if(errors === _errs9){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
let missing1;
if(((((((data3.id === undefined) && (missing1 = "id")) || ((data3.remoteNodeName === undefined) && (missing1 = "remoteNodeName"))) || ((data3.remoteFeedName === undefined) && (missing1 = "remoteFeedName"))) || ((data3.createdAt === undefined) && (missing1 = "createdAt"))) || ((data3.moment === undefined) && (missing1 = "moment"))) || ((data3.status === undefined) && (missing1 = "status"))){
validate104.errors = [{instancePath:instancePath+"/groups/" + i0,schemaPath:"node#/definitions/SheriffComplaintGroupInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs11 = errors;
for(const key1 in data3){
if(!(func2.call(schema121.properties, key1))){
delete data3[key1];
}
}
if(_errs11 === errors){
if(data3.id !== undefined){
let data4 = data3.id;
const _errs12 = errors;
if(typeof data4 !== "string"){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if(typeof data4 === "string"){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data4;
}
else if(data4 === null){
coerced3 = "";
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/id",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data3 !== undefined){
data3["id"] = coerced3;
}
}
}
var valid3 = _errs12 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteNodeName !== undefined){
let data5 = data3.remoteNodeName;
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(typeof data5 === "string"){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data5;
}
else if(data5 === null){
coerced4 = "";
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteNodeName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data3 !== undefined){
data3["remoteNodeName"] = coerced4;
}
}
}
var valid3 = _errs14 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteNodeFullName !== undefined){
let data6 = data3.remoteNodeFullName;
const _errs16 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data6;
}
else if(data6 === null){
coerced5 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced5 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteNodeFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteNodeFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data3 !== undefined){
data3["remoteNodeFullName"] = coerced5;
}
}
}
var valid3 = _errs16 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteFeedName !== undefined){
let data7 = data3.remoteFeedName;
const _errs19 = errors;
if(typeof data7 !== "string"){
let dataType6 = typeof data7;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType6 = typeof data7;
if(typeof data7 === "string"){
coerced6 = data7;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data7;
}
else if(data7 === null){
coerced6 = "";
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteFeedName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteFeedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data7 = coerced6;
if(data3 !== undefined){
data3["remoteFeedName"] = coerced6;
}
}
}
var valid3 = _errs19 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingId !== undefined){
let data8 = data3.remotePostingId;
const _errs21 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data8;
}
else if(data8 === null){
coerced7 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced7 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data3 !== undefined){
data3["remotePostingId"] = coerced7;
}
}
}
var valid3 = _errs21 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingRevisionId !== undefined){
let data9 = data3.remotePostingRevisionId;
const _errs24 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType8 = typeof data9;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType8 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced8 = data9;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data9;
}
else if(data9 === null){
coerced8 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced8 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingRevisionId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data9 = coerced8;
if(data3 !== undefined){
data3["remotePostingRevisionId"] = coerced8;
}
}
}
var valid3 = _errs24 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingOwnerName !== undefined){
let data10 = data3.remotePostingOwnerName;
const _errs27 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data10;
}
else if(data10 === null){
coerced9 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced9 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingOwnerName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data3 !== undefined){
data3["remotePostingOwnerName"] = coerced9;
}
}
}
var valid3 = _errs27 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingOwnerFullName !== undefined){
let data11 = data3.remotePostingOwnerFullName;
const _errs30 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType10 = typeof data11;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType10 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced10 = data11;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data11;
}
else if(data11 === null){
coerced10 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced10 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingOwnerFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data11 = coerced10;
if(data3 !== undefined){
data3["remotePostingOwnerFullName"] = coerced10;
}
}
}
var valid3 = _errs30 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingOwnerGender !== undefined){
let data12 = data3.remotePostingOwnerGender;
const _errs33 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType11 = typeof data12;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType11 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced11 = data12;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data12;
}
else if(data12 === null){
coerced11 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced11 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingOwnerGender",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data12 = coerced11;
if(data3 !== undefined){
data3["remotePostingOwnerGender"] = coerced11;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remotePostingHeading !== undefined){
let data13 = data3.remotePostingHeading;
const _errs36 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType12 = typeof data13;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType12 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced12 = data13;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data13;
}
else if(data13 === null){
coerced12 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced12 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remotePostingHeading",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data13 = coerced12;
if(data3 !== undefined){
data3["remotePostingHeading"] = coerced12;
}
}
}
var valid3 = _errs36 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentId !== undefined){
let data14 = data3.remoteCommentId;
const _errs39 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType13 = typeof data14;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType13 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced13 = data14;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data14;
}
else if(data14 === null){
coerced13 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced13 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data14 = coerced13;
if(data3 !== undefined){
data3["remoteCommentId"] = coerced13;
}
}
}
var valid3 = _errs39 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentRevisionId !== undefined){
let data15 = data3.remoteCommentRevisionId;
const _errs42 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType14 = typeof data15;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType14 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced14 = data15;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data15;
}
else if(data15 === null){
coerced14 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced14 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentRevisionId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data15 = coerced14;
if(data3 !== undefined){
data3["remoteCommentRevisionId"] = coerced14;
}
}
}
var valid3 = _errs42 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentOwnerName !== undefined){
let data16 = data3.remoteCommentOwnerName;
const _errs45 = errors;
if((typeof data16 !== "string") && (data16 !== null)){
let dataType15 = typeof data16;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType15 = typeof data16;
if((typeof data16 === "string") && (data16 === null)){
coerced15 = data16;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data16;
}
else if(data16 === null){
coerced15 = "";
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced15 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentOwnerName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data16 = coerced15;
if(data3 !== undefined){
data3["remoteCommentOwnerName"] = coerced15;
}
}
}
var valid3 = _errs45 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentOwnerFullName !== undefined){
let data17 = data3.remoteCommentOwnerFullName;
const _errs48 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType16 = typeof data17;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType16 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced16 = data17;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data17;
}
else if(data17 === null){
coerced16 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced16 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentOwnerFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced16 !== undefined){
data17 = coerced16;
if(data3 !== undefined){
data3["remoteCommentOwnerFullName"] = coerced16;
}
}
}
var valid3 = _errs48 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentOwnerGender !== undefined){
let data18 = data3.remoteCommentOwnerGender;
const _errs51 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType17 = typeof data18;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType17 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced17 = data18;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data18;
}
else if(data18 === null){
coerced17 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced17 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentOwnerGender",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data18 = coerced17;
if(data3 !== undefined){
data3["remoteCommentOwnerGender"] = coerced17;
}
}
}
var valid3 = _errs51 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.remoteCommentHeading !== undefined){
let data19 = data3.remoteCommentHeading;
const _errs54 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType18 = typeof data19;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType18 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced18 = data19;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data19;
}
else if(data19 === null){
coerced18 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced18 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/remoteCommentHeading",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data19 = coerced18;
if(data3 !== undefined){
data3["remoteCommentHeading"] = coerced18;
}
}
}
var valid3 = _errs54 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.createdAt !== undefined){
let data20 = data3.createdAt;
const _errs57 = errors;
if(!(((typeof data20 == "number") && (!(data20 % 1) && !isNaN(data20))) && (isFinite(data20)))){
let dataType19 = typeof data20;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType19 = typeof data20;
if(((typeof data20 == "number") && (!(data20 % 1) && !isNaN(data20))) && (isFinite(data20))){
coerced19 = data20;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 === "boolean" || data20 === null
              || (dataType19 === "string" && data20 && data20 == +data20 && !(data20 % 1))){
coerced19 = +data20;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/createdAt",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced19 !== undefined){
data20 = coerced19;
if(data3 !== undefined){
data3["createdAt"] = coerced19;
}
}
}
var valid3 = _errs57 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.moment !== undefined){
let data21 = data3.moment;
const _errs59 = errors;
if(!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))){
let dataType20 = typeof data21;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType20 = typeof data21;
if(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))){
coerced20 = data21;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 === "boolean" || data21 === null
              || (dataType20 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced20 = +data21;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/moment",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced20 !== undefined){
data21 = coerced20;
if(data3 !== undefined){
data3["moment"] = coerced20;
}
}
}
var valid3 = _errs59 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.status !== undefined){
let data22 = data3.status;
const _errs61 = errors;
if(typeof data22 !== "string"){
let dataType21 = typeof data22;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType21 = typeof data22;
if(typeof data22 === "string"){
coerced21 = data22;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 == "number" || dataType21 == "boolean"){
coerced21 = "" + data22;
}
else if(data22 === null){
coerced21 = "";
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/status",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced21 !== undefined){
data22 = coerced21;
if(data3 !== undefined){
data3["status"] = coerced21;
}
}
}
var valid3 = _errs61 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.decisionCode !== undefined){
let data23 = data3.decisionCode;
const _errs63 = errors;
if((typeof data23 !== "string") && (data23 !== null)){
let dataType22 = typeof data23;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType22 = typeof data23;
if((typeof data23 === "string") && (data23 === null)){
coerced22 = data23;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data23;
}
else if(data23 === null){
coerced22 = "";
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced22 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/decisionCode",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decisionCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced22 !== undefined){
data23 = coerced22;
if(data3 !== undefined){
data3["decisionCode"] = coerced22;
}
}
}
var valid3 = _errs63 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.decisionDetails !== undefined){
let data24 = data3.decisionDetails;
const _errs66 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType23 = typeof data24;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType23 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced23 = data24;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data24;
}
else if(data24 === null){
coerced23 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced23 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/decisionDetails",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decisionDetails/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced23 !== undefined){
data24 = coerced23;
if(data3 !== undefined){
data3["decisionDetails"] = coerced23;
}
}
}
var valid3 = _errs66 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.decidedAt !== undefined){
let data25 = data3.decidedAt;
const _errs69 = errors;
if((!(((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25)))) && (data25 !== null)){
let dataType24 = typeof data25;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType24 = typeof data25;
if((((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25))) && (data25 === null)){
coerced24 = data25;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 === "boolean" || data25 === null
              || (dataType24 === "string" && data25 && data25 == +data25 && !(data25 % 1))){
coerced24 = +data25;
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced24 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/decidedAt",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decidedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced24 !== undefined){
data25 = coerced24;
if(data3 !== undefined){
data3["decidedAt"] = coerced24;
}
}
}
var valid3 = _errs69 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.anonymous !== undefined){
let data26 = data3.anonymous;
const _errs72 = errors;
if((typeof data26 !== "boolean") && (data26 !== null)){
let dataType25 = typeof data26;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType25 = typeof data26;
if((typeof data26 === "boolean") && (data26 === null)){
coerced25 = data26;
}
}
if(!(coerced25 !== undefined)){
if(data26 === "false" || data26 === 0 || data26 === null){
coerced25 = false;
}
else if(data26 === "true" || data26 === 1){
coerced25 = true;
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced25 = null;
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0+"/anonymous",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/anonymous/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced25 !== undefined){
data26 = coerced25;
if(data3 !== undefined){
data3["anonymous"] = coerced25;
}
}
}
var valid3 = _errs72 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate104.errors = [{instancePath:instancePath+"/groups/" + i0,schemaPath:"node#/definitions/SheriffComplaintGroupInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs8 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data27 = data.total;
const _errs75 = errors;
if(!(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27)))){
let dataType26 = typeof data27;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType26 = typeof data27;
if(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27))){
coerced26 = data27;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 === "boolean" || data27 === null
              || (dataType26 === "string" && data27 && data27 == +data27 && !(data27 % 1))){
coerced26 = +data27;
}
else {
validate104.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced26 !== undefined){
data27 = coerced26;
if(data !== undefined){
data["total"] = coerced26;
}
}
}
var valid0 = _errs75 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInPast !== undefined){
let data28 = data.totalInPast;
const _errs77 = errors;
if(!(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28)))){
let dataType27 = typeof data28;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType27 = typeof data28;
if(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28))){
coerced27 = data28;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 === "boolean" || data28 === null
              || (dataType27 === "string" && data28 && data28 == +data28 && !(data28 % 1))){
coerced27 = +data28;
}
else {
validate104.errors = [{instancePath:instancePath+"/totalInPast",schemaPath:"#/properties/totalInPast/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced27 !== undefined){
data28 = coerced27;
if(data !== undefined){
data["totalInPast"] = coerced27;
}
}
}
var valid0 = _errs77 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInFuture !== undefined){
let data29 = data.totalInFuture;
const _errs79 = errors;
if(!(((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29))) && (isFinite(data29)))){
let dataType28 = typeof data29;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType28 = typeof data29;
if(((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29))) && (isFinite(data29))){
coerced28 = data29;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 === "boolean" || data29 === null
              || (dataType28 === "string" && data29 && data29 == +data29 && !(data29 % 1))){
coerced28 = +data29;
}
else {
validate104.errors = [{instancePath:instancePath+"/totalInFuture",schemaPath:"#/properties/totalInFuture/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced28 !== undefined){
data29 = coerced28;
if(data !== undefined){
data["totalInFuture"] = coerced28;
}
}
}
var valid0 = _errs79 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate104.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate104.errors = vErrors;
return errors === 0;
}

export const SheriffComplaintInfo = validate105;
const schema124 = {"type":"object","properties":{"id":{"type":"string"},"ownerName":{"type":"string"},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"group":{"anyOf":[{"$ref":"node#/definitions/SheriffComplaintGroupInfo","type":"object","nullable":true},{"type":"null"}]},"reasonCode":{"type":"string"},"reasonDetails":{"type":"string","nullable":true},"anonymousRequested":{"type":"boolean","nullable":true},"createdAt":{"type":"integer"}},"required":["id","ownerName","reasonCode","createdAt"],"additionalProperties":false};

function validate105(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.ownerName === undefined) && (missing0 = "ownerName"))) || ((data.reasonCode === undefined) && (missing0 = "reasonCode"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate105.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema124.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate105.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerName !== undefined){
let data1 = data.ownerName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate105.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data2 = data.ownerFullName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate105.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerFullName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data3 = data.ownerGender;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate105.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["ownerGender"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.group !== undefined){
let data4 = data.group;
const _errs12 = errors;
const _errs13 = errors;
let valid1 = false;
const _errs14 = errors;
if((!(data4 && typeof data4 == "object" && !Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((data4 && typeof data4 == "object" && !Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
const err0 = {instancePath:instancePath+"/group",schemaPath:"#/properties/group/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["group"] = coerced4;
}
}
}
const _errs15 = errors;
if(errors === _errs15){
if(data4 && typeof data4 == "object" && !Array.isArray(data4)){
let missing1;
if(((((((data4.id === undefined) && (missing1 = "id")) || ((data4.remoteNodeName === undefined) && (missing1 = "remoteNodeName"))) || ((data4.remoteFeedName === undefined) && (missing1 = "remoteFeedName"))) || ((data4.createdAt === undefined) && (missing1 = "createdAt"))) || ((data4.moment === undefined) && (missing1 = "moment"))) || ((data4.status === undefined) && (missing1 = "status"))){
const err1 = {instancePath:instancePath+"/group",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs17 = errors;
for(const key1 in data4){
if(!(func2.call(schema121.properties, key1))){
delete data4[key1];
}
}
if(_errs17 === errors){
if(data4.id !== undefined){
let data5 = data4.id;
const _errs18 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
const err2 = {instancePath:instancePath+"/group/id",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4["id"] = coerced5;
}
}
}
var valid3 = _errs18 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteNodeName !== undefined){
let data6 = data4.remoteNodeName;
const _errs20 = errors;
if(typeof data6 !== "string"){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(typeof data6 === "string"){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else {
const err3 = {instancePath:instancePath+"/group/remoteNodeName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data4 !== undefined){
data4["remoteNodeName"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteNodeFullName !== undefined){
let data7 = data4.remoteNodeFullName;
const _errs22 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err4 = {instancePath:instancePath+"/group/remoteNodeFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteNodeFullName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data4 !== undefined){
data4["remoteNodeFullName"] = coerced7;
}
}
}
var valid3 = _errs22 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteFeedName !== undefined){
let data8 = data4.remoteFeedName;
const _errs25 = errors;
if(typeof data8 !== "string"){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(typeof data8 === "string"){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else {
const err5 = {instancePath:instancePath+"/group/remoteFeedName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteFeedName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data4 !== undefined){
data4["remoteFeedName"] = coerced8;
}
}
}
var valid3 = _errs25 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingId !== undefined){
let data9 = data4.remotePostingId;
const _errs27 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err6 = {instancePath:instancePath+"/group/remotePostingId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data4 !== undefined){
data4["remotePostingId"] = coerced9;
}
}
}
var valid3 = _errs27 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingRevisionId !== undefined){
let data10 = data4.remotePostingRevisionId;
const _errs30 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err7 = {instancePath:instancePath+"/group/remotePostingRevisionId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data4 !== undefined){
data4["remotePostingRevisionId"] = coerced10;
}
}
}
var valid3 = _errs30 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingOwnerName !== undefined){
let data11 = data4.remotePostingOwnerName;
const _errs33 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
const err8 = {instancePath:instancePath+"/group/remotePostingOwnerName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data4 !== undefined){
data4["remotePostingOwnerName"] = coerced11;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingOwnerFullName !== undefined){
let data12 = data4.remotePostingOwnerFullName;
const _errs36 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err9 = {instancePath:instancePath+"/group/remotePostingOwnerFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data4 !== undefined){
data4["remotePostingOwnerFullName"] = coerced12;
}
}
}
var valid3 = _errs36 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingOwnerGender !== undefined){
let data13 = data4.remotePostingOwnerGender;
const _errs39 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
const err10 = {instancePath:instancePath+"/group/remotePostingOwnerGender",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data4 !== undefined){
data4["remotePostingOwnerGender"] = coerced13;
}
}
}
var valid3 = _errs39 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remotePostingHeading !== undefined){
let data14 = data4.remotePostingHeading;
const _errs42 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
const err11 = {instancePath:instancePath+"/group/remotePostingHeading",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remotePostingHeading/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data4 !== undefined){
data4["remotePostingHeading"] = coerced14;
}
}
}
var valid3 = _errs42 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentId !== undefined){
let data15 = data4.remoteCommentId;
const _errs45 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
const err12 = {instancePath:instancePath+"/group/remoteCommentId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data4 !== undefined){
data4["remoteCommentId"] = coerced15;
}
}
}
var valid3 = _errs45 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentRevisionId !== undefined){
let data16 = data4.remoteCommentRevisionId;
const _errs48 = errors;
if((typeof data16 !== "string") && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((typeof data16 === "string") && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data16;
}
else if(data16 === null){
coerced16 = "";
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
const err13 = {instancePath:instancePath+"/group/remoteCommentRevisionId",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data4 !== undefined){
data4["remoteCommentRevisionId"] = coerced16;
}
}
}
var valid3 = _errs48 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentOwnerName !== undefined){
let data17 = data4.remoteCommentOwnerName;
const _errs51 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced17 = null;
}
else {
const err14 = {instancePath:instancePath+"/group/remoteCommentOwnerName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data4 !== undefined){
data4["remoteCommentOwnerName"] = coerced17;
}
}
}
var valid3 = _errs51 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentOwnerFullName !== undefined){
let data18 = data4.remoteCommentOwnerFullName;
const _errs54 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data18;
}
else if(data18 === null){
coerced18 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced18 = null;
}
else {
const err15 = {instancePath:instancePath+"/group/remoteCommentOwnerFullName",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data4 !== undefined){
data4["remoteCommentOwnerFullName"] = coerced18;
}
}
}
var valid3 = _errs54 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentOwnerGender !== undefined){
let data19 = data4.remoteCommentOwnerGender;
const _errs57 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType19 = typeof data19;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType19 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced19 = data19;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data19;
}
else if(data19 === null){
coerced19 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced19 = null;
}
else {
const err16 = {instancePath:instancePath+"/group/remoteCommentOwnerGender",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced19 !== undefined){
data19 = coerced19;
if(data4 !== undefined){
data4["remoteCommentOwnerGender"] = coerced19;
}
}
}
var valid3 = _errs57 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.remoteCommentHeading !== undefined){
let data20 = data4.remoteCommentHeading;
const _errs60 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType20 = typeof data20;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType20 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced20 = data20;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data20;
}
else if(data20 === null){
coerced20 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced20 = null;
}
else {
const err17 = {instancePath:instancePath+"/group/remoteCommentHeading",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/remoteCommentHeading/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced20 !== undefined){
data20 = coerced20;
if(data4 !== undefined){
data4["remoteCommentHeading"] = coerced20;
}
}
}
var valid3 = _errs60 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.createdAt !== undefined){
let data21 = data4.createdAt;
const _errs63 = errors;
if(!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))){
let dataType21 = typeof data21;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType21 = typeof data21;
if(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))){
coerced21 = data21;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 === "boolean" || data21 === null
              || (dataType21 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced21 = +data21;
}
else {
const err18 = {instancePath:instancePath+"/group/createdAt",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced21 !== undefined){
data21 = coerced21;
if(data4 !== undefined){
data4["createdAt"] = coerced21;
}
}
}
var valid3 = _errs63 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.moment !== undefined){
let data22 = data4.moment;
const _errs65 = errors;
if(!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22))){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 === "boolean" || data22 === null
              || (dataType22 === "string" && data22 && data22 == +data22 && !(data22 % 1))){
coerced22 = +data22;
}
else {
const err19 = {instancePath:instancePath+"/group/moment",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data4 !== undefined){
data4["moment"] = coerced22;
}
}
}
var valid3 = _errs65 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.status !== undefined){
let data23 = data4.status;
const _errs67 = errors;
if(typeof data23 !== "string"){
let dataType23 = typeof data23;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType23 = typeof data23;
if(typeof data23 === "string"){
coerced23 = data23;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data23;
}
else if(data23 === null){
coerced23 = "";
}
else {
const err20 = {instancePath:instancePath+"/group/status",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced23 !== undefined){
data23 = coerced23;
if(data4 !== undefined){
data4["status"] = coerced23;
}
}
}
var valid3 = _errs67 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.decisionCode !== undefined){
let data24 = data4.decisionCode;
const _errs69 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType24 = typeof data24;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType24 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced24 = data24;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data24;
}
else if(data24 === null){
coerced24 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced24 = null;
}
else {
const err21 = {instancePath:instancePath+"/group/decisionCode",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decisionCode/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced24 !== undefined){
data24 = coerced24;
if(data4 !== undefined){
data4["decisionCode"] = coerced24;
}
}
}
var valid3 = _errs69 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.decisionDetails !== undefined){
let data25 = data4.decisionDetails;
const _errs72 = errors;
if((typeof data25 !== "string") && (data25 !== null)){
let dataType25 = typeof data25;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType25 = typeof data25;
if((typeof data25 === "string") && (data25 === null)){
coerced25 = data25;
}
}
if(!(coerced25 !== undefined)){
if(dataType25 == "number" || dataType25 == "boolean"){
coerced25 = "" + data25;
}
else if(data25 === null){
coerced25 = "";
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced25 = null;
}
else {
const err22 = {instancePath:instancePath+"/group/decisionDetails",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decisionDetails/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced25 !== undefined){
data25 = coerced25;
if(data4 !== undefined){
data4["decisionDetails"] = coerced25;
}
}
}
var valid3 = _errs72 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.decidedAt !== undefined){
let data26 = data4.decidedAt;
const _errs75 = errors;
if((!(((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26)))) && (data26 !== null)){
let dataType26 = typeof data26;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType26 = typeof data26;
if((((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26))) && (data26 === null)){
coerced26 = data26;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 === "boolean" || data26 === null
              || (dataType26 === "string" && data26 && data26 == +data26 && !(data26 % 1))){
coerced26 = +data26;
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced26 = null;
}
else {
const err23 = {instancePath:instancePath+"/group/decidedAt",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/decidedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced26 !== undefined){
data26 = coerced26;
if(data4 !== undefined){
data4["decidedAt"] = coerced26;
}
}
}
var valid3 = _errs75 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.anonymous !== undefined){
let data27 = data4.anonymous;
const _errs78 = errors;
if((typeof data27 !== "boolean") && (data27 !== null)){
let dataType27 = typeof data27;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType27 = typeof data27;
if((typeof data27 === "boolean") && (data27 === null)){
coerced27 = data27;
}
}
if(!(coerced27 !== undefined)){
if(data27 === "false" || data27 === 0 || data27 === null){
coerced27 = false;
}
else if(data27 === "true" || data27 === 1){
coerced27 = true;
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced27 = null;
}
else {
const err24 = {instancePath:instancePath+"/group/anonymous",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/properties/anonymous/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced27 !== undefined){
data27 = coerced27;
if(data4 !== undefined){
data4["anonymous"] = coerced27;
}
}
}
var valid3 = _errs78 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err25 = {instancePath:instancePath+"/group",schemaPath:"node#/definitions/SheriffComplaintGroupInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
var _valid0 = _errs14 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs83 = errors;
if(data4 !== null){
let dataType28 = typeof data4;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType28 = typeof data4;
if(data4 === null){
coerced28 = data4;
}
}
if(!(coerced28 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced28 = null;
}
else {
const err26 = {instancePath:instancePath+"/group",schemaPath:"#/properties/group/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced28 !== undefined){
data4 = coerced28;
if(data !== undefined){
data["group"] = coerced28;
}
}
}
var _valid0 = _errs83 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err27 = {instancePath:instancePath+"/group",schemaPath:"#/properties/group/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
validate105.errors = vErrors;
return false;
}
else {
errors = _errs13;
if(vErrors !== null){
if(_errs13){
vErrors.length = _errs13;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonCode !== undefined){
let data28 = data.reasonCode;
const _errs85 = errors;
if(typeof data28 !== "string"){
let dataType29 = typeof data28;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType29 = typeof data28;
if(typeof data28 === "string"){
coerced29 = data28;
}
}
if(!(coerced29 !== undefined)){
if(dataType29 == "number" || dataType29 == "boolean"){
coerced29 = "" + data28;
}
else if(data28 === null){
coerced29 = "";
}
else {
validate105.errors = [{instancePath:instancePath+"/reasonCode",schemaPath:"#/properties/reasonCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced29 !== undefined){
data28 = coerced29;
if(data !== undefined){
data["reasonCode"] = coerced29;
}
}
}
var valid0 = _errs85 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonDetails !== undefined){
let data29 = data.reasonDetails;
const _errs87 = errors;
if((typeof data29 !== "string") && (data29 !== null)){
let dataType30 = typeof data29;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType30 = typeof data29;
if((typeof data29 === "string") && (data29 === null)){
coerced30 = data29;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data29;
}
else if(data29 === null){
coerced30 = "";
}
else if(data29 === "" || data29 === 0 || data29 === false){
coerced30 = null;
}
else {
validate105.errors = [{instancePath:instancePath+"/reasonDetails",schemaPath:"#/properties/reasonDetails/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced30 !== undefined){
data29 = coerced30;
if(data !== undefined){
data["reasonDetails"] = coerced30;
}
}
}
var valid0 = _errs87 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.anonymousRequested !== undefined){
let data30 = data.anonymousRequested;
const _errs90 = errors;
if((typeof data30 !== "boolean") && (data30 !== null)){
let dataType31 = typeof data30;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType31 = typeof data30;
if((typeof data30 === "boolean") && (data30 === null)){
coerced31 = data30;
}
}
if(!(coerced31 !== undefined)){
if(data30 === "false" || data30 === 0 || data30 === null){
coerced31 = false;
}
else if(data30 === "true" || data30 === 1){
coerced31 = true;
}
else if(data30 === "" || data30 === 0 || data30 === false){
coerced31 = null;
}
else {
validate105.errors = [{instancePath:instancePath+"/anonymousRequested",schemaPath:"#/properties/anonymousRequested/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced31 !== undefined){
data30 = coerced31;
if(data !== undefined){
data["anonymousRequested"] = coerced31;
}
}
}
var valid0 = _errs90 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data31 = data.createdAt;
const _errs93 = errors;
if(!(((typeof data31 == "number") && (!(data31 % 1) && !isNaN(data31))) && (isFinite(data31)))){
let dataType32 = typeof data31;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType32 = typeof data31;
if(((typeof data31 == "number") && (!(data31 % 1) && !isNaN(data31))) && (isFinite(data31))){
coerced32 = data31;
}
}
if(!(coerced32 !== undefined)){
if(dataType32 === "boolean" || data31 === null
              || (dataType32 === "string" && data31 && data31 == +data31 && !(data31 % 1))){
coerced32 = +data31;
}
else {
validate105.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced32 !== undefined){
data31 = coerced32;
if(data !== undefined){
data["createdAt"] = coerced32;
}
}
}
var valid0 = _errs93 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate105.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate105.errors = vErrors;
return errors === 0;
}

export const SheriffComplaintInfoArray = validate106;
const schema126 = {"type":"array","items":{"$ref":"node#/definitions/SheriffComplaintInfo"}};

function validate106(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate106.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate105(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate105.errors : vErrors.concat(validate105.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate106.errors = vErrors;
return errors === 0;
}

export const SheriffOrderInfo = validate108;
const schema127 = {"type":"object","properties":{"id":{"type":"string"},"delete":{"type":"boolean","nullable":true},"sheriffName":{"type":"string"},"nodeName":{"type":"string"},"nodeFullName":{"type":"string","nullable":true},"feedName":{"type":"string"},"postingId":{"type":"string","nullable":true},"postingRevisionId":{"type":"string","nullable":true},"postingOwnerName":{"type":"string","nullable":true},"postingOwnerFullName":{"type":"string","nullable":true},"postingOwnerGender":{"type":"string","nullable":true},"postingHeading":{"type":"string","nullable":true},"commentId":{"type":"string","nullable":true},"commentRevisionId":{"type":"string","nullable":true},"commentOwnerName":{"type":"string","nullable":true},"commentOwnerFullName":{"type":"string","nullable":true},"commentOwnerGender":{"type":"string","nullable":true},"commentHeading":{"type":"string","nullable":true},"category":{"type":"string"},"reasonCode":{"type":"string","nullable":true},"reasonDetails":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"signature":{"type":"string"},"signatureVersion":{"type":"integer"},"complaintGroupId":{"type":"string","nullable":true}},"required":["id","sheriffName","nodeName","feedName","category","createdAt","signature","signatureVersion"],"additionalProperties":false};

function validate108(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((((data.id === undefined) && (missing0 = "id")) || ((data.sheriffName === undefined) && (missing0 = "sheriffName"))) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.feedName === undefined) && (missing0 = "feedName"))) || ((data.category === undefined) && (missing0 = "category"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.signature === undefined) && (missing0 = "signature"))) || ((data.signatureVersion === undefined) && (missing0 = "signatureVersion"))){
validate108.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema127.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.delete !== undefined){
let data1 = data.delete;
const _errs4 = errors;
if((typeof data1 !== "boolean") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "boolean") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "false" || data1 === 0 || data1 === null){
coerced1 = false;
}
else if(data1 === "true" || data1 === 1){
coerced1 = true;
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/delete",schemaPath:"#/properties/delete/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["delete"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffName !== undefined){
let data2 = data.sheriffName;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/sheriffName",schemaPath:"#/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["sheriffName"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data3 = data.nodeName;
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["nodeName"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeFullName !== undefined){
let data4 = data.nodeFullName;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/nodeFullName",schemaPath:"#/properties/nodeFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["nodeFullName"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data5 = data.feedName;
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["feedName"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data6 = data.postingId;
const _errs16 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["postingId"] = coerced6;
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingRevisionId !== undefined){
let data7 = data.postingRevisionId;
const _errs19 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingRevisionId",schemaPath:"#/properties/postingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["postingRevisionId"] = coerced7;
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingOwnerName !== undefined){
let data8 = data.postingOwnerName;
const _errs22 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingOwnerName",schemaPath:"#/properties/postingOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["postingOwnerName"] = coerced8;
}
}
}
var valid0 = _errs22 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingOwnerFullName !== undefined){
let data9 = data.postingOwnerFullName;
const _errs25 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingOwnerFullName",schemaPath:"#/properties/postingOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["postingOwnerFullName"] = coerced9;
}
}
}
var valid0 = _errs25 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingOwnerGender !== undefined){
let data10 = data.postingOwnerGender;
const _errs28 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingOwnerGender",schemaPath:"#/properties/postingOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["postingOwnerGender"] = coerced10;
}
}
}
var valid0 = _errs28 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingHeading !== undefined){
let data11 = data.postingHeading;
const _errs31 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/postingHeading",schemaPath:"#/properties/postingHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data !== undefined){
data["postingHeading"] = coerced11;
}
}
}
var valid0 = _errs31 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentId !== undefined){
let data12 = data.commentId;
const _errs34 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentId",schemaPath:"#/properties/commentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data !== undefined){
data["commentId"] = coerced12;
}
}
}
var valid0 = _errs34 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentRevisionId !== undefined){
let data13 = data.commentRevisionId;
const _errs37 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentRevisionId",schemaPath:"#/properties/commentRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["commentRevisionId"] = coerced13;
}
}
}
var valid0 = _errs37 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentOwnerName !== undefined){
let data14 = data.commentOwnerName;
const _errs40 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentOwnerName",schemaPath:"#/properties/commentOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["commentOwnerName"] = coerced14;
}
}
}
var valid0 = _errs40 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentOwnerFullName !== undefined){
let data15 = data.commentOwnerFullName;
const _errs43 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentOwnerFullName",schemaPath:"#/properties/commentOwnerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data !== undefined){
data["commentOwnerFullName"] = coerced15;
}
}
}
var valid0 = _errs43 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentOwnerGender !== undefined){
let data16 = data.commentOwnerGender;
const _errs46 = errors;
if((typeof data16 !== "string") && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((typeof data16 === "string") && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data16;
}
else if(data16 === null){
coerced16 = "";
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentOwnerGender",schemaPath:"#/properties/commentOwnerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data !== undefined){
data["commentOwnerGender"] = coerced16;
}
}
}
var valid0 = _errs46 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentHeading !== undefined){
let data17 = data.commentHeading;
const _errs49 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced17 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/commentHeading",schemaPath:"#/properties/commentHeading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data !== undefined){
data["commentHeading"] = coerced17;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.category !== undefined){
let data18 = data.category;
const _errs52 = errors;
if(typeof data18 !== "string"){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if(typeof data18 === "string"){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data18;
}
else if(data18 === null){
coerced18 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/category",schemaPath:"#/properties/category/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data !== undefined){
data["category"] = coerced18;
}
}
}
var valid0 = _errs52 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonCode !== undefined){
let data19 = data.reasonCode;
const _errs54 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType19 = typeof data19;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType19 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced19 = data19;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data19;
}
else if(data19 === null){
coerced19 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced19 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/reasonCode",schemaPath:"#/properties/reasonCode/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data19 = coerced19;
if(data !== undefined){
data["reasonCode"] = coerced19;
}
}
}
var valid0 = _errs54 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonDetails !== undefined){
let data20 = data.reasonDetails;
const _errs57 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType20 = typeof data20;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType20 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced20 = data20;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data20;
}
else if(data20 === null){
coerced20 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced20 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/reasonDetails",schemaPath:"#/properties/reasonDetails/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced20 !== undefined){
data20 = coerced20;
if(data !== undefined){
data["reasonDetails"] = coerced20;
}
}
}
var valid0 = _errs57 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data21 = data.createdAt;
const _errs60 = errors;
if(!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))){
let dataType21 = typeof data21;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType21 = typeof data21;
if(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))){
coerced21 = data21;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 === "boolean" || data21 === null
              || (dataType21 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced21 = +data21;
}
else {
validate108.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced21 !== undefined){
data21 = coerced21;
if(data !== undefined){
data["createdAt"] = coerced21;
}
}
}
var valid0 = _errs60 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data22 = data.signature;
const _errs62 = errors;
if(typeof data22 !== "string"){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if(typeof data22 === "string"){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data22;
}
else if(data22 === null){
coerced22 = "";
}
else {
validate108.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data !== undefined){
data["signature"] = coerced22;
}
}
}
var valid0 = _errs62 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data23 = data.signatureVersion;
const _errs64 = errors;
if(!(((typeof data23 == "number") && (!(data23 % 1) && !isNaN(data23))) && (isFinite(data23)))){
let dataType23 = typeof data23;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType23 = typeof data23;
if(((typeof data23 == "number") && (!(data23 % 1) && !isNaN(data23))) && (isFinite(data23))){
coerced23 = data23;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 === "boolean" || data23 === null
              || (dataType23 === "string" && data23 && data23 == +data23 && !(data23 % 1))){
coerced23 = +data23;
}
else {
validate108.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced23 !== undefined){
data23 = coerced23;
if(data !== undefined){
data["signatureVersion"] = coerced23;
}
}
}
var valid0 = _errs64 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.complaintGroupId !== undefined){
let data24 = data.complaintGroupId;
const _errs66 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType24 = typeof data24;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType24 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced24 = data24;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data24;
}
else if(data24 === null){
coerced24 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced24 = null;
}
else {
validate108.errors = [{instancePath:instancePath+"/complaintGroupId",schemaPath:"#/properties/complaintGroupId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced24 !== undefined){
data24 = coerced24;
if(data !== undefined){
data["complaintGroupId"] = coerced24;
}
}
}
var valid0 = _errs66 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate108.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate108.errors = vErrors;
return errors === 0;
}

export const StorySummaryBlocked = validate109;
const schema128 = {"type":"object","properties":{"operations":{"type":"array","items":{"type":"string"}},"period":{"type":"integer","nullable":true}},"required":["operations"],"additionalProperties":false};

function validate109(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.operations === undefined) && (missing0 = "operations")){
validate109.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "operations") || (key0 === "period"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.operations !== undefined){
let data0 = data.operations;
const _errs2 = errors;
if(!(Array.isArray(data0))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(Array.isArray(data0)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data0 === null){
coerced0 = [data0];
}
else {
validate109.errors = [{instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["operations"] = coerced0;
}
}
}
if(errors === _errs2){
if(Array.isArray(data0)){
var valid1 = true;
const len0 = data0.length;
for(let i0=0; i0<len0; i0++){
let data1 = data0[i0];
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate109.errors = [{instancePath:instancePath+"/operations/" + i0,schemaPath:"#/properties/operations/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0[i0] = coerced1;
}
}
}
var valid1 = _errs4 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.period !== undefined){
let data2 = data.period;
const _errs6 = errors;
if((!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate109.errors = [{instancePath:instancePath+"/period",schemaPath:"#/properties/period/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["period"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate109.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate109.errors = vErrors;
return errors === 0;
}

export const StorySummaryFriendGroup = validate110;
const schema129 = {"type":"object","properties":{"id":{"type":"string","nullable":true},"title":{"type":"string","nullable":true}},"additionalProperties":false};

function validate110(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "id") || (key0 === "title"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate110.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data1 = data.title;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate110.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["title"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate110.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate110.errors = vErrors;
return errors === 0;
}

export const StorySummaryEntry = validate111;
const schema130 = {"type":"object","properties":{"ownerName":{"type":"string","nullable":true},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"heading":{"type":"string","nullable":true},"sheriffs":{"type":"array","items":{"type":"string"},"nullable":true},"sheriffMarks":{"type":"array","items":{"$ref":"node#/definitions/SheriffMark"},"nullable":true}},"additionalProperties":false};

function validate111(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "ownerName") || (key0 === "ownerFullName")) || (key0 === "ownerGender")) || (key0 === "heading")) || (key0 === "sheriffs")) || (key0 === "sheriffMarks"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.ownerName !== undefined){
let data0 = data.ownerName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["ownerName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data1 = data.ownerFullName;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerFullName"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data2 = data.ownerGender;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerGender"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data3 = data.heading;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["heading"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffs !== undefined){
let data4 = data.sheriffs;
const _errs14 = errors;
if((!(Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "string" || dataType4 === "number"
              || dataType4 === "boolean" || data4 === null){
coerced4 = [data4];
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/sheriffs",schemaPath:"#/properties/sheriffs/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["sheriffs"] = coerced4;
}
}
}
if(errors === _errs14){
if(Array.isArray(data4)){
var valid1 = true;
const len0 = data4.length;
for(let i0=0; i0<len0; i0++){
let data5 = data4[i0];
const _errs17 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate111.errors = [{instancePath:instancePath+"/sheriffs/" + i0,schemaPath:"#/properties/sheriffs/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4[i0] = coerced5;
}
}
}
var valid1 = _errs17 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffMarks !== undefined){
let data6 = data.sheriffMarks;
const _errs19 = errors;
if((!(Array.isArray(data6))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((Array.isArray(data6)) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "string" || dataType6 === "number"
              || dataType6 === "boolean" || data6 === null){
coerced6 = [data6];
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate111.errors = [{instancePath:instancePath+"/sheriffMarks",schemaPath:"#/properties/sheriffMarks/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["sheriffMarks"] = coerced6;
}
}
}
if(errors === _errs19){
if(Array.isArray(data6)){
var valid2 = true;
const len1 = data6.length;
for(let i1=0; i1<len1; i1++){
let data7 = data6[i1];
const _errs22 = errors;
const _errs23 = errors;
if(errors === _errs23){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
let missing0;
if((data7.sheriffName === undefined) && (missing0 = "sheriffName")){
validate111.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1,schemaPath:"node#/definitions/SheriffMark/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs25 = errors;
for(const key1 in data7){
if(!(key1 === "sheriffName")){
delete data7[key1];
}
}
if(_errs25 === errors){
if(data7.sheriffName !== undefined){
let data8 = data7.sheriffName;
if(typeof data8 !== "string"){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if(typeof data8 === "string"){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data8;
}
else if(data8 === null){
coerced7 = "";
}
else {
validate111.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1+"/sheriffName",schemaPath:"node#/definitions/SheriffMark/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data7 !== undefined){
data7["sheriffName"] = coerced7;
}
}
}
}
}
}
}
else {
validate111.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1,schemaPath:"node#/definitions/SheriffMark/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid2 = _errs22 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
else {
validate111.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate111.errors = vErrors;
return errors === 0;
}

export const StorySummaryNode = validate112;
const schema132 = {"type":"object","properties":{"ownerName":{"type":"string","nullable":true},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true}},"additionalProperties":false};

function validate112(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "ownerName") || (key0 === "ownerFullName")) || (key0 === "ownerGender"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.ownerName !== undefined){
let data0 = data.ownerName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate112.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["ownerName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data1 = data.ownerFullName;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate112.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerFullName"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data2 = data.ownerGender;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate112.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerGender"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate112.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate112.errors = vErrors;
return errors === 0;
}

export const StorySummaryPageClicks = validate113;
const schema133 = {"type":"object","properties":{"heading":{"type":"string","nullable":true},"href":{"type":"string"},"clicks":{"type":"integer"}},"required":["href","clicks"],"additionalProperties":false};

function validate113(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.href === undefined) && (missing0 = "href")) || ((data.clicks === undefined) && (missing0 = "clicks"))){
validate113.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "heading") || (key0 === "href")) || (key0 === "clicks"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.heading !== undefined){
let data0 = data.heading;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate113.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["heading"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.href !== undefined){
let data1 = data.href;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate113.errors = [{instancePath:instancePath+"/href",schemaPath:"#/properties/href/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["href"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clicks !== undefined){
let data2 = data.clicks;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate113.errors = [{instancePath:instancePath+"/clicks",schemaPath:"#/properties/clicks/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["clicks"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate113.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate113.errors = vErrors;
return errors === 0;
}

export const StorySummaryReaction = validate114;
const schema134 = {"type":"object","properties":{"ownerName":{"type":"string","nullable":true},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"emoji":{"type":"integer","nullable":true}},"additionalProperties":false};

function validate114(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "ownerName") || (key0 === "ownerFullName")) || (key0 === "ownerGender")) || (key0 === "emoji"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.ownerName !== undefined){
let data0 = data.ownerName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate114.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["ownerName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data1 = data.ownerFullName;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate114.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerFullName"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data2 = data.ownerGender;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate114.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerGender"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.emoji !== undefined){
let data3 = data.emoji;
const _errs11 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate114.errors = [{instancePath:instancePath+"/emoji",schemaPath:"#/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["emoji"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate114.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate114.errors = vErrors;
return errors === 0;
}

export const StorySummarySheriff = validate115;
const schema135 = {"type":"object","properties":{"sheriffName":{"type":"string"},"orderId":{"type":"string","nullable":true},"complaintId":{"type":"string","nullable":true}},"required":["sheriffName"],"additionalProperties":false};

function validate115(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.sheriffName === undefined) && (missing0 = "sheriffName")){
validate115.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "sheriffName") || (key0 === "orderId")) || (key0 === "complaintId"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.sheriffName !== undefined){
let data0 = data.sheriffName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate115.errors = [{instancePath:instancePath+"/sheriffName",schemaPath:"#/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["sheriffName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.orderId !== undefined){
let data1 = data.orderId;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate115.errors = [{instancePath:instancePath+"/orderId",schemaPath:"#/properties/orderId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["orderId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.complaintId !== undefined){
let data2 = data.complaintId;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate115.errors = [{instancePath:instancePath+"/complaintId",schemaPath:"#/properties/complaintId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["complaintId"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate115.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate115.errors = vErrors;
return errors === 0;
}

export const SubscriberInfo = validate116;
const schema136 = {"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string"},"feedName":{"type":"string","nullable":true},"postingId":{"type":"string","nullable":true},"nodeName":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"createdAt":{"type":"integer"},"operations":{"anyOf":[{"$ref":"node#/definitions/SubscriberOperations","type":"object","nullable":true},{"type":"null"}]},"ownerOperations":{"anyOf":[{"$ref":"node#/definitions/SubscriberOperations","type":"object","nullable":true},{"type":"null"}]},"adminOperations":{"anyOf":[{"$ref":"node#/definitions/SubscriberOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","type","nodeName","createdAt"],"additionalProperties":false};

function validate116(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.type === undefined) && (missing0 = "type"))) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate116.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema136.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate116.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.type !== undefined){
let data1 = data.type;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate116.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["type"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data2 = data.feedName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate116.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["feedName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data3 = data.postingId;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate116.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["postingId"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data4 = data.nodeName;
const _errs12 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
validate116.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["nodeName"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data5 = data.contact;
const _errs14 = errors;
const _errs15 = errors;
let valid1 = false;
const _errs16 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["contact"] = coerced5;
}
}
}
if(!(validate41(data5, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs16 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs19 = errors;
if(data5 !== null){
let dataType6 = typeof data5;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType6 = typeof data5;
if(data5 === null){
coerced6 = data5;
}
}
if(!(coerced6 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced6 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced6 !== undefined){
data5 = coerced6;
if(data !== undefined){
data["contact"] = coerced6;
}
}
}
var _valid0 = _errs19 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate116.errors = vErrors;
return false;
}
else {
errors = _errs15;
if(vErrors !== null){
if(_errs15){
vErrors.length = _errs15;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data6 = data.createdAt;
const _errs21 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType7 = typeof data6;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType7 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced7 = data6;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data6 === null
              || (dataType7 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced7 = +data6;
}
else {
validate116.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data !== undefined){
data["createdAt"] = coerced7;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data7 = data.operations;
const _errs23 = errors;
const _errs24 = errors;
let valid2 = false;
const _errs25 = errors;
if((!(data7 && typeof data7 == "object" && !Array.isArray(data7))) && (data7 !== null)){
let dataType8 = typeof data7;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType8 = typeof data7;
if((data7 && typeof data7 == "object" && !Array.isArray(data7)) && (data7 === null)){
coerced8 = data7;
}
}
if(!(coerced8 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced8 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data !== undefined){
data["operations"] = coerced8;
}
}
}
const _errs26 = errors;
if(errors === _errs26){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
const _errs28 = errors;
for(const key1 in data7){
if(!((key1 === "view") || (key1 === "delete"))){
delete data7[key1];
}
}
if(_errs28 === errors){
if(data7.view !== undefined){
let data8 = data7.view;
const _errs29 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data8;
}
else if(data8 === null){
coerced9 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced9 = null;
}
else {
const err4 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/SubscriberOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data7 !== undefined){
data7["view"] = coerced9;
}
}
}
var valid4 = _errs29 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data7.delete !== undefined){
let data9 = data7.delete;
const _errs32 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data9;
}
else if(data9 === null){
coerced10 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced10 = null;
}
else {
const err5 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/SubscriberOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data7 !== undefined){
data7["delete"] = coerced10;
}
}
}
var valid4 = _errs32 === errors;
}
else {
var valid4 = true;
}
}
}
}
else {
const err6 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/SubscriberOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
var _valid1 = _errs25 === errors;
valid2 = valid2 || _valid1;
if(!valid2){
const _errs37 = errors;
if(data7 !== null){
let dataType11 = typeof data7;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType11 = typeof data7;
if(data7 === null){
coerced11 = data7;
}
}
if(!(coerced11 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced11 = null;
}
else {
const err7 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced11 !== undefined){
data7 = coerced11;
if(data !== undefined){
data["operations"] = coerced11;
}
}
}
var _valid1 = _errs37 === errors;
valid2 = valid2 || _valid1;
}
if(!valid2){
const err8 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
validate116.errors = vErrors;
return false;
}
else {
errors = _errs24;
if(vErrors !== null){
if(_errs24){
vErrors.length = _errs24;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerOperations !== undefined){
let data10 = data.ownerOperations;
const _errs39 = errors;
const _errs40 = errors;
let valid5 = false;
const _errs41 = errors;
if((!(data10 && typeof data10 == "object" && !Array.isArray(data10))) && (data10 !== null)){
let dataType12 = typeof data10;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType12 = typeof data10;
if((data10 && typeof data10 == "object" && !Array.isArray(data10)) && (data10 === null)){
coerced12 = data10;
}
}
if(!(coerced12 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced12 = null;
}
else {
const err9 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced12 !== undefined){
data10 = coerced12;
if(data !== undefined){
data["ownerOperations"] = coerced12;
}
}
}
const _errs42 = errors;
if(errors === _errs42){
if(data10 && typeof data10 == "object" && !Array.isArray(data10)){
const _errs44 = errors;
for(const key2 in data10){
if(!((key2 === "view") || (key2 === "delete"))){
delete data10[key2];
}
}
if(_errs44 === errors){
if(data10.view !== undefined){
let data11 = data10.view;
const _errs45 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType13 = typeof data11;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType13 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced13 = data11;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data11;
}
else if(data11 === null){
coerced13 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced13 = null;
}
else {
const err10 = {instancePath:instancePath+"/ownerOperations/view",schemaPath:"node#/definitions/SubscriberOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced13 !== undefined){
data11 = coerced13;
if(data10 !== undefined){
data10["view"] = coerced13;
}
}
}
var valid7 = _errs45 === errors;
}
else {
var valid7 = true;
}
if(valid7){
if(data10.delete !== undefined){
let data12 = data10.delete;
const _errs48 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType14 = typeof data12;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType14 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced14 = data12;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data12;
}
else if(data12 === null){
coerced14 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced14 = null;
}
else {
const err11 = {instancePath:instancePath+"/ownerOperations/delete",schemaPath:"node#/definitions/SubscriberOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced14 !== undefined){
data12 = coerced14;
if(data10 !== undefined){
data10["delete"] = coerced14;
}
}
}
var valid7 = _errs48 === errors;
}
else {
var valid7 = true;
}
}
}
}
else {
const err12 = {instancePath:instancePath+"/ownerOperations",schemaPath:"node#/definitions/SubscriberOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
var _valid2 = _errs41 === errors;
valid5 = valid5 || _valid2;
if(!valid5){
const _errs53 = errors;
if(data10 !== null){
let dataType15 = typeof data10;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType15 = typeof data10;
if(data10 === null){
coerced15 = data10;
}
}
if(!(coerced15 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced15 = null;
}
else {
const err13 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced15 !== undefined){
data10 = coerced15;
if(data !== undefined){
data["ownerOperations"] = coerced15;
}
}
}
var _valid2 = _errs53 === errors;
valid5 = valid5 || _valid2;
}
if(!valid5){
const err14 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
validate116.errors = vErrors;
return false;
}
else {
errors = _errs40;
if(vErrors !== null){
if(_errs40){
vErrors.length = _errs40;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs39 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.adminOperations !== undefined){
let data13 = data.adminOperations;
const _errs55 = errors;
const _errs56 = errors;
let valid8 = false;
const _errs57 = errors;
if((!(data13 && typeof data13 == "object" && !Array.isArray(data13))) && (data13 !== null)){
let dataType16 = typeof data13;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType16 = typeof data13;
if((data13 && typeof data13 == "object" && !Array.isArray(data13)) && (data13 === null)){
coerced16 = data13;
}
}
if(!(coerced16 !== undefined)){
if(data13 === "" || data13 === 0 || data13 === false){
coerced16 = null;
}
else {
const err15 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced16 !== undefined){
data13 = coerced16;
if(data !== undefined){
data["adminOperations"] = coerced16;
}
}
}
const _errs58 = errors;
if(errors === _errs58){
if(data13 && typeof data13 == "object" && !Array.isArray(data13)){
const _errs60 = errors;
for(const key3 in data13){
if(!((key3 === "view") || (key3 === "delete"))){
delete data13[key3];
}
}
if(_errs60 === errors){
if(data13.view !== undefined){
let data14 = data13.view;
const _errs61 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType17 = typeof data14;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType17 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced17 = data14;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data14;
}
else if(data14 === null){
coerced17 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced17 = null;
}
else {
const err16 = {instancePath:instancePath+"/adminOperations/view",schemaPath:"node#/definitions/SubscriberOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced17 !== undefined){
data14 = coerced17;
if(data13 !== undefined){
data13["view"] = coerced17;
}
}
}
var valid10 = _errs61 === errors;
}
else {
var valid10 = true;
}
if(valid10){
if(data13.delete !== undefined){
let data15 = data13.delete;
const _errs64 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType18 = typeof data15;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType18 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced18 = data15;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data15;
}
else if(data15 === null){
coerced18 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced18 = null;
}
else {
const err17 = {instancePath:instancePath+"/adminOperations/delete",schemaPath:"node#/definitions/SubscriberOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced18 !== undefined){
data15 = coerced18;
if(data13 !== undefined){
data13["delete"] = coerced18;
}
}
}
var valid10 = _errs64 === errors;
}
else {
var valid10 = true;
}
}
}
}
else {
const err18 = {instancePath:instancePath+"/adminOperations",schemaPath:"node#/definitions/SubscriberOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
var _valid3 = _errs57 === errors;
valid8 = valid8 || _valid3;
if(!valid8){
const _errs69 = errors;
if(data13 !== null){
let dataType19 = typeof data13;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType19 = typeof data13;
if(data13 === null){
coerced19 = data13;
}
}
if(!(coerced19 !== undefined)){
if(data13 === "" || data13 === 0 || data13 === false){
coerced19 = null;
}
else {
const err19 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced19 !== undefined){
data13 = coerced19;
if(data !== undefined){
data["adminOperations"] = coerced19;
}
}
}
var _valid3 = _errs69 === errors;
valid8 = valid8 || _valid3;
}
if(!valid8){
const err20 = {instancePath:instancePath+"/adminOperations",schemaPath:"#/properties/adminOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
validate116.errors = vErrors;
return false;
}
else {
errors = _errs56;
if(vErrors !== null){
if(_errs56){
vErrors.length = _errs56;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs55 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate116.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate116.errors = vErrors;
return errors === 0;
}

export const SubscriberInfoArray = validate118;
const schema140 = {"type":"array","items":{"$ref":"node#/definitions/SubscriberInfo"}};

function validate118(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate118.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate116(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate116.errors : vErrors.concat(validate116.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate118.errors = vErrors;
return errors === 0;
}

export const SubscriptionInfo = validate120;
const schema141 = {"type":"object","properties":{"id":{"type":"string"},"type":{"type":"string"},"feedName":{"type":"string","nullable":true},"remoteNodeName":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"remoteFeedName":{"type":"string","nullable":true},"remotePostingId":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"reason":{"type":"string"},"operations":{"anyOf":[{"$ref":"node#/definitions/SubscriptionOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","type","remoteNodeName","createdAt","reason"],"additionalProperties":false};

function validate120(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((data.id === undefined) && (missing0 = "id")) || ((data.type === undefined) && (missing0 = "type"))) || ((data.remoteNodeName === undefined) && (missing0 = "remoteNodeName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.reason === undefined) && (missing0 = "reason"))){
validate120.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema141.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate120.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.type !== undefined){
let data1 = data.type;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate120.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["type"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data2 = data.feedName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate120.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["feedName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteNodeName !== undefined){
let data3 = data.remoteNodeName;
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate120.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["remoteNodeName"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data4 = data.contact;
const _errs11 = errors;
const _errs12 = errors;
let valid1 = false;
const _errs13 = errors;
if((!(data4 && typeof data4 == "object" && !Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((data4 && typeof data4 == "object" && !Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["contact"] = coerced4;
}
}
}
if(!(validate41(data4, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs13 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs16 = errors;
if(data4 !== null){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if(data4 === null){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced5 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data !== undefined){
data["contact"] = coerced5;
}
}
}
var _valid0 = _errs16 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate120.errors = vErrors;
return false;
}
else {
errors = _errs12;
if(vErrors !== null){
if(_errs12){
vErrors.length = _errs12;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteFeedName !== undefined){
let data5 = data.remoteFeedName;
const _errs18 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType6 = typeof data5;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType6 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced6 = data5;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data5;
}
else if(data5 === null){
coerced6 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced6 = null;
}
else {
validate120.errors = [{instancePath:instancePath+"/remoteFeedName",schemaPath:"#/properties/remoteFeedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data5 = coerced6;
if(data !== undefined){
data["remoteFeedName"] = coerced6;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingId !== undefined){
let data6 = data.remotePostingId;
const _errs21 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType7 = typeof data6;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType7 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced7 = data6;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data6;
}
else if(data6 === null){
coerced7 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced7 = null;
}
else {
validate120.errors = [{instancePath:instancePath+"/remotePostingId",schemaPath:"#/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data !== undefined){
data["remotePostingId"] = coerced7;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data7 = data.createdAt;
const _errs24 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType8 = typeof data7;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType8 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced8 = data7;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data7 === null
              || (dataType8 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced8 = +data7;
}
else {
validate120.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data !== undefined){
data["createdAt"] = coerced8;
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reason !== undefined){
let data8 = data.reason;
const _errs26 = errors;
if(typeof data8 !== "string"){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if(typeof data8 === "string"){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data8;
}
else if(data8 === null){
coerced9 = "";
}
else {
validate120.errors = [{instancePath:instancePath+"/reason",schemaPath:"#/properties/reason/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data !== undefined){
data["reason"] = coerced9;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data9 = data.operations;
const _errs28 = errors;
const _errs29 = errors;
let valid2 = false;
const _errs30 = errors;
if((!(data9 && typeof data9 == "object" && !Array.isArray(data9))) && (data9 !== null)){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((data9 && typeof data9 == "object" && !Array.isArray(data9)) && (data9 === null)){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(data9 === "" || data9 === 0 || data9 === false){
coerced10 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["operations"] = coerced10;
}
}
}
const _errs31 = errors;
if(errors === _errs31){
if(data9 && typeof data9 == "object" && !Array.isArray(data9)){
const _errs33 = errors;
for(const key1 in data9){
if(!((key1 === "view") || (key1 === "delete"))){
delete data9[key1];
}
}
if(_errs33 === errors){
if(data9.view !== undefined){
let data10 = data9.view;
const _errs34 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data10;
}
else if(data10 === null){
coerced11 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced11 = null;
}
else {
const err4 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/SubscriptionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data9 !== undefined){
data9["view"] = coerced11;
}
}
}
var valid4 = _errs34 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data9.delete !== undefined){
let data11 = data9.delete;
const _errs37 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data11;
}
else if(data11 === null){
coerced12 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
const err5 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/SubscriptionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data9 !== undefined){
data9["delete"] = coerced12;
}
}
}
var valid4 = _errs37 === errors;
}
else {
var valid4 = true;
}
}
}
}
else {
const err6 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/SubscriptionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
var _valid1 = _errs30 === errors;
valid2 = valid2 || _valid1;
if(!valid2){
const _errs42 = errors;
if(data9 !== null){
let dataType13 = typeof data9;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType13 = typeof data9;
if(data9 === null){
coerced13 = data9;
}
}
if(!(coerced13 !== undefined)){
if(data9 === "" || data9 === 0 || data9 === false){
coerced13 = null;
}
else {
const err7 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced13 !== undefined){
data9 = coerced13;
if(data !== undefined){
data["operations"] = coerced13;
}
}
}
var _valid1 = _errs42 === errors;
valid2 = valid2 || _valid1;
}
if(!valid2){
const err8 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
validate120.errors = vErrors;
return false;
}
else {
errors = _errs29;
if(vErrors !== null){
if(_errs29){
vErrors.length = _errs29;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs28 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate120.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate120.errors = vErrors;
return errors === 0;
}

export const SubscriptionInfoArray = validate122;
const schema143 = {"type":"array","items":{"$ref":"node#/definitions/SubscriptionInfo"}};

function validate122(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate122.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate120(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate120.errors : vErrors.concat(validate120.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate122.errors = vErrors;
return errors === 0;
}

export const TokenInfo = validate124;
const schema144 = {"type":"object","properties":{"id":{"type":"string"},"token":{"type":"string"},"name":{"type":"string","nullable":true},"permissions":{"type":"array","items":{"type":"string"},"default":[]},"pluginName":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true},"lastUsedAt":{"type":"integer","nullable":true},"lastUsedBrowser":{"type":"string","nullable":true},"lastUsedIp":{"type":"string","nullable":true}},"required":["id","token","permissions","createdAt"],"additionalProperties":false};

function validate124(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
if(data.permissions === undefined){
data.permissions = [];
}
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.token === undefined) && (missing0 = "token"))) || ((data.permissions === undefined) && (missing0 = "permissions"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate124.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema144.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate124.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.token !== undefined){
let data1 = data.token;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate124.errors = [{instancePath:instancePath+"/token",schemaPath:"#/properties/token/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["token"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.name !== undefined){
let data2 = data.name;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["name"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
let data3 = data.permissions;
const _errs9 = errors;
if(!(Array.isArray(data3))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(Array.isArray(data3)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "string" || dataType3 === "number"
              || dataType3 === "boolean" || data3 === null){
coerced3 = [data3];
}
else {
validate124.errors = [{instancePath:instancePath+"/permissions",schemaPath:"#/properties/permissions/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["permissions"] = coerced3;
}
}
}
if(errors === _errs9){
if(Array.isArray(data3)){
var valid1 = true;
const len0 = data3.length;
for(let i0=0; i0<len0; i0++){
let data4 = data3[i0];
const _errs11 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
validate124.errors = [{instancePath:instancePath+"/permissions/" + i0,schemaPath:"#/properties/permissions/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data3 !== undefined){
data3[i0] = coerced4;
}
}
}
var valid1 = _errs11 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs9 === errors;
if(valid0){
if(data.pluginName !== undefined){
let data5 = data.pluginName;
const _errs13 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/pluginName",schemaPath:"#/properties/pluginName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["pluginName"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data6 = data.createdAt;
const _errs16 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate124.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["createdAt"] = coerced6;
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data7 = data.deadline;
const _errs18 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["deadline"] = coerced7;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.lastUsedAt !== undefined){
let data8 = data.lastUsedAt;
const _errs21 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/lastUsedAt",schemaPath:"#/properties/lastUsedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["lastUsedAt"] = coerced8;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.lastUsedBrowser !== undefined){
let data9 = data.lastUsedBrowser;
const _errs24 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/lastUsedBrowser",schemaPath:"#/properties/lastUsedBrowser/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["lastUsedBrowser"] = coerced9;
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.lastUsedIp !== undefined){
let data10 = data.lastUsedIp;
const _errs27 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate124.errors = [{instancePath:instancePath+"/lastUsedIp",schemaPath:"#/properties/lastUsedIp/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["lastUsedIp"] = coerced10;
}
}
}
var valid0 = _errs27 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate124.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate124.errors = vErrors;
return errors === 0;
}

export const TokenInfoArray = validate125;
const schema145 = {"type":"array","items":{"$ref":"node#/definitions/TokenInfo"}};

function validate125(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate125.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
let data0 = data[i0];
const _errs1 = errors;
const _errs2 = errors;
if(errors === _errs2){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
if(data0.permissions === undefined){
data0.permissions = [];
}
let missing0;
if(((((data0.id === undefined) && (missing0 = "id")) || ((data0.token === undefined) && (missing0 = "token"))) || ((data0.permissions === undefined) && (missing0 = "permissions"))) || ((data0.createdAt === undefined) && (missing0 = "createdAt"))){
validate125.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/TokenInfo/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs4 = errors;
for(const key0 in data0){
if(!(func2.call(schema144.properties, key0))){
delete data0[key0];
}
}
if(_errs4 === errors){
if(data0.id !== undefined){
let data1 = data0.id;
const _errs5 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/id",schemaPath:"node#/definitions/TokenInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["id"] = coerced1;
}
}
}
var valid2 = _errs5 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.token !== undefined){
let data2 = data0.token;
const _errs7 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/token",schemaPath:"node#/definitions/TokenInfo/properties/token/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["token"] = coerced2;
}
}
}
var valid2 = _errs7 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.name !== undefined){
let data3 = data0.name;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/name",schemaPath:"node#/definitions/TokenInfo/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data0 !== undefined){
data0["name"] = coerced3;
}
}
}
var valid2 = _errs9 === errors;
}
else {
var valid2 = true;
}
if(valid2){
let data4 = data0.permissions;
const _errs12 = errors;
if(!(Array.isArray(data4))){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(Array.isArray(data4)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "string" || dataType4 === "number"
              || dataType4 === "boolean" || data4 === null){
coerced4 = [data4];
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/permissions",schemaPath:"node#/definitions/TokenInfo/properties/permissions/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data0 !== undefined){
data0["permissions"] = coerced4;
}
}
}
if(errors === _errs12){
if(Array.isArray(data4)){
var valid3 = true;
const len1 = data4.length;
for(let i1=0; i1<len1; i1++){
let data5 = data4[i1];
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/permissions/" + i1,schemaPath:"node#/definitions/TokenInfo/properties/permissions/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4[i1] = coerced5;
}
}
}
var valid3 = _errs14 === errors;
if(!valid3){
break;
}
}
}
}
var valid2 = _errs12 === errors;
if(valid2){
if(data0.pluginName !== undefined){
let data6 = data0.pluginName;
const _errs16 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/pluginName",schemaPath:"node#/definitions/TokenInfo/properties/pluginName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data0 !== undefined){
data0["pluginName"] = coerced6;
}
}
}
var valid2 = _errs16 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.createdAt !== undefined){
let data7 = data0.createdAt;
const _errs19 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/createdAt",schemaPath:"node#/definitions/TokenInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data0 !== undefined){
data0["createdAt"] = coerced7;
}
}
}
var valid2 = _errs19 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.deadline !== undefined){
let data8 = data0.deadline;
const _errs21 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/deadline",schemaPath:"node#/definitions/TokenInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data0 !== undefined){
data0["deadline"] = coerced8;
}
}
}
var valid2 = _errs21 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.lastUsedAt !== undefined){
let data9 = data0.lastUsedAt;
const _errs24 = errors;
if((!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))) && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))) && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data9 === null
              || (dataType9 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced9 = +data9;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/lastUsedAt",schemaPath:"node#/definitions/TokenInfo/properties/lastUsedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data0 !== undefined){
data0["lastUsedAt"] = coerced9;
}
}
}
var valid2 = _errs24 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.lastUsedBrowser !== undefined){
let data10 = data0.lastUsedBrowser;
const _errs27 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/lastUsedBrowser",schemaPath:"node#/definitions/TokenInfo/properties/lastUsedBrowser/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data0 !== undefined){
data0["lastUsedBrowser"] = coerced10;
}
}
}
var valid2 = _errs27 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.lastUsedIp !== undefined){
let data11 = data0.lastUsedIp;
const _errs30 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0+"/lastUsedIp",schemaPath:"node#/definitions/TokenInfo/properties/lastUsedIp/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data0 !== undefined){
data0["lastUsedIp"] = coerced11;
}
}
}
var valid2 = _errs30 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate125.errors = [{instancePath:instancePath+"/" + i0,schemaPath:"node#/definitions/TokenInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate125.errors = vErrors;
return errors === 0;
}

export const UpdateInfo = validate126;
const schema147 = {"type":"object","properties":{"important":{"type":"boolean","nullable":true},"description":{"type":"string","nullable":true}},"additionalProperties":false};

function validate126(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "important") || (key0 === "description"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.important !== undefined){
let data0 = data.important;
const _errs2 = errors;
if((typeof data0 !== "boolean") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "boolean") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "false" || data0 === 0 || data0 === null){
coerced0 = false;
}
else if(data0 === "true" || data0 === 1){
coerced0 = true;
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate126.errors = [{instancePath:instancePath+"/important",schemaPath:"#/properties/important/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["important"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.description !== undefined){
let data1 = data.description;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate126.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["description"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate126.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate126.errors = vErrors;
return errors === 0;
}

export const UserListInfo = validate127;
const schema148 = {"type":"object","properties":{"name":{"type":"string"},"total":{"type":"integer"}},"required":["name","total"],"additionalProperties":false};

function validate127(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.name === undefined) && (missing0 = "name")) || ((data.total === undefined) && (missing0 = "total"))){
validate127.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "name") || (key0 === "total"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate127.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data1 = data.total;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate127.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["total"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate127.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate127.errors = vErrors;
return errors === 0;
}

export const UserListItemInfo = validate128;
const schema149 = {"type":"object","properties":{"nodeName":{"type":"string"},"createdAt":{"type":"integer"},"moment":{"type":"integer"}},"required":["nodeName","createdAt","moment"],"additionalProperties":false};

function validate128(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.nodeName === undefined) && (missing0 = "nodeName")) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.moment === undefined) && (missing0 = "moment"))){
validate128.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "nodeName") || (key0 === "createdAt")) || (key0 === "moment"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate128.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data1 = data.createdAt;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate128.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["createdAt"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data2 = data.moment;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate128.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["moment"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate128.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate128.errors = vErrors;
return errors === 0;
}

export const UserListSliceInfo = validate129;
const schema150 = {"type":"object","properties":{"listName":{"type":"string"},"before":{"type":"integer"},"after":{"type":"integer"},"items":{"type":"array","items":{"$ref":"node#/definitions/UserListItemInfo"}},"total":{"type":"integer"},"totalInPast":{"type":"integer"},"totalInFuture":{"type":"integer"}},"required":["listName","before","after","items","total","totalInPast","totalInFuture"],"additionalProperties":false};

function validate129(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((((data.listName === undefined) && (missing0 = "listName")) || ((data.before === undefined) && (missing0 = "before"))) || ((data.after === undefined) && (missing0 = "after"))) || ((data.items === undefined) && (missing0 = "items"))) || ((data.total === undefined) && (missing0 = "total"))) || ((data.totalInPast === undefined) && (missing0 = "totalInPast"))) || ((data.totalInFuture === undefined) && (missing0 = "totalInFuture"))){
validate129.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "listName") || (key0 === "before")) || (key0 === "after")) || (key0 === "items")) || (key0 === "total")) || (key0 === "totalInPast")) || (key0 === "totalInFuture"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.listName !== undefined){
let data0 = data.listName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate129.errors = [{instancePath:instancePath+"/listName",schemaPath:"#/properties/listName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["listName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.before !== undefined){
let data1 = data.before;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate129.errors = [{instancePath:instancePath+"/before",schemaPath:"#/properties/before/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["before"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.after !== undefined){
let data2 = data.after;
const _errs6 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate129.errors = [{instancePath:instancePath+"/after",schemaPath:"#/properties/after/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["after"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.items !== undefined){
let data3 = data.items;
const _errs8 = errors;
if(!(Array.isArray(data3))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(Array.isArray(data3)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "string" || dataType3 === "number"
              || dataType3 === "boolean" || data3 === null){
coerced3 = [data3];
}
else {
validate129.errors = [{instancePath:instancePath+"/items",schemaPath:"#/properties/items/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["items"] = coerced3;
}
}
}
if(errors === _errs8){
if(Array.isArray(data3)){
var valid1 = true;
const len0 = data3.length;
for(let i0=0; i0<len0; i0++){
let data4 = data3[i0];
const _errs10 = errors;
const _errs11 = errors;
if(errors === _errs11){
if(data4 && typeof data4 == "object" && !Array.isArray(data4)){
let missing1;
if((((data4.nodeName === undefined) && (missing1 = "nodeName")) || ((data4.createdAt === undefined) && (missing1 = "createdAt"))) || ((data4.moment === undefined) && (missing1 = "moment"))){
validate129.errors = [{instancePath:instancePath+"/items/" + i0,schemaPath:"node#/definitions/UserListItemInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs13 = errors;
for(const key1 in data4){
if(!(((key1 === "nodeName") || (key1 === "createdAt")) || (key1 === "moment"))){
delete data4[key1];
}
}
if(_errs13 === errors){
if(data4.nodeName !== undefined){
let data5 = data4.nodeName;
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(typeof data5 === "string"){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data5;
}
else if(data5 === null){
coerced4 = "";
}
else {
validate129.errors = [{instancePath:instancePath+"/items/" + i0+"/nodeName",schemaPath:"node#/definitions/UserListItemInfo/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data4 !== undefined){
data4["nodeName"] = coerced4;
}
}
}
var valid3 = _errs14 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.createdAt !== undefined){
let data6 = data4.createdAt;
const _errs16 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data6 === null
              || (dataType5 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced5 = +data6;
}
else {
validate129.errors = [{instancePath:instancePath+"/items/" + i0+"/createdAt",schemaPath:"node#/definitions/UserListItemInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data4 !== undefined){
data4["createdAt"] = coerced5;
}
}
}
var valid3 = _errs16 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.moment !== undefined){
let data7 = data4.moment;
const _errs18 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType6 = typeof data7;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType6 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced6 = data7;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data7 === null
              || (dataType6 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced6 = +data7;
}
else {
validate129.errors = [{instancePath:instancePath+"/items/" + i0+"/moment",schemaPath:"node#/definitions/UserListItemInfo/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data7 = coerced6;
if(data4 !== undefined){
data4["moment"] = coerced6;
}
}
}
var valid3 = _errs18 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
else {
validate129.errors = [{instancePath:instancePath+"/items/" + i0,schemaPath:"node#/definitions/UserListItemInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs10 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data8 = data.total;
const _errs20 = errors;
if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data8 === null
              || (dataType7 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced7 = +data8;
}
else {
validate129.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data !== undefined){
data["total"] = coerced7;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInPast !== undefined){
let data9 = data.totalInPast;
const _errs22 = errors;
if(!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))){
let dataType8 = typeof data9;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType8 = typeof data9;
if(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))){
coerced8 = data9;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data9 === null
              || (dataType8 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced8 = +data9;
}
else {
validate129.errors = [{instancePath:instancePath+"/totalInPast",schemaPath:"#/properties/totalInPast/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data9 = coerced8;
if(data !== undefined){
data["totalInPast"] = coerced8;
}
}
}
var valid0 = _errs22 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInFuture !== undefined){
let data10 = data.totalInFuture;
const _errs24 = errors;
if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10))){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data10 === null
              || (dataType9 === "string" && data10 && data10 == +data10 && !(data10 % 1))){
coerced9 = +data10;
}
else {
validate129.errors = [{instancePath:instancePath+"/totalInFuture",schemaPath:"#/properties/totalInFuture/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data !== undefined){
data["totalInFuture"] = coerced9;
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate129.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate129.errors = vErrors;
return errors === 0;
}

export const WhoAmI = validate130;
const schema152 = {"type":"object","properties":{"nodeName":{"type":"string","nullable":true},"nodeNameChanging":{"type":"boolean","nullable":true},"fullName":{"type":"string","nullable":true},"gender":{"type":"string","nullable":true},"title":{"type":"string","nullable":true},"avatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"frozen":{"type":"boolean","nullable":true}},"additionalProperties":false};

function validate130(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "nodeName") || (key0 === "nodeNameChanging")) || (key0 === "fullName")) || (key0 === "gender")) || (key0 === "title")) || (key0 === "avatar")) || (key0 === "frozen"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeName !== undefined){
let data0 = data.nodeName;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeNameChanging !== undefined){
let data1 = data.nodeNameChanging;
const _errs5 = errors;
if((typeof data1 !== "boolean") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "boolean") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "false" || data1 === 0 || data1 === null){
coerced1 = false;
}
else if(data1 === "true" || data1 === 1){
coerced1 = true;
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/nodeNameChanging",schemaPath:"#/properties/nodeNameChanging/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["nodeNameChanging"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.fullName !== undefined){
let data2 = data.fullName;
const _errs8 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/fullName",schemaPath:"#/properties/fullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["fullName"] = coerced2;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.gender !== undefined){
let data3 = data.gender;
const _errs11 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/gender",schemaPath:"#/properties/gender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["gender"] = coerced3;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data4 = data.title;
const _errs14 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["title"] = coerced4;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.avatar !== undefined){
let data5 = data.avatar;
const _errs17 = errors;
const _errs18 = errors;
let valid1 = false;
const _errs19 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["avatar"] = coerced5;
}
}
}
const _errs20 = errors;
if(errors === _errs20){
if(data5 && typeof data5 == "object" && !Array.isArray(data5)){
let missing0;
if(((data5.mediaId === undefined) && (missing0 = "mediaId")) || ((data5.path === undefined) && (missing0 = "path"))){
const err1 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs22 = errors;
for(const key1 in data5){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data5[key1];
}
}
if(_errs22 === errors){
if(data5.mediaId !== undefined){
let data6 = data5.mediaId;
const _errs23 = errors;
if(typeof data6 !== "string"){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(typeof data6 === "string"){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else {
const err2 = {instancePath:instancePath+"/avatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data5 !== undefined){
data5["mediaId"] = coerced6;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.path !== undefined){
let data7 = data5.path;
const _errs25 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
const err3 = {instancePath:instancePath+"/avatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data5 !== undefined){
data5["path"] = coerced7;
}
}
}
var valid3 = _errs25 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.width !== undefined){
let data8 = data5.width;
const _errs27 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err4 = {instancePath:instancePath+"/avatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data5 !== undefined){
data5["width"] = coerced8;
}
}
}
var valid3 = _errs27 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.height !== undefined){
let data9 = data5.height;
const _errs30 = errors;
if((!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))) && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))) && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data9 === null
              || (dataType9 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced9 = +data9;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err5 = {instancePath:instancePath+"/avatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data5 !== undefined){
data5["height"] = coerced9;
}
}
}
var valid3 = _errs30 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.shape !== undefined){
let data10 = data5.shape;
const _errs33 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err6 = {instancePath:instancePath+"/avatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data5 !== undefined){
data5["shape"] = coerced10;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/avatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs19 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs38 = errors;
if(data5 !== null){
let dataType11 = typeof data5;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType11 = typeof data5;
if(data5 === null){
coerced11 = data5;
}
}
if(!(coerced11 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced11 = null;
}
else {
const err8 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced11 !== undefined){
data5 = coerced11;
if(data !== undefined){
data["avatar"] = coerced11;
}
}
}
var _valid0 = _errs38 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/avatar",schemaPath:"#/properties/avatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate130.errors = vErrors;
return false;
}
else {
errors = _errs18;
if(vErrors !== null){
if(_errs18){
vErrors.length = _errs18;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.frozen !== undefined){
let data11 = data.frozen;
const _errs40 = errors;
if((typeof data11 !== "boolean") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "boolean") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(data11 === "false" || data11 === 0 || data11 === null){
coerced12 = false;
}
else if(data11 === "true" || data11 === 1){
coerced12 = true;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
validate130.errors = [{instancePath:instancePath+"/frozen",schemaPath:"#/properties/frozen/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["frozen"] = coerced12;
}
}
}
var valid0 = _errs40 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate130.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate130.errors = vErrors;
return errors === 0;
}

export const ActivityReactionInfo = validate131;
const schema154 = {"type":"object","properties":{"remoteNodeName":{"type":"string"},"remoteFullName":{"type":"string","nullable":true},"remoteAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"remotePostingId":{"type":"string"},"negative":{"type":"boolean"},"emoji":{"type":"integer"},"createdAt":{"type":"integer"}},"required":["remoteNodeName","remotePostingId","negative","emoji","createdAt"],"additionalProperties":false};

function validate131(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((data.remoteNodeName === undefined) && (missing0 = "remoteNodeName")) || ((data.remotePostingId === undefined) && (missing0 = "remotePostingId"))) || ((data.negative === undefined) && (missing0 = "negative"))) || ((data.emoji === undefined) && (missing0 = "emoji"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate131.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((((key0 === "remoteNodeName") || (key0 === "remoteFullName")) || (key0 === "remoteAvatar")) || (key0 === "remotePostingId")) || (key0 === "negative")) || (key0 === "emoji")) || (key0 === "createdAt"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.remoteNodeName !== undefined){
let data0 = data.remoteNodeName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate131.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["remoteNodeName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteFullName !== undefined){
let data1 = data.remoteFullName;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate131.errors = [{instancePath:instancePath+"/remoteFullName",schemaPath:"#/properties/remoteFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["remoteFullName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteAvatar !== undefined){
let data2 = data.remoteAvatar;
const _errs7 = errors;
const _errs8 = errors;
let valid1 = false;
const _errs9 = errors;
if((!(data2 && typeof data2 == "object" && !Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((data2 && typeof data2 == "object" && !Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
const err0 = {instancePath:instancePath+"/remoteAvatar",schemaPath:"#/properties/remoteAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["remoteAvatar"] = coerced2;
}
}
}
const _errs10 = errors;
if(errors === _errs10){
if(data2 && typeof data2 == "object" && !Array.isArray(data2)){
let missing1;
if(((data2.mediaId === undefined) && (missing1 = "mediaId")) || ((data2.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/remoteAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs12 = errors;
for(const key1 in data2){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data2[key1];
}
}
if(_errs12 === errors){
if(data2.mediaId !== undefined){
let data3 = data2.mediaId;
const _errs13 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
const err2 = {instancePath:instancePath+"/remoteAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data2 !== undefined){
data2["mediaId"] = coerced3;
}
}
}
var valid3 = _errs13 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.path !== undefined){
let data4 = data2.path;
const _errs15 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
const err3 = {instancePath:instancePath+"/remoteAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data2 !== undefined){
data2["path"] = coerced4;
}
}
}
var valid3 = _errs15 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.width !== undefined){
let data5 = data2.width;
const _errs17 = errors;
if((!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data5 === null
              || (dataType5 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced5 = +data5;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err4 = {instancePath:instancePath+"/remoteAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data2 !== undefined){
data2["width"] = coerced5;
}
}
}
var valid3 = _errs17 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.height !== undefined){
let data6 = data2.height;
const _errs20 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err5 = {instancePath:instancePath+"/remoteAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data2 !== undefined){
data2["height"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data2.shape !== undefined){
let data7 = data2.shape;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err6 = {instancePath:instancePath+"/remoteAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data2 !== undefined){
data2["shape"] = coerced7;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/remoteAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs9 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs28 = errors;
if(data2 !== null){
let dataType8 = typeof data2;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType8 = typeof data2;
if(data2 === null){
coerced8 = data2;
}
}
if(!(coerced8 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced8 = null;
}
else {
const err8 = {instancePath:instancePath+"/remoteAvatar",schemaPath:"#/properties/remoteAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced8 !== undefined){
data2 = coerced8;
if(data !== undefined){
data["remoteAvatar"] = coerced8;
}
}
}
var _valid0 = _errs28 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/remoteAvatar",schemaPath:"#/properties/remoteAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate131.errors = vErrors;
return false;
}
else {
errors = _errs8;
if(vErrors !== null){
if(_errs8){
vErrors.length = _errs8;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingId !== undefined){
let data8 = data.remotePostingId;
const _errs30 = errors;
if(typeof data8 !== "string"){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if(typeof data8 === "string"){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data8;
}
else if(data8 === null){
coerced9 = "";
}
else {
validate131.errors = [{instancePath:instancePath+"/remotePostingId",schemaPath:"#/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data !== undefined){
data["remotePostingId"] = coerced9;
}
}
}
var valid0 = _errs30 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.negative !== undefined){
let data9 = data.negative;
const _errs32 = errors;
if(typeof data9 !== "boolean"){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if(typeof data9 === "boolean"){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(data9 === "false" || data9 === 0 || data9 === null){
coerced10 = false;
}
else if(data9 === "true" || data9 === 1){
coerced10 = true;
}
else {
validate131.errors = [{instancePath:instancePath+"/negative",schemaPath:"#/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["negative"] = coerced10;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.emoji !== undefined){
let data10 = data.emoji;
const _errs34 = errors;
if(!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10))){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data10 === null
              || (dataType11 === "string" && data10 && data10 == +data10 && !(data10 % 1))){
coerced11 = +data10;
}
else {
validate131.errors = [{instancePath:instancePath+"/emoji",schemaPath:"#/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["emoji"] = coerced11;
}
}
}
var valid0 = _errs34 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data11 = data.createdAt;
const _errs36 = errors;
if(!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11))){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 === "boolean" || data11 === null
              || (dataType12 === "string" && data11 && data11 == +data11 && !(data11 % 1))){
coerced12 = +data11;
}
else {
validate131.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["createdAt"] = coerced12;
}
}
}
var valid0 = _errs36 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate131.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate131.errors = vErrors;
return errors === 0;
}

export const ActivityReactionInfoArray = validate132;
const schema156 = {"type":"array","items":{"$ref":"node#/definitions/ActivityReactionInfo"}};

function validate132(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate132.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate131(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate131.errors : vErrors.concat(validate131.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate132.errors = vErrors;
return errors === 0;
}

export const BlockedByUserInfo = validate134;
const schema157 = {"type":"object","properties":{"id":{"type":"string"},"blockedOperation":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"nodeName":{"type":"string"},"postingId":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true},"reason":{"type":"string","nullable":true}},"required":["id","blockedOperation","nodeName","createdAt"],"additionalProperties":false};

function validate134(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.blockedOperation === undefined) && (missing0 = "blockedOperation"))) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate134.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((((key0 === "id") || (key0 === "blockedOperation")) || (key0 === "contact")) || (key0 === "nodeName")) || (key0 === "postingId")) || (key0 === "createdAt")) || (key0 === "deadline")) || (key0 === "reason"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate134.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedOperation !== undefined){
let data1 = data.blockedOperation;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate134.errors = [{instancePath:instancePath+"/blockedOperation",schemaPath:"#/properties/blockedOperation/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["blockedOperation"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data2 = data.contact;
const _errs6 = errors;
const _errs7 = errors;
let valid1 = false;
const _errs8 = errors;
if((!(data2 && typeof data2 == "object" && !Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((data2 && typeof data2 == "object" && !Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["contact"] = coerced2;
}
}
}
if(!(validate41(data2, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs8 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs11 = errors;
if(data2 !== null){
let dataType3 = typeof data2;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType3 = typeof data2;
if(data2 === null){
coerced3 = data2;
}
}
if(!(coerced3 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced3 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced3 !== undefined){
data2 = coerced3;
if(data !== undefined){
data["contact"] = coerced3;
}
}
}
var _valid0 = _errs11 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate134.errors = vErrors;
return false;
}
else {
errors = _errs7;
if(vErrors !== null){
if(_errs7){
vErrors.length = _errs7;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data3 = data.nodeName;
const _errs13 = errors;
if(typeof data3 !== "string"){
let dataType4 = typeof data3;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType4 = typeof data3;
if(typeof data3 === "string"){
coerced4 = data3;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data3;
}
else if(data3 === null){
coerced4 = "";
}
else {
validate134.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data3 = coerced4;
if(data !== undefined){
data["nodeName"] = coerced4;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data4 = data.postingId;
const _errs15 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data4;
}
else if(data4 === null){
coerced5 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced5 = null;
}
else {
validate134.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data !== undefined){
data["postingId"] = coerced5;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data5 = data.createdAt;
const _errs18 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType6 = typeof data5;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType6 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced6 = data5;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data5 === null
              || (dataType6 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced6 = +data5;
}
else {
validate134.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data5 = coerced6;
if(data !== undefined){
data["createdAt"] = coerced6;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data6 = data.deadline;
const _errs20 = errors;
if((!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) && (data6 !== null)){
let dataType7 = typeof data6;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType7 = typeof data6;
if((((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))) && (data6 === null)){
coerced7 = data6;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data6 === null
              || (dataType7 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced7 = +data6;
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced7 = null;
}
else {
validate134.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data !== undefined){
data["deadline"] = coerced7;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reason !== undefined){
let data7 = data.reason;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType8 = typeof data7;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType8 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced8 = data7;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data7;
}
else if(data7 === null){
coerced8 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced8 = null;
}
else {
validate134.errors = [{instancePath:instancePath+"/reason",schemaPath:"#/properties/reason/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data !== undefined){
data["reason"] = coerced8;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
else {
validate134.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate134.errors = vErrors;
return errors === 0;
}

export const BlockedByUserInfoArray = validate136;
const schema158 = {"type":"array","items":{"$ref":"node#/definitions/BlockedByUserInfo"}};

function validate136(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate136.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate134(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate134.errors : vErrors.concat(validate134.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate136.errors = vErrors;
return errors === 0;
}

export const BlockedUserInfo = validate138;
const schema159 = {"type":"object","properties":{"id":{"type":"string"},"blockedOperation":{"type":"string"},"nodeName":{"type":"string"},"contact":{"anyOf":[{"$ref":"node#/definitions/ContactInfo","type":"object","nullable":true},{"type":"null"}]},"entryId":{"type":"string","nullable":true},"entryNodeName":{"type":"string","nullable":true},"entryPostingId":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true},"reasonSrc":{"type":"string","nullable":true},"reasonSrcFormat":{"type":"string","nullable":true},"reason":{"type":"string","nullable":true}},"required":["id","blockedOperation","nodeName","createdAt"],"additionalProperties":false};

function validate138(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((data.id === undefined) && (missing0 = "id")) || ((data.blockedOperation === undefined) && (missing0 = "blockedOperation"))) || ((data.nodeName === undefined) && (missing0 = "nodeName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate138.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema159.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate138.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedOperation !== undefined){
let data1 = data.blockedOperation;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate138.errors = [{instancePath:instancePath+"/blockedOperation",schemaPath:"#/properties/blockedOperation/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["blockedOperation"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.nodeName !== undefined){
let data2 = data.nodeName;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate138.errors = [{instancePath:instancePath+"/nodeName",schemaPath:"#/properties/nodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["nodeName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.contact !== undefined){
let data3 = data.contact;
const _errs8 = errors;
const _errs9 = errors;
let valid1 = false;
const _errs10 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err0 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["contact"] = coerced3;
}
}
}
if(!(validate41(data3, {instancePath:instancePath+"/contact",parentData:data,parentDataProperty:"contact",rootData}))){
vErrors = vErrors === null ? validate41.errors : vErrors.concat(validate41.errors);
errors = vErrors.length;
}
var _valid0 = _errs10 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs13 = errors;
if(data3 !== null){
let dataType4 = typeof data3;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType4 = typeof data3;
if(data3 === null){
coerced4 = data3;
}
}
if(!(coerced4 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced4 = null;
}
else {
const err1 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced4 !== undefined){
data3 = coerced4;
if(data !== undefined){
data["contact"] = coerced4;
}
}
}
var _valid0 = _errs13 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate138.errors = vErrors;
return false;
}
else {
errors = _errs9;
if(vErrors !== null){
if(_errs9){
vErrors.length = _errs9;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.entryId !== undefined){
let data4 = data.entryId;
const _errs15 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data4;
}
else if(data4 === null){
coerced5 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced5 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/entryId",schemaPath:"#/properties/entryId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data !== undefined){
data["entryId"] = coerced5;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.entryNodeName !== undefined){
let data5 = data.entryNodeName;
const _errs18 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType6 = typeof data5;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType6 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced6 = data5;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data5;
}
else if(data5 === null){
coerced6 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced6 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/entryNodeName",schemaPath:"#/properties/entryNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data5 = coerced6;
if(data !== undefined){
data["entryNodeName"] = coerced6;
}
}
}
var valid0 = _errs18 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.entryPostingId !== undefined){
let data6 = data.entryPostingId;
const _errs21 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType7 = typeof data6;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType7 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced7 = data6;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data6;
}
else if(data6 === null){
coerced7 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced7 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/entryPostingId",schemaPath:"#/properties/entryPostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data !== undefined){
data["entryPostingId"] = coerced7;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data7 = data.createdAt;
const _errs24 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType8 = typeof data7;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType8 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced8 = data7;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data7 === null
              || (dataType8 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced8 = +data7;
}
else {
validate138.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data !== undefined){
data["createdAt"] = coerced8;
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data8 = data.deadline;
const _errs26 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data8 === null
              || (dataType9 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced9 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced9 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data !== undefined){
data["deadline"] = coerced9;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonSrc !== undefined){
let data9 = data.reasonSrc;
const _errs29 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data9;
}
else if(data9 === null){
coerced10 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced10 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/reasonSrc",schemaPath:"#/properties/reasonSrc/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["reasonSrc"] = coerced10;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reasonSrcFormat !== undefined){
let data10 = data.reasonSrcFormat;
const _errs32 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data10;
}
else if(data10 === null){
coerced11 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced11 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/reasonSrcFormat",schemaPath:"#/properties/reasonSrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["reasonSrcFormat"] = coerced11;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reason !== undefined){
let data11 = data.reason;
const _errs35 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data11;
}
else if(data11 === null){
coerced12 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced12 = null;
}
else {
validate138.errors = [{instancePath:instancePath+"/reason",schemaPath:"#/properties/reason/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["reason"] = coerced12;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate138.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate138.errors = vErrors;
return errors === 0;
}

export const BlockedUserInfoArray = validate140;
const schema160 = {"type":"array","items":{"$ref":"node#/definitions/BlockedUserInfo"}};

function validate140(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate140.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate138(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate138.errors : vErrors.concat(validate138.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate140.errors = vErrors;
return errors === 0;
}

export const Body = validate142;
const schema161 = {"type":"object","properties":{"subject":{"type":"string","nullable":true},"text":{"type":"string","nullable":true},"linkPreviews":{"type":"array","items":{"$ref":"node#/definitions/LinkPreview"},"nullable":true}},"additionalProperties":false};

function validate142(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "subject") || (key0 === "text")) || (key0 === "linkPreviews"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.subject !== undefined){
let data0 = data.subject;
const _errs2 = errors;
if((typeof data0 !== "string") && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((typeof data0 === "string") && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/subject",schemaPath:"#/properties/subject/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["subject"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.text !== undefined){
let data1 = data.text;
const _errs5 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/text",schemaPath:"#/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["text"] = coerced1;
}
}
}
var valid0 = _errs5 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.linkPreviews !== undefined){
let data2 = data.linkPreviews;
const _errs8 = errors;
if((!(Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews",schemaPath:"#/properties/linkPreviews/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["linkPreviews"] = coerced2;
}
}
}
if(errors === _errs8){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
let data3 = data2[i0];
const _errs11 = errors;
const _errs12 = errors;
if(errors === _errs12){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
const _errs14 = errors;
for(const key1 in data3){
if(!(((((key1 === "siteName") || (key1 === "url")) || (key1 === "title")) || (key1 === "description")) || (key1 === "imageHash"))){
delete data3[key1];
}
}
if(_errs14 === errors){
if(data3.siteName !== undefined){
let data4 = data3.siteName;
const _errs15 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data4;
}
else if(data4 === null){
coerced3 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced3 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0+"/siteName",schemaPath:"node#/definitions/LinkPreview/properties/siteName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data3 !== undefined){
data3["siteName"] = coerced3;
}
}
}
var valid3 = _errs15 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.url !== undefined){
let data5 = data3.url;
const _errs18 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data5;
}
else if(data5 === null){
coerced4 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced4 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0+"/url",schemaPath:"node#/definitions/LinkPreview/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data3 !== undefined){
data3["url"] = coerced4;
}
}
}
var valid3 = _errs18 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.title !== undefined){
let data6 = data3.title;
const _errs21 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data6;
}
else if(data6 === null){
coerced5 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced5 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0+"/title",schemaPath:"node#/definitions/LinkPreview/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data3 !== undefined){
data3["title"] = coerced5;
}
}
}
var valid3 = _errs21 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.description !== undefined){
let data7 = data3.description;
const _errs24 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType6 = typeof data7;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType6 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced6 = data7;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data7;
}
else if(data7 === null){
coerced6 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced6 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0+"/description",schemaPath:"node#/definitions/LinkPreview/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data7 = coerced6;
if(data3 !== undefined){
data3["description"] = coerced6;
}
}
}
var valid3 = _errs24 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data3.imageHash !== undefined){
let data8 = data3.imageHash;
const _errs27 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data8;
}
else if(data8 === null){
coerced7 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced7 = null;
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0+"/imageHash",schemaPath:"node#/definitions/LinkPreview/properties/imageHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data3 !== undefined){
data3["imageHash"] = coerced7;
}
}
}
var valid3 = _errs27 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
else {
validate142.errors = [{instancePath:instancePath+"/linkPreviews/" + i0,schemaPath:"node#/definitions/LinkPreview/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid1 = _errs11 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate142.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate142.errors = vErrors;
return errors === 0;
}

export const CommentRevisionInfo = validate143;
const schema163 = {"type":"object","properties":{"id":{"type":"string"},"postingRevisionId":{"type":"string"},"bodyPreview":{"type":"string","nullable":true},"bodySrcHash":{"type":"string"},"bodySrcFormat":{"type":"string","nullable":true},"body":{"type":"string"},"bodyFormat":{"type":"string","nullable":true},"heading":{"type":"string"},"createdAt":{"type":"integer"},"deletedAt":{"type":"integer","nullable":true},"deadline":{"type":"integer","nullable":true},"digest":{"type":"string","nullable":true},"signature":{"type":"string","nullable":true},"signatureVersion":{"type":"integer","nullable":true},"clientReaction":{"anyOf":[{"$ref":"node#/definitions/ClientReactionInfo","type":"object","nullable":true},{"type":"null"}]},"reactions":{"anyOf":[{"$ref":"node#/definitions/ReactionTotalsInfo","type":"object","nullable":true},{"type":"null"}]}},"required":["id","postingRevisionId","bodySrcHash","body","heading","createdAt"],"additionalProperties":false};

function validate143(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.id === undefined) && (missing0 = "id")) || ((data.postingRevisionId === undefined) && (missing0 = "postingRevisionId"))) || ((data.bodySrcHash === undefined) && (missing0 = "bodySrcHash"))) || ((data.body === undefined) && (missing0 = "body"))) || ((data.heading === undefined) && (missing0 = "heading"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate143.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema163.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate143.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingRevisionId !== undefined){
let data1 = data.postingRevisionId;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate143.errors = [{instancePath:instancePath+"/postingRevisionId",schemaPath:"#/properties/postingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["postingRevisionId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyPreview !== undefined){
let data2 = data.bodyPreview;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/bodyPreview",schemaPath:"#/properties/bodyPreview/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["bodyPreview"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcHash !== undefined){
let data3 = data.bodySrcHash;
const _errs9 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate143.errors = [{instancePath:instancePath+"/bodySrcHash",schemaPath:"#/properties/bodySrcHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["bodySrcHash"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcFormat !== undefined){
let data4 = data.bodySrcFormat;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/bodySrcFormat",schemaPath:"#/properties/bodySrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["bodySrcFormat"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.body !== undefined){
let data5 = data.body;
const _errs14 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate143.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["body"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyFormat !== undefined){
let data6 = data.bodyFormat;
const _errs16 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/bodyFormat",schemaPath:"#/properties/bodyFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["bodyFormat"] = coerced6;
}
}
}
var valid0 = _errs16 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data7 = data.heading;
const _errs19 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
validate143.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["heading"] = coerced7;
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data8 = data.createdAt;
const _errs21 = errors;
if(!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else {
validate143.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["createdAt"] = coerced8;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deletedAt !== undefined){
let data9 = data.deletedAt;
const _errs23 = errors;
if((!(((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9)))) && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((((typeof data9 == "number") && (!(data9 % 1) && !isNaN(data9))) && (isFinite(data9))) && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "boolean" || data9 === null
              || (dataType9 === "string" && data9 && data9 == +data9 && !(data9 % 1))){
coerced9 = +data9;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/deletedAt",schemaPath:"#/properties/deletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["deletedAt"] = coerced9;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data10 = data.deadline;
const _errs26 = errors;
if((!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))) && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10))) && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "boolean" || data10 === null
              || (dataType10 === "string" && data10 && data10 == +data10 && !(data10 % 1))){
coerced10 = +data10;
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["deadline"] = coerced10;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data11 = data.digest;
const _errs29 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data !== undefined){
data["digest"] = coerced11;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data12 = data.signature;
const _errs32 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data !== undefined){
data["signature"] = coerced12;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data13 = data.signatureVersion;
const _errs35 = errors;
if((!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))) && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13))) && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 === "boolean" || data13 === null
              || (dataType13 === "string" && data13 && data13 == +data13 && !(data13 % 1))){
coerced13 = +data13;
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
validate143.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["signatureVersion"] = coerced13;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientReaction !== undefined){
let data14 = data.clientReaction;
const _errs38 = errors;
const _errs39 = errors;
let valid1 = false;
const _errs40 = errors;
if((!(data14 && typeof data14 == "object" && !Array.isArray(data14))) && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((data14 && typeof data14 == "object" && !Array.isArray(data14)) && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
const err0 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["clientReaction"] = coerced14;
}
}
}
const _errs41 = errors;
if(errors === _errs41){
if(data14 && typeof data14 == "object" && !Array.isArray(data14)){
let missing1;
if((((data14.negative === undefined) && (missing1 = "negative")) || ((data14.emoji === undefined) && (missing1 = "emoji"))) || ((data14.createdAt === undefined) && (missing1 = "createdAt"))){
const err1 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs43 = errors;
for(const key1 in data14){
if(!((((key1 === "negative") || (key1 === "emoji")) || (key1 === "createdAt")) || (key1 === "deadline"))){
delete data14[key1];
}
}
if(_errs43 === errors){
if(data14.negative !== undefined){
let data15 = data14.negative;
const _errs44 = errors;
if(typeof data15 !== "boolean"){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if(typeof data15 === "boolean"){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(data15 === "false" || data15 === 0 || data15 === null){
coerced15 = false;
}
else if(data15 === "true" || data15 === 1){
coerced15 = true;
}
else {
const err2 = {instancePath:instancePath+"/clientReaction/negative",schemaPath:"node#/definitions/ClientReactionInfo/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data14 !== undefined){
data14["negative"] = coerced15;
}
}
}
var valid3 = _errs44 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data14.emoji !== undefined){
let data16 = data14.emoji;
const _errs46 = errors;
if(!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16))){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "boolean" || data16 === null
              || (dataType16 === "string" && data16 && data16 == +data16 && !(data16 % 1))){
coerced16 = +data16;
}
else {
const err3 = {instancePath:instancePath+"/clientReaction/emoji",schemaPath:"node#/definitions/ClientReactionInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data14 !== undefined){
data14["emoji"] = coerced16;
}
}
}
var valid3 = _errs46 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data14.createdAt !== undefined){
let data17 = data14.createdAt;
const _errs48 = errors;
if(!(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if(((typeof data17 == "number") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17))){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 === "boolean" || data17 === null
              || (dataType17 === "string" && data17 && data17 == +data17 && !(data17 % 1))){
coerced17 = +data17;
}
else {
const err4 = {instancePath:instancePath+"/clientReaction/createdAt",schemaPath:"node#/definitions/ClientReactionInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data14 !== undefined){
data14["createdAt"] = coerced17;
}
}
}
var valid3 = _errs48 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data14.deadline !== undefined){
let data18 = data14.deadline;
const _errs50 = errors;
if((!(((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))) && (data18 !== null)){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if((((typeof data18 == "number") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18))) && (data18 === null)){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 === "boolean" || data18 === null
              || (dataType18 === "string" && data18 && data18 == +data18 && !(data18 % 1))){
coerced18 = +data18;
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced18 = null;
}
else {
const err5 = {instancePath:instancePath+"/clientReaction/deadline",schemaPath:"node#/definitions/ClientReactionInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data14 !== undefined){
data14["deadline"] = coerced18;
}
}
}
var valid3 = _errs50 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
else {
const err6 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
var _valid0 = _errs40 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs55 = errors;
if(data14 !== null){
let dataType19 = typeof data14;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType19 = typeof data14;
if(data14 === null){
coerced19 = data14;
}
}
if(!(coerced19 !== undefined)){
if(data14 === "" || data14 === 0 || data14 === false){
coerced19 = null;
}
else {
const err7 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced19 !== undefined){
data14 = coerced19;
if(data !== undefined){
data["clientReaction"] = coerced19;
}
}
}
var _valid0 = _errs55 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err8 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
validate143.errors = vErrors;
return false;
}
else {
errors = _errs39;
if(vErrors !== null){
if(_errs39){
vErrors.length = _errs39;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs38 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data19 = data.reactions;
const _errs57 = errors;
const _errs58 = errors;
let valid4 = false;
const _errs59 = errors;
if((!(data19 && typeof data19 == "object" && !Array.isArray(data19))) && (data19 !== null)){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if((data19 && typeof data19 == "object" && !Array.isArray(data19)) && (data19 === null)){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(data19 === "" || data19 === 0 || data19 === false){
coerced20 = null;
}
else {
const err9 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data !== undefined){
data["reactions"] = coerced20;
}
}
}
if(!(validate90(data19, {instancePath:instancePath+"/reactions",parentData:data,parentDataProperty:"reactions",rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var _valid1 = _errs59 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs62 = errors;
if(data19 !== null){
let dataType21 = typeof data19;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType21 = typeof data19;
if(data19 === null){
coerced21 = data19;
}
}
if(!(coerced21 !== undefined)){
if(data19 === "" || data19 === 0 || data19 === false){
coerced21 = null;
}
else {
const err10 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced21 !== undefined){
data19 = coerced21;
if(data !== undefined){
data["reactions"] = coerced21;
}
}
}
var _valid1 = _errs62 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err11 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
validate143.errors = vErrors;
return false;
}
else {
errors = _errs58;
if(vErrors !== null){
if(_errs58){
vErrors.length = _errs58;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs57 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate143.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate143.errors = vErrors;
return errors === 0;
}

export const CommentRevisionInfoArray = validate145;
const schema165 = {"type":"array","items":{"$ref":"node#/definitions/CommentRevisionInfo"}};

function validate145(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate145.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate143(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate143.errors : vErrors.concat(validate143.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate145.errors = vErrors;
return errors === 0;
}

export const Features = validate147;
const schema166 = {"type":"object","properties":{"posting":{"$ref":"node#/definitions/PostingFeatures"},"plugins":{"type":"array","items":{"type":"string"},"nullable":true},"feedWidth":{"type":"integer"},"friendGroups":{"anyOf":[{"$ref":"node#/definitions/FriendGroupsFeatures","type":"object","nullable":true},{"type":"null"}]},"ask":{"type":"array","items":{"type":"string"},"nullable":true},"subscribed":{"type":"boolean","nullable":true}},"required":["posting","feedWidth"],"additionalProperties":false};

function validate147(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.posting === undefined) && (missing0 = "posting")) || ((data.feedWidth === undefined) && (missing0 = "feedWidth"))){
validate147.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "posting") || (key0 === "plugins")) || (key0 === "feedWidth")) || (key0 === "friendGroups")) || (key0 === "ask")) || (key0 === "subscribed"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.posting !== undefined){
let data0 = data.posting;
const _errs2 = errors;
const _errs3 = errors;
if(errors === _errs3){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
let missing1;
if(((((((data0.subjectPresent === undefined) && (missing1 = "subjectPresent")) || ((data0.sourceFormats === undefined) && (missing1 = "sourceFormats"))) || ((data0.mediaMaxSize === undefined) && (missing1 = "mediaMaxSize"))) || ((data0.imageRecommendedSize === undefined) && (missing1 = "imageRecommendedSize"))) || ((data0.imageRecommendedPixels === undefined) && (missing1 = "imageRecommendedPixels"))) || ((data0.imageFormats === undefined) && (missing1 = "imageFormats"))){
validate147.errors = [{instancePath:instancePath+"/posting",schemaPath:"node#/definitions/PostingFeatures/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs5 = errors;
for(const key1 in data0){
if(!(((((((key1 === "post") || (key1 === "subjectPresent")) || (key1 === "sourceFormats")) || (key1 === "mediaMaxSize")) || (key1 === "imageRecommendedSize")) || (key1 === "imageRecommendedPixels")) || (key1 === "imageFormats"))){
delete data0[key1];
}
}
if(_errs5 === errors){
if(data0.post !== undefined){
let data1 = data0.post;
const _errs6 = errors;
if((typeof data1 !== "boolean") && (data1 !== null)){
let dataType0 = typeof data1;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType0 = typeof data1;
if((typeof data1 === "boolean") && (data1 === null)){
coerced0 = data1;
}
}
if(!(coerced0 !== undefined)){
if(data1 === "false" || data1 === 0 || data1 === null){
coerced0 = false;
}
else if(data1 === "true" || data1 === 1){
coerced0 = true;
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced0 = null;
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/post",schemaPath:"node#/definitions/PostingFeatures/properties/post/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced0 !== undefined){
data1 = coerced0;
if(data0 !== undefined){
data0["post"] = coerced0;
}
}
}
var valid2 = _errs6 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.subjectPresent !== undefined){
let data2 = data0.subjectPresent;
const _errs9 = errors;
if(typeof data2 !== "boolean"){
let dataType1 = typeof data2;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType1 = typeof data2;
if(typeof data2 === "boolean"){
coerced1 = data2;
}
}
if(!(coerced1 !== undefined)){
if(data2 === "false" || data2 === 0 || data2 === null){
coerced1 = false;
}
else if(data2 === "true" || data2 === 1){
coerced1 = true;
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/subjectPresent",schemaPath:"node#/definitions/PostingFeatures/properties/subjectPresent/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced1 !== undefined){
data2 = coerced1;
if(data0 !== undefined){
data0["subjectPresent"] = coerced1;
}
}
}
var valid2 = _errs9 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.sourceFormats !== undefined){
let data3 = data0.sourceFormats;
const _errs11 = errors;
if(!(Array.isArray(data3))){
let dataType2 = typeof data3;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType2 = typeof data3;
if(Array.isArray(data3)){
coerced2 = data3;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data3 === null){
coerced2 = [data3];
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/sourceFormats",schemaPath:"node#/definitions/PostingFeatures/properties/sourceFormats/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data3 = coerced2;
if(data0 !== undefined){
data0["sourceFormats"] = coerced2;
}
}
}
if(errors === _errs11){
if(Array.isArray(data3)){
var valid3 = true;
const len0 = data3.length;
for(let i0=0; i0<len0; i0++){
let data4 = data3[i0];
const _errs13 = errors;
if(typeof data4 !== "string"){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if(typeof data4 === "string"){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data4;
}
else if(data4 === null){
coerced3 = "";
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/sourceFormats/" + i0,schemaPath:"node#/definitions/PostingFeatures/properties/sourceFormats/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data3 !== undefined){
data3[i0] = coerced3;
}
}
}
var valid3 = _errs13 === errors;
if(!valid3){
break;
}
}
}
}
var valid2 = _errs11 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.mediaMaxSize !== undefined){
let data5 = data0.mediaMaxSize;
const _errs15 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data5 === null
              || (dataType4 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced4 = +data5;
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/mediaMaxSize",schemaPath:"node#/definitions/PostingFeatures/properties/mediaMaxSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data0 !== undefined){
data0["mediaMaxSize"] = coerced4;
}
}
}
var valid2 = _errs15 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.imageRecommendedSize !== undefined){
let data6 = data0.imageRecommendedSize;
const _errs17 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data6 === null
              || (dataType5 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced5 = +data6;
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/imageRecommendedSize",schemaPath:"node#/definitions/PostingFeatures/properties/imageRecommendedSize/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data0 !== undefined){
data0["imageRecommendedSize"] = coerced5;
}
}
}
var valid2 = _errs17 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.imageRecommendedPixels !== undefined){
let data7 = data0.imageRecommendedPixels;
const _errs19 = errors;
if(!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))){
let dataType6 = typeof data7;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType6 = typeof data7;
if(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))){
coerced6 = data7;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data7 === null
              || (dataType6 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced6 = +data7;
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/imageRecommendedPixels",schemaPath:"node#/definitions/PostingFeatures/properties/imageRecommendedPixels/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data7 = coerced6;
if(data0 !== undefined){
data0["imageRecommendedPixels"] = coerced6;
}
}
}
var valid2 = _errs19 === errors;
}
else {
var valid2 = true;
}
if(valid2){
if(data0.imageFormats !== undefined){
let data8 = data0.imageFormats;
const _errs21 = errors;
if(!(Array.isArray(data8))){
let dataType7 = typeof data8;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType7 = typeof data8;
if(Array.isArray(data8)){
coerced7 = data8;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "string" || dataType7 === "number"
              || dataType7 === "boolean" || data8 === null){
coerced7 = [data8];
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/imageFormats",schemaPath:"node#/definitions/PostingFeatures/properties/imageFormats/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced7 !== undefined){
data8 = coerced7;
if(data0 !== undefined){
data0["imageFormats"] = coerced7;
}
}
}
if(errors === _errs21){
if(Array.isArray(data8)){
var valid4 = true;
const len1 = data8.length;
for(let i1=0; i1<len1; i1++){
let data9 = data8[i1];
const _errs23 = errors;
if(typeof data9 !== "string"){
let dataType8 = typeof data9;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType8 = typeof data9;
if(typeof data9 === "string"){
coerced8 = data9;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data9;
}
else if(data9 === null){
coerced8 = "";
}
else {
validate147.errors = [{instancePath:instancePath+"/posting/imageFormats/" + i1,schemaPath:"node#/definitions/PostingFeatures/properties/imageFormats/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data9 = coerced8;
if(data8 !== undefined){
data8[i1] = coerced8;
}
}
}
var valid4 = _errs23 === errors;
if(!valid4){
break;
}
}
}
}
var valid2 = _errs21 === errors;
}
else {
var valid2 = true;
}
}
}
}
}
}
}
}
}
}
else {
validate147.errors = [{instancePath:instancePath+"/posting",schemaPath:"node#/definitions/PostingFeatures/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.plugins !== undefined){
let data10 = data.plugins;
const _errs25 = errors;
if((!(Array.isArray(data10))) && (data10 !== null)){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if((Array.isArray(data10)) && (data10 === null)){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "string" || dataType9 === "number"
              || dataType9 === "boolean" || data10 === null){
coerced9 = [data10];
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced9 = null;
}
else {
validate147.errors = [{instancePath:instancePath+"/plugins",schemaPath:"#/properties/plugins/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data !== undefined){
data["plugins"] = coerced9;
}
}
}
if(errors === _errs25){
if(Array.isArray(data10)){
var valid5 = true;
const len2 = data10.length;
for(let i2=0; i2<len2; i2++){
let data11 = data10[i2];
const _errs28 = errors;
if(typeof data11 !== "string"){
let dataType10 = typeof data11;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType10 = typeof data11;
if(typeof data11 === "string"){
coerced10 = data11;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data11;
}
else if(data11 === null){
coerced10 = "";
}
else {
validate147.errors = [{instancePath:instancePath+"/plugins/" + i2,schemaPath:"#/properties/plugins/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data11 = coerced10;
if(data10 !== undefined){
data10[i2] = coerced10;
}
}
}
var valid5 = _errs28 === errors;
if(!valid5){
break;
}
}
}
}
var valid0 = _errs25 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedWidth !== undefined){
let data12 = data.feedWidth;
const _errs30 = errors;
if(!(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12)))){
let dataType11 = typeof data12;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType11 = typeof data12;
if(((typeof data12 == "number") && (!(data12 % 1) && !isNaN(data12))) && (isFinite(data12))){
coerced11 = data12;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data12 === null
              || (dataType11 === "string" && data12 && data12 == +data12 && !(data12 % 1))){
coerced11 = +data12;
}
else {
validate147.errors = [{instancePath:instancePath+"/feedWidth",schemaPath:"#/properties/feedWidth/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced11 !== undefined){
data12 = coerced11;
if(data !== undefined){
data["feedWidth"] = coerced11;
}
}
}
var valid0 = _errs30 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.friendGroups !== undefined){
let data13 = data.friendGroups;
const _errs32 = errors;
const _errs33 = errors;
let valid6 = false;
const _errs34 = errors;
if((!(data13 && typeof data13 == "object" && !Array.isArray(data13))) && (data13 !== null)){
let dataType12 = typeof data13;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType12 = typeof data13;
if((data13 && typeof data13 == "object" && !Array.isArray(data13)) && (data13 === null)){
coerced12 = data13;
}
}
if(!(coerced12 !== undefined)){
if(data13 === "" || data13 === 0 || data13 === false){
coerced12 = null;
}
else {
const err0 = {instancePath:instancePath+"/friendGroups",schemaPath:"#/properties/friendGroups/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced12 !== undefined){
data13 = coerced12;
if(data !== undefined){
data["friendGroups"] = coerced12;
}
}
}
if(!(validate57(data13, {instancePath:instancePath+"/friendGroups",parentData:data,parentDataProperty:"friendGroups",rootData}))){
vErrors = vErrors === null ? validate57.errors : vErrors.concat(validate57.errors);
errors = vErrors.length;
}
var _valid0 = _errs34 === errors;
valid6 = valid6 || _valid0;
if(!valid6){
const _errs37 = errors;
if(data13 !== null){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if(data13 === null){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
const err1 = {instancePath:instancePath+"/friendGroups",schemaPath:"#/properties/friendGroups/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["friendGroups"] = coerced13;
}
}
}
var _valid0 = _errs37 === errors;
valid6 = valid6 || _valid0;
}
if(!valid6){
const err2 = {instancePath:instancePath+"/friendGroups",schemaPath:"#/properties/friendGroups/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate147.errors = vErrors;
return false;
}
else {
errors = _errs33;
if(vErrors !== null){
if(_errs33){
vErrors.length = _errs33;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ask !== undefined){
let data14 = data.ask;
const _errs39 = errors;
if((!(Array.isArray(data14))) && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((Array.isArray(data14)) && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "string" || dataType14 === "number"
              || dataType14 === "boolean" || data14 === null){
coerced14 = [data14];
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
validate147.errors = [{instancePath:instancePath+"/ask",schemaPath:"#/properties/ask/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["ask"] = coerced14;
}
}
}
if(errors === _errs39){
if(Array.isArray(data14)){
var valid7 = true;
const len3 = data14.length;
for(let i3=0; i3<len3; i3++){
let data15 = data14[i3];
const _errs42 = errors;
if(typeof data15 !== "string"){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if(typeof data15 === "string"){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else {
validate147.errors = [{instancePath:instancePath+"/ask/" + i3,schemaPath:"#/properties/ask/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data14 !== undefined){
data14[i3] = coerced15;
}
}
}
var valid7 = _errs42 === errors;
if(!valid7){
break;
}
}
}
}
var valid0 = _errs39 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.subscribed !== undefined){
let data16 = data.subscribed;
const _errs44 = errors;
if((typeof data16 !== "boolean") && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((typeof data16 === "boolean") && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(data16 === "false" || data16 === 0 || data16 === null){
coerced16 = false;
}
else if(data16 === "true" || data16 === 1){
coerced16 = true;
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
validate147.errors = [{instancePath:instancePath+"/subscribed",schemaPath:"#/properties/subscribed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data !== undefined){
data["subscribed"] = coerced16;
}
}
}
var valid0 = _errs44 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate147.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate147.errors = vErrors;
return errors === 0;
}

export const FeedInfo = validate149;
const schema168 = {"type":"object","properties":{"feedName":{"type":"string"},"title":{"type":"string","nullable":true},"total":{"type":"integer"},"firstCreatedAt":{"type":"integer","nullable":true},"lastCreatedAt":{"type":"integer","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/FeedOperations","type":"object","nullable":true},{"type":"null"}]},"sheriffs":{"type":"array","items":{"type":"string"},"nullable":true},"sheriffMarks":{"type":"array","items":{"$ref":"node#/definitions/SheriffMark"},"nullable":true}},"required":["feedName","total"],"additionalProperties":false};

function validate149(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.feedName === undefined) && (missing0 = "feedName")) || ((data.total === undefined) && (missing0 = "total"))){
validate149.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((((key0 === "feedName") || (key0 === "title")) || (key0 === "total")) || (key0 === "firstCreatedAt")) || (key0 === "lastCreatedAt")) || (key0 === "operations")) || (key0 === "sheriffs")) || (key0 === "sheriffMarks"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.feedName !== undefined){
let data0 = data.feedName;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate149.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["feedName"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data1 = data.title;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate149.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["title"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data2 = data.total;
const _errs7 = errors;
if(!(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(((typeof data2 == "number") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2))){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "boolean" || data2 === null
              || (dataType2 === "string" && data2 && data2 == +data2 && !(data2 % 1))){
coerced2 = +data2;
}
else {
validate149.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["total"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.firstCreatedAt !== undefined){
let data3 = data.firstCreatedAt;
const _errs9 = errors;
if((!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))) && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate149.errors = [{instancePath:instancePath+"/firstCreatedAt",schemaPath:"#/properties/firstCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["firstCreatedAt"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.lastCreatedAt !== undefined){
let data4 = data.lastCreatedAt;
const _errs12 = errors;
if((!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate149.errors = [{instancePath:instancePath+"/lastCreatedAt",schemaPath:"#/properties/lastCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["lastCreatedAt"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data5 = data.operations;
const _errs15 = errors;
const _errs16 = errors;
let valid1 = false;
const _errs17 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["operations"] = coerced5;
}
}
}
const _errs18 = errors;
if(errors === _errs18){
if(data5 && typeof data5 == "object" && !Array.isArray(data5)){
const _errs20 = errors;
for(const key1 in data5){
if(!(key1 === "add")){
delete data5[key1];
}
}
if(_errs20 === errors){
if(data5.add !== undefined){
let data6 = data5.add;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err1 = {instancePath:instancePath+"/operations/add",schemaPath:"node#/definitions/FeedOperations/properties/add/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data5 !== undefined){
data5["add"] = coerced6;
}
}
}
}
}
}
else {
const err2 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/FeedOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
var _valid0 = _errs17 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs26 = errors;
if(data5 !== null){
let dataType7 = typeof data5;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType7 = typeof data5;
if(data5 === null){
coerced7 = data5;
}
}
if(!(coerced7 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced7 = null;
}
else {
const err3 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced7 !== undefined){
data5 = coerced7;
if(data !== undefined){
data["operations"] = coerced7;
}
}
}
var _valid0 = _errs26 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err4 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
validate149.errors = vErrors;
return false;
}
else {
errors = _errs16;
if(vErrors !== null){
if(_errs16){
vErrors.length = _errs16;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffs !== undefined){
let data7 = data.sheriffs;
const _errs28 = errors;
if((!(Array.isArray(data7))) && (data7 !== null)){
let dataType8 = typeof data7;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType8 = typeof data7;
if((Array.isArray(data7)) && (data7 === null)){
coerced8 = data7;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "string" || dataType8 === "number"
              || dataType8 === "boolean" || data7 === null){
coerced8 = [data7];
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced8 = null;
}
else {
validate149.errors = [{instancePath:instancePath+"/sheriffs",schemaPath:"#/properties/sheriffs/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced8 !== undefined){
data7 = coerced8;
if(data !== undefined){
data["sheriffs"] = coerced8;
}
}
}
if(errors === _errs28){
if(Array.isArray(data7)){
var valid4 = true;
const len0 = data7.length;
for(let i0=0; i0<len0; i0++){
let data8 = data7[i0];
const _errs31 = errors;
if(typeof data8 !== "string"){
let dataType9 = typeof data8;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType9 = typeof data8;
if(typeof data8 === "string"){
coerced9 = data8;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data8;
}
else if(data8 === null){
coerced9 = "";
}
else {
validate149.errors = [{instancePath:instancePath+"/sheriffs/" + i0,schemaPath:"#/properties/sheriffs/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data8 = coerced9;
if(data7 !== undefined){
data7[i0] = coerced9;
}
}
}
var valid4 = _errs31 === errors;
if(!valid4){
break;
}
}
}
}
var valid0 = _errs28 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffMarks !== undefined){
let data9 = data.sheriffMarks;
const _errs33 = errors;
if((!(Array.isArray(data9))) && (data9 !== null)){
let dataType10 = typeof data9;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType10 = typeof data9;
if((Array.isArray(data9)) && (data9 === null)){
coerced10 = data9;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "string" || dataType10 === "number"
              || dataType10 === "boolean" || data9 === null){
coerced10 = [data9];
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced10 = null;
}
else {
validate149.errors = [{instancePath:instancePath+"/sheriffMarks",schemaPath:"#/properties/sheriffMarks/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced10 !== undefined){
data9 = coerced10;
if(data !== undefined){
data["sheriffMarks"] = coerced10;
}
}
}
if(errors === _errs33){
if(Array.isArray(data9)){
var valid5 = true;
const len1 = data9.length;
for(let i1=0; i1<len1; i1++){
let data10 = data9[i1];
const _errs36 = errors;
const _errs37 = errors;
if(errors === _errs37){
if(data10 && typeof data10 == "object" && !Array.isArray(data10)){
let missing1;
if((data10.sheriffName === undefined) && (missing1 = "sheriffName")){
validate149.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1,schemaPath:"node#/definitions/SheriffMark/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];
return false;
}
else {
const _errs39 = errors;
for(const key2 in data10){
if(!(key2 === "sheriffName")){
delete data10[key2];
}
}
if(_errs39 === errors){
if(data10.sheriffName !== undefined){
let data11 = data10.sheriffName;
if(typeof data11 !== "string"){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if(typeof data11 === "string"){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else {
validate149.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1+"/sheriffName",schemaPath:"node#/definitions/SheriffMark/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data10 !== undefined){
data10["sheriffName"] = coerced11;
}
}
}
}
}
}
}
else {
validate149.errors = [{instancePath:instancePath+"/sheriffMarks/" + i1,schemaPath:"node#/definitions/SheriffMark/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid5 = _errs36 === errors;
if(!valid5){
break;
}
}
}
}
var valid0 = _errs33 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
else {
validate149.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate149.errors = vErrors;
return errors === 0;
}

export const FeedInfoArray = validate150;
const schema171 = {"type":"array","items":{"$ref":"node#/definitions/FeedInfo"}};

function validate150(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate150.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate149(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate149.errors : vErrors.concat(validate149.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate150.errors = vErrors;
return errors === 0;
}

export const MediaAttachment = validate152;
const schema172 = {"type":"object","properties":{"media":{"anyOf":[{"$ref":"node#/definitions/PrivateMediaFileInfo","type":"object","nullable":true},{"type":"null"}]},"remoteMedia":{"anyOf":[{"$ref":"node#/definitions/RemoteMediaInfo","type":"object","nullable":true},{"type":"null"}]},"embedded":{"type":"boolean"}},"required":["embedded"],"additionalProperties":false};

function validate152(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.embedded === undefined) && (missing0 = "embedded")){
validate152.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((key0 === "media") || (key0 === "remoteMedia")) || (key0 === "embedded"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.media !== undefined){
let data0 = data.media;
const _errs2 = errors;
const _errs3 = errors;
let valid1 = false;
const _errs4 = errors;
if((!(data0 && typeof data0 == "object" && !Array.isArray(data0))) && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((data0 && typeof data0 == "object" && !Array.isArray(data0)) && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
const err0 = {instancePath:instancePath+"/media",schemaPath:"#/properties/media/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["media"] = coerced0;
}
}
}
if(!(validate81(data0, {instancePath:instancePath+"/media",parentData:data,parentDataProperty:"media",rootData}))){
vErrors = vErrors === null ? validate81.errors : vErrors.concat(validate81.errors);
errors = vErrors.length;
}
var _valid0 = _errs4 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs7 = errors;
if(data0 !== null){
let dataType1 = typeof data0;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType1 = typeof data0;
if(data0 === null){
coerced1 = data0;
}
}
if(!(coerced1 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced1 = null;
}
else {
const err1 = {instancePath:instancePath+"/media",schemaPath:"#/properties/media/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced1 !== undefined){
data0 = coerced1;
if(data !== undefined){
data["media"] = coerced1;
}
}
}
var _valid0 = _errs7 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/media",schemaPath:"#/properties/media/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate152.errors = vErrors;
return false;
}
else {
errors = _errs3;
if(vErrors !== null){
if(_errs3){
vErrors.length = _errs3;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteMedia !== undefined){
let data1 = data.remoteMedia;
const _errs9 = errors;
const _errs10 = errors;
let valid2 = false;
const _errs11 = errors;
if((!(data1 && typeof data1 == "object" && !Array.isArray(data1))) && (data1 !== null)){
let dataType2 = typeof data1;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType2 = typeof data1;
if((data1 && typeof data1 == "object" && !Array.isArray(data1)) && (data1 === null)){
coerced2 = data1;
}
}
if(!(coerced2 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced2 = null;
}
else {
const err3 = {instancePath:instancePath+"/remoteMedia",schemaPath:"#/properties/remoteMedia/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced2 !== undefined){
data1 = coerced2;
if(data !== undefined){
data["remoteMedia"] = coerced2;
}
}
}
const _errs12 = errors;
if(errors === _errs12){
if(data1 && typeof data1 == "object" && !Array.isArray(data1)){
let missing1;
if((data1.id === undefined) && (missing1 = "id")){
const err4 = {instancePath:instancePath+"/remoteMedia",schemaPath:"node#/definitions/RemoteMediaInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
else {
const _errs14 = errors;
for(const key1 in data1){
if(!(((key1 === "id") || (key1 === "hash")) || (key1 === "digest"))){
delete data1[key1];
}
}
if(_errs14 === errors){
if(data1.id !== undefined){
let data2 = data1.id;
const _errs15 = errors;
if(typeof data2 !== "string"){
let dataType3 = typeof data2;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType3 = typeof data2;
if(typeof data2 === "string"){
coerced3 = data2;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data2;
}
else if(data2 === null){
coerced3 = "";
}
else {
const err5 = {instancePath:instancePath+"/remoteMedia/id",schemaPath:"node#/definitions/RemoteMediaInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced3 !== undefined){
data2 = coerced3;
if(data1 !== undefined){
data1["id"] = coerced3;
}
}
}
var valid4 = _errs15 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data1.hash !== undefined){
let data3 = data1.hash;
const _errs17 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType4 = typeof data3;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType4 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced4 = data3;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data3;
}
else if(data3 === null){
coerced4 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced4 = null;
}
else {
const err6 = {instancePath:instancePath+"/remoteMedia/hash",schemaPath:"node#/definitions/RemoteMediaInfo/properties/hash/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced4 !== undefined){
data3 = coerced4;
if(data1 !== undefined){
data1["hash"] = coerced4;
}
}
}
var valid4 = _errs17 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data1.digest !== undefined){
let data4 = data1.digest;
const _errs20 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data4;
}
else if(data4 === null){
coerced5 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced5 = null;
}
else {
const err7 = {instancePath:instancePath+"/remoteMedia/digest",schemaPath:"node#/definitions/RemoteMediaInfo/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data1 !== undefined){
data1["digest"] = coerced5;
}
}
}
var valid4 = _errs20 === errors;
}
else {
var valid4 = true;
}
}
}
}
}
}
else {
const err8 = {instancePath:instancePath+"/remoteMedia",schemaPath:"node#/definitions/RemoteMediaInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
var _valid1 = _errs11 === errors;
valid2 = valid2 || _valid1;
if(!valid2){
const _errs25 = errors;
if(data1 !== null){
let dataType6 = typeof data1;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType6 = typeof data1;
if(data1 === null){
coerced6 = data1;
}
}
if(!(coerced6 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced6 = null;
}
else {
const err9 = {instancePath:instancePath+"/remoteMedia",schemaPath:"#/properties/remoteMedia/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced6 !== undefined){
data1 = coerced6;
if(data !== undefined){
data["remoteMedia"] = coerced6;
}
}
}
var _valid1 = _errs25 === errors;
valid2 = valid2 || _valid1;
}
if(!valid2){
const err10 = {instancePath:instancePath+"/remoteMedia",schemaPath:"#/properties/remoteMedia/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
validate152.errors = vErrors;
return false;
}
else {
errors = _errs10;
if(vErrors !== null){
if(_errs10){
vErrors.length = _errs10;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.embedded !== undefined){
let data5 = data.embedded;
const _errs27 = errors;
if(typeof data5 !== "boolean"){
let dataType7 = typeof data5;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType7 = typeof data5;
if(typeof data5 === "boolean"){
coerced7 = data5;
}
}
if(!(coerced7 !== undefined)){
if(data5 === "false" || data5 === 0 || data5 === null){
coerced7 = false;
}
else if(data5 === "true" || data5 === 1){
coerced7 = true;
}
else {
validate152.errors = [{instancePath:instancePath+"/embedded",schemaPath:"#/properties/embedded/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced7 !== undefined){
data5 = coerced7;
if(data !== undefined){
data["embedded"] = coerced7;
}
}
}
var valid0 = _errs27 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
else {
validate152.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate152.errors = vErrors;
return errors === 0;
}

export const PostingInfo = validate154;
const schema174 = {"type":"object","properties":{"id":{"type":"string"},"revisionId":{"type":"string"},"receiverRevisionId":{"type":"string","nullable":true},"totalRevisions":{"type":"integer"},"receiverName":{"type":"string","nullable":true},"receiverFullName":{"type":"string","nullable":true},"receiverGender":{"type":"string","nullable":true},"receiverAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"receiverPostingId":{"type":"string","nullable":true},"parentMediaId":{"type":"string","nullable":true},"ownerName":{"type":"string"},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"ownerAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"bodyPreview":{"type":"string","nullable":true},"bodySrc":{"type":"string","nullable":true},"bodySrcHash":{"type":"string"},"bodySrcFormat":{"type":"string","nullable":true},"body":{"type":"string"},"bodyFormat":{"type":"string","nullable":true},"media":{"type":"array","items":{"$ref":"node#/definitions/MediaAttachment"},"nullable":true},"heading":{"type":"string"},"updateInfo":{"anyOf":[{"$ref":"node#/definitions/UpdateInfo","type":"object","nullable":true},{"type":"null"}]},"createdAt":{"type":"integer"},"editedAt":{"type":"integer","nullable":true},"deletedAt":{"type":"integer","nullable":true},"receiverCreatedAt":{"type":"integer","nullable":true},"receiverEditedAt":{"type":"integer","nullable":true},"receiverDeletedAt":{"type":"integer","nullable":true},"revisionCreatedAt":{"type":"integer"},"receiverRevisionCreatedAt":{"type":"integer","nullable":true},"deadline":{"type":"integer","nullable":true},"digest":{"type":"string","nullable":true},"signature":{"type":"string","nullable":true},"signatureVersion":{"type":"integer","nullable":true},"feedReferences":{"type":"array","items":{"$ref":"node#/definitions/FeedReference"},"nullable":true},"blockedInstants":{"type":"array","items":{"$ref":"node#/definitions/BlockedPostingInstantInfo"},"nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/PostingOperations","type":"object","nullable":true},{"type":"null"}]},"receiverOperations":{"anyOf":[{"$ref":"node#/definitions/PostingOperations","type":"object","nullable":true},{"type":"null"}]},"commentOperations":{"anyOf":[{"$ref":"node#/definitions/CommentOperations","type":"object","nullable":true},{"type":"null"}]},"reactionOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"commentReactionOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"blockedOperations":{"type":"array","items":{"type":"string"},"nullable":true},"blockedCommentOperations":{"type":"array","items":{"type":"string"},"nullable":true},"sheriffs":{"type":"array","items":{"type":"string"},"nullable":true},"sheriffMarks":{"type":"array","items":{"$ref":"node#/definitions/SheriffMark"},"nullable":true},"acceptedReactions":{"anyOf":[{"$ref":"node#/definitions/AcceptedReactions","type":"object","nullable":true},{"type":"null"}]},"clientReaction":{"anyOf":[{"$ref":"node#/definitions/ClientReactionInfo","type":"object","nullable":true},{"type":"null"}]},"reactions":{"anyOf":[{"$ref":"node#/definitions/ReactionTotalsInfo","type":"object","nullable":true},{"type":"null"}]},"sources":{"type":"array","items":{"$ref":"node#/definitions/PostingSourceInfo"},"nullable":true},"totalComments":{"type":"integer","nullable":true}},"required":["id","revisionId","totalRevisions","ownerName","bodySrcHash","body","heading","createdAt","revisionCreatedAt"],"additionalProperties":false};

function validate154(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((((((data.id === undefined) && (missing0 = "id")) || ((data.revisionId === undefined) && (missing0 = "revisionId"))) || ((data.totalRevisions === undefined) && (missing0 = "totalRevisions"))) || ((data.ownerName === undefined) && (missing0 = "ownerName"))) || ((data.bodySrcHash === undefined) && (missing0 = "bodySrcHash"))) || ((data.body === undefined) && (missing0 = "body"))) || ((data.heading === undefined) && (missing0 = "heading"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.revisionCreatedAt === undefined) && (missing0 = "revisionCreatedAt"))){
validate154.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema174.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionId !== undefined){
let data1 = data.revisionId;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/revisionId",schemaPath:"#/properties/revisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["revisionId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverRevisionId !== undefined){
let data2 = data.receiverRevisionId;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverRevisionId",schemaPath:"#/properties/receiverRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["receiverRevisionId"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalRevisions !== undefined){
let data3 = data.totalRevisions;
const _errs9 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate154.errors = [{instancePath:instancePath+"/totalRevisions",schemaPath:"#/properties/totalRevisions/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["totalRevisions"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverName !== undefined){
let data4 = data.receiverName;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverName",schemaPath:"#/properties/receiverName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["receiverName"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverFullName !== undefined){
let data5 = data.receiverFullName;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverFullName",schemaPath:"#/properties/receiverFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["receiverFullName"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverGender !== undefined){
let data6 = data.receiverGender;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverGender",schemaPath:"#/properties/receiverGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["receiverGender"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverAvatar !== undefined){
let data7 = data.receiverAvatar;
const _errs20 = errors;
const _errs21 = errors;
let valid1 = false;
const _errs22 = errors;
if((!(data7 && typeof data7 == "object" && !Array.isArray(data7))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((data7 && typeof data7 == "object" && !Array.isArray(data7)) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err0 = {instancePath:instancePath+"/receiverAvatar",schemaPath:"#/properties/receiverAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["receiverAvatar"] = coerced7;
}
}
}
const _errs23 = errors;
if(errors === _errs23){
if(data7 && typeof data7 == "object" && !Array.isArray(data7)){
let missing1;
if(((data7.mediaId === undefined) && (missing1 = "mediaId")) || ((data7.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/receiverAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs25 = errors;
for(const key1 in data7){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data7[key1];
}
}
if(_errs25 === errors){
if(data7.mediaId !== undefined){
let data8 = data7.mediaId;
const _errs26 = errors;
if(typeof data8 !== "string"){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if(typeof data8 === "string"){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else {
const err2 = {instancePath:instancePath+"/receiverAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data7 !== undefined){
data7["mediaId"] = coerced8;
}
}
}
var valid3 = _errs26 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.path !== undefined){
let data9 = data7.path;
const _errs28 = errors;
if(typeof data9 !== "string"){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if(typeof data9 === "string"){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else {
const err3 = {instancePath:instancePath+"/receiverAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data7 !== undefined){
data7["path"] = coerced9;
}
}
}
var valid3 = _errs28 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.width !== undefined){
let data10 = data7.width;
const _errs30 = errors;
if((!(((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10)))) && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((((typeof data10 == "number") && (!(data10 % 1) && !isNaN(data10))) && (isFinite(data10))) && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "boolean" || data10 === null
              || (dataType10 === "string" && data10 && data10 == +data10 && !(data10 % 1))){
coerced10 = +data10;
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err4 = {instancePath:instancePath+"/receiverAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data7 !== undefined){
data7["width"] = coerced10;
}
}
}
var valid3 = _errs30 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.height !== undefined){
let data11 = data7.height;
const _errs33 = errors;
if((!(((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11)))) && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((((typeof data11 == "number") && (!(data11 % 1) && !isNaN(data11))) && (isFinite(data11))) && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 === "boolean" || data11 === null
              || (dataType11 === "string" && data11 && data11 == +data11 && !(data11 % 1))){
coerced11 = +data11;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
const err5 = {instancePath:instancePath+"/receiverAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data7 !== undefined){
data7["height"] = coerced11;
}
}
}
var valid3 = _errs33 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data7.shape !== undefined){
let data12 = data7.shape;
const _errs36 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err6 = {instancePath:instancePath+"/receiverAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data7 !== undefined){
data7["shape"] = coerced12;
}
}
}
var valid3 = _errs36 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/receiverAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs22 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs41 = errors;
if(data7 !== null){
let dataType13 = typeof data7;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType13 = typeof data7;
if(data7 === null){
coerced13 = data7;
}
}
if(!(coerced13 !== undefined)){
if(data7 === "" || data7 === 0 || data7 === false){
coerced13 = null;
}
else {
const err8 = {instancePath:instancePath+"/receiverAvatar",schemaPath:"#/properties/receiverAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced13 !== undefined){
data7 = coerced13;
if(data !== undefined){
data["receiverAvatar"] = coerced13;
}
}
}
var _valid0 = _errs41 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/receiverAvatar",schemaPath:"#/properties/receiverAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs21;
if(vErrors !== null){
if(_errs21){
vErrors.length = _errs21;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverPostingId !== undefined){
let data13 = data.receiverPostingId;
const _errs43 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType14 = typeof data13;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType14 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced14 = data13;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data13;
}
else if(data13 === null){
coerced14 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced14 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverPostingId",schemaPath:"#/properties/receiverPostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced14 !== undefined){
data13 = coerced14;
if(data !== undefined){
data["receiverPostingId"] = coerced14;
}
}
}
var valid0 = _errs43 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.parentMediaId !== undefined){
let data14 = data.parentMediaId;
const _errs46 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType15 = typeof data14;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType15 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced15 = data14;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data14;
}
else if(data14 === null){
coerced15 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced15 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/parentMediaId",schemaPath:"#/properties/parentMediaId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data14 = coerced15;
if(data !== undefined){
data["parentMediaId"] = coerced15;
}
}
}
var valid0 = _errs46 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerName !== undefined){
let data15 = data.ownerName;
const _errs49 = errors;
if(typeof data15 !== "string"){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType16 = typeof data15;
if(typeof data15 === "string"){
coerced16 = data15;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data15;
}
else if(data15 === null){
coerced16 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["ownerName"] = coerced16;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data16 = data.ownerFullName;
const _errs51 = errors;
if((typeof data16 !== "string") && (data16 !== null)){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType17 = typeof data16;
if((typeof data16 === "string") && (data16 === null)){
coerced17 = data16;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data16;
}
else if(data16 === null){
coerced17 = "";
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced17 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["ownerFullName"] = coerced17;
}
}
}
var valid0 = _errs51 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data17 = data.ownerGender;
const _errs54 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data17;
}
else if(data17 === null){
coerced18 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced18 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data !== undefined){
data["ownerGender"] = coerced18;
}
}
}
var valid0 = _errs54 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerAvatar !== undefined){
let data18 = data.ownerAvatar;
const _errs57 = errors;
const _errs58 = errors;
let valid4 = false;
const _errs59 = errors;
if((!(data18 && typeof data18 == "object" && !Array.isArray(data18))) && (data18 !== null)){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if((data18 && typeof data18 == "object" && !Array.isArray(data18)) && (data18 === null)){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(data18 === "" || data18 === 0 || data18 === false){
coerced19 = null;
}
else {
const err10 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data !== undefined){
data["ownerAvatar"] = coerced19;
}
}
}
const _errs60 = errors;
if(errors === _errs60){
if(data18 && typeof data18 == "object" && !Array.isArray(data18)){
let missing2;
if(((data18.mediaId === undefined) && (missing2 = "mediaId")) || ((data18.path === undefined) && (missing2 = "path"))){
const err11 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
else {
const _errs62 = errors;
for(const key2 in data18){
if(!(((((key2 === "mediaId") || (key2 === "path")) || (key2 === "width")) || (key2 === "height")) || (key2 === "shape"))){
delete data18[key2];
}
}
if(_errs62 === errors){
if(data18.mediaId !== undefined){
let data19 = data18.mediaId;
const _errs63 = errors;
if(typeof data19 !== "string"){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if(typeof data19 === "string"){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data19;
}
else if(data19 === null){
coerced20 = "";
}
else {
const err12 = {instancePath:instancePath+"/ownerAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data18 !== undefined){
data18["mediaId"] = coerced20;
}
}
}
var valid6 = _errs63 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data18.path !== undefined){
let data20 = data18.path;
const _errs65 = errors;
if(typeof data20 !== "string"){
let dataType21 = typeof data20;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType21 = typeof data20;
if(typeof data20 === "string"){
coerced21 = data20;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 == "number" || dataType21 == "boolean"){
coerced21 = "" + data20;
}
else if(data20 === null){
coerced21 = "";
}
else {
const err13 = {instancePath:instancePath+"/ownerAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced21 !== undefined){
data20 = coerced21;
if(data18 !== undefined){
data18["path"] = coerced21;
}
}
}
var valid6 = _errs65 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data18.width !== undefined){
let data21 = data18.width;
const _errs67 = errors;
if((!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))) && (data21 !== null)){
let dataType22 = typeof data21;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType22 = typeof data21;
if((((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))) && (data21 === null)){
coerced22 = data21;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 === "boolean" || data21 === null
              || (dataType22 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced22 = +data21;
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced22 = null;
}
else {
const err14 = {instancePath:instancePath+"/ownerAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced22 !== undefined){
data21 = coerced22;
if(data18 !== undefined){
data18["width"] = coerced22;
}
}
}
var valid6 = _errs67 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data18.height !== undefined){
let data22 = data18.height;
const _errs70 = errors;
if((!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))) && (data22 !== null)){
let dataType23 = typeof data22;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType23 = typeof data22;
if((((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22))) && (data22 === null)){
coerced23 = data22;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 === "boolean" || data22 === null
              || (dataType23 === "string" && data22 && data22 == +data22 && !(data22 % 1))){
coerced23 = +data22;
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced23 = null;
}
else {
const err15 = {instancePath:instancePath+"/ownerAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced23 !== undefined){
data22 = coerced23;
if(data18 !== undefined){
data18["height"] = coerced23;
}
}
}
var valid6 = _errs70 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data18.shape !== undefined){
let data23 = data18.shape;
const _errs73 = errors;
if((typeof data23 !== "string") && (data23 !== null)){
let dataType24 = typeof data23;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType24 = typeof data23;
if((typeof data23 === "string") && (data23 === null)){
coerced24 = data23;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data23;
}
else if(data23 === null){
coerced24 = "";
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced24 = null;
}
else {
const err16 = {instancePath:instancePath+"/ownerAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced24 !== undefined){
data23 = coerced24;
if(data18 !== undefined){
data18["shape"] = coerced24;
}
}
}
var valid6 = _errs73 === errors;
}
else {
var valid6 = true;
}
}
}
}
}
}
}
}
else {
const err17 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
var _valid1 = _errs59 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs78 = errors;
if(data18 !== null){
let dataType25 = typeof data18;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType25 = typeof data18;
if(data18 === null){
coerced25 = data18;
}
}
if(!(coerced25 !== undefined)){
if(data18 === "" || data18 === 0 || data18 === false){
coerced25 = null;
}
else {
const err18 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced25 !== undefined){
data18 = coerced25;
if(data !== undefined){
data["ownerAvatar"] = coerced25;
}
}
}
var _valid1 = _errs78 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err19 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs58;
if(vErrors !== null){
if(_errs58){
vErrors.length = _errs58;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs57 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyPreview !== undefined){
let data24 = data.bodyPreview;
const _errs80 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType26 = typeof data24;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType26 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced26 = data24;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 == "number" || dataType26 == "boolean"){
coerced26 = "" + data24;
}
else if(data24 === null){
coerced26 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced26 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/bodyPreview",schemaPath:"#/properties/bodyPreview/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced26 !== undefined){
data24 = coerced26;
if(data !== undefined){
data["bodyPreview"] = coerced26;
}
}
}
var valid0 = _errs80 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrc !== undefined){
let data25 = data.bodySrc;
const _errs83 = errors;
if((typeof data25 !== "string") && (data25 !== null)){
let dataType27 = typeof data25;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType27 = typeof data25;
if((typeof data25 === "string") && (data25 === null)){
coerced27 = data25;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 == "number" || dataType27 == "boolean"){
coerced27 = "" + data25;
}
else if(data25 === null){
coerced27 = "";
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced27 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/bodySrc",schemaPath:"#/properties/bodySrc/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced27 !== undefined){
data25 = coerced27;
if(data !== undefined){
data["bodySrc"] = coerced27;
}
}
}
var valid0 = _errs83 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcHash !== undefined){
let data26 = data.bodySrcHash;
const _errs86 = errors;
if(typeof data26 !== "string"){
let dataType28 = typeof data26;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType28 = typeof data26;
if(typeof data26 === "string"){
coerced28 = data26;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 == "number" || dataType28 == "boolean"){
coerced28 = "" + data26;
}
else if(data26 === null){
coerced28 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/bodySrcHash",schemaPath:"#/properties/bodySrcHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced28 !== undefined){
data26 = coerced28;
if(data !== undefined){
data["bodySrcHash"] = coerced28;
}
}
}
var valid0 = _errs86 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcFormat !== undefined){
let data27 = data.bodySrcFormat;
const _errs88 = errors;
if((typeof data27 !== "string") && (data27 !== null)){
let dataType29 = typeof data27;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType29 = typeof data27;
if((typeof data27 === "string") && (data27 === null)){
coerced29 = data27;
}
}
if(!(coerced29 !== undefined)){
if(dataType29 == "number" || dataType29 == "boolean"){
coerced29 = "" + data27;
}
else if(data27 === null){
coerced29 = "";
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced29 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/bodySrcFormat",schemaPath:"#/properties/bodySrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced29 !== undefined){
data27 = coerced29;
if(data !== undefined){
data["bodySrcFormat"] = coerced29;
}
}
}
var valid0 = _errs88 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.body !== undefined){
let data28 = data.body;
const _errs91 = errors;
if(typeof data28 !== "string"){
let dataType30 = typeof data28;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType30 = typeof data28;
if(typeof data28 === "string"){
coerced30 = data28;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data28;
}
else if(data28 === null){
coerced30 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced30 !== undefined){
data28 = coerced30;
if(data !== undefined){
data["body"] = coerced30;
}
}
}
var valid0 = _errs91 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyFormat !== undefined){
let data29 = data.bodyFormat;
const _errs93 = errors;
if((typeof data29 !== "string") && (data29 !== null)){
let dataType31 = typeof data29;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType31 = typeof data29;
if((typeof data29 === "string") && (data29 === null)){
coerced31 = data29;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data29;
}
else if(data29 === null){
coerced31 = "";
}
else if(data29 === "" || data29 === 0 || data29 === false){
coerced31 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/bodyFormat",schemaPath:"#/properties/bodyFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced31 !== undefined){
data29 = coerced31;
if(data !== undefined){
data["bodyFormat"] = coerced31;
}
}
}
var valid0 = _errs93 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.media !== undefined){
let data30 = data.media;
const _errs96 = errors;
if((!(Array.isArray(data30))) && (data30 !== null)){
let dataType32 = typeof data30;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType32 = typeof data30;
if((Array.isArray(data30)) && (data30 === null)){
coerced32 = data30;
}
}
if(!(coerced32 !== undefined)){
if(dataType32 === "string" || dataType32 === "number"
              || dataType32 === "boolean" || data30 === null){
coerced32 = [data30];
}
else if(data30 === "" || data30 === 0 || data30 === false){
coerced32 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/media",schemaPath:"#/properties/media/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced32 !== undefined){
data30 = coerced32;
if(data !== undefined){
data["media"] = coerced32;
}
}
}
if(errors === _errs96){
if(Array.isArray(data30)){
var valid7 = true;
const len0 = data30.length;
for(let i0=0; i0<len0; i0++){
const _errs99 = errors;
if(!(validate152(data30[i0], {instancePath:instancePath+"/media/" + i0,parentData:data30,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate152.errors : vErrors.concat(validate152.errors);
errors = vErrors.length;
}
var valid7 = _errs99 === errors;
if(!valid7){
break;
}
}
}
}
var valid0 = _errs96 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data32 = data.heading;
const _errs100 = errors;
if(typeof data32 !== "string"){
let dataType33 = typeof data32;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType33 = typeof data32;
if(typeof data32 === "string"){
coerced33 = data32;
}
}
if(!(coerced33 !== undefined)){
if(dataType33 == "number" || dataType33 == "boolean"){
coerced33 = "" + data32;
}
else if(data32 === null){
coerced33 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced33 !== undefined){
data32 = coerced33;
if(data !== undefined){
data["heading"] = coerced33;
}
}
}
var valid0 = _errs100 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.updateInfo !== undefined){
let data33 = data.updateInfo;
const _errs102 = errors;
const _errs103 = errors;
let valid8 = false;
const _errs104 = errors;
if((!(data33 && typeof data33 == "object" && !Array.isArray(data33))) && (data33 !== null)){
let dataType34 = typeof data33;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType34 = typeof data33;
if((data33 && typeof data33 == "object" && !Array.isArray(data33)) && (data33 === null)){
coerced34 = data33;
}
}
if(!(coerced34 !== undefined)){
if(data33 === "" || data33 === 0 || data33 === false){
coerced34 = null;
}
else {
const err20 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced34 !== undefined){
data33 = coerced34;
if(data !== undefined){
data["updateInfo"] = coerced34;
}
}
}
const _errs105 = errors;
if(errors === _errs105){
if(data33 && typeof data33 == "object" && !Array.isArray(data33)){
const _errs107 = errors;
for(const key3 in data33){
if(!((key3 === "important") || (key3 === "description"))){
delete data33[key3];
}
}
if(_errs107 === errors){
if(data33.important !== undefined){
let data34 = data33.important;
const _errs108 = errors;
if((typeof data34 !== "boolean") && (data34 !== null)){
let dataType35 = typeof data34;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data34) && data34.length == 1){
data34 = data34[0];
dataType35 = typeof data34;
if((typeof data34 === "boolean") && (data34 === null)){
coerced35 = data34;
}
}
if(!(coerced35 !== undefined)){
if(data34 === "false" || data34 === 0 || data34 === null){
coerced35 = false;
}
else if(data34 === "true" || data34 === 1){
coerced35 = true;
}
else if(data34 === "" || data34 === 0 || data34 === false){
coerced35 = null;
}
else {
const err21 = {instancePath:instancePath+"/updateInfo/important",schemaPath:"node#/definitions/UpdateInfo/properties/important/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced35 !== undefined){
data34 = coerced35;
if(data33 !== undefined){
data33["important"] = coerced35;
}
}
}
var valid10 = _errs108 === errors;
}
else {
var valid10 = true;
}
if(valid10){
if(data33.description !== undefined){
let data35 = data33.description;
const _errs111 = errors;
if((typeof data35 !== "string") && (data35 !== null)){
let dataType36 = typeof data35;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data35) && data35.length == 1){
data35 = data35[0];
dataType36 = typeof data35;
if((typeof data35 === "string") && (data35 === null)){
coerced36 = data35;
}
}
if(!(coerced36 !== undefined)){
if(dataType36 == "number" || dataType36 == "boolean"){
coerced36 = "" + data35;
}
else if(data35 === null){
coerced36 = "";
}
else if(data35 === "" || data35 === 0 || data35 === false){
coerced36 = null;
}
else {
const err22 = {instancePath:instancePath+"/updateInfo/description",schemaPath:"node#/definitions/UpdateInfo/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced36 !== undefined){
data35 = coerced36;
if(data33 !== undefined){
data33["description"] = coerced36;
}
}
}
var valid10 = _errs111 === errors;
}
else {
var valid10 = true;
}
}
}
}
else {
const err23 = {instancePath:instancePath+"/updateInfo",schemaPath:"node#/definitions/UpdateInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
var _valid2 = _errs104 === errors;
valid8 = valid8 || _valid2;
if(!valid8){
const _errs116 = errors;
if(data33 !== null){
let dataType37 = typeof data33;
let coerced37 = undefined;
if(dataType37 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType37 = typeof data33;
if(data33 === null){
coerced37 = data33;
}
}
if(!(coerced37 !== undefined)){
if(data33 === "" || data33 === 0 || data33 === false){
coerced37 = null;
}
else {
const err24 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced37 !== undefined){
data33 = coerced37;
if(data !== undefined){
data["updateInfo"] = coerced37;
}
}
}
var _valid2 = _errs116 === errors;
valid8 = valid8 || _valid2;
}
if(!valid8){
const err25 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs103;
if(vErrors !== null){
if(_errs103){
vErrors.length = _errs103;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs102 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data36 = data.createdAt;
const _errs118 = errors;
if(!(((typeof data36 == "number") && (!(data36 % 1) && !isNaN(data36))) && (isFinite(data36)))){
let dataType38 = typeof data36;
let coerced38 = undefined;
if(dataType38 == 'object' && Array.isArray(data36) && data36.length == 1){
data36 = data36[0];
dataType38 = typeof data36;
if(((typeof data36 == "number") && (!(data36 % 1) && !isNaN(data36))) && (isFinite(data36))){
coerced38 = data36;
}
}
if(!(coerced38 !== undefined)){
if(dataType38 === "boolean" || data36 === null
              || (dataType38 === "string" && data36 && data36 == +data36 && !(data36 % 1))){
coerced38 = +data36;
}
else {
validate154.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced38 !== undefined){
data36 = coerced38;
if(data !== undefined){
data["createdAt"] = coerced38;
}
}
}
var valid0 = _errs118 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.editedAt !== undefined){
let data37 = data.editedAt;
const _errs120 = errors;
if((!(((typeof data37 == "number") && (!(data37 % 1) && !isNaN(data37))) && (isFinite(data37)))) && (data37 !== null)){
let dataType39 = typeof data37;
let coerced39 = undefined;
if(dataType39 == 'object' && Array.isArray(data37) && data37.length == 1){
data37 = data37[0];
dataType39 = typeof data37;
if((((typeof data37 == "number") && (!(data37 % 1) && !isNaN(data37))) && (isFinite(data37))) && (data37 === null)){
coerced39 = data37;
}
}
if(!(coerced39 !== undefined)){
if(dataType39 === "boolean" || data37 === null
              || (dataType39 === "string" && data37 && data37 == +data37 && !(data37 % 1))){
coerced39 = +data37;
}
else if(data37 === "" || data37 === 0 || data37 === false){
coerced39 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/editedAt",schemaPath:"#/properties/editedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced39 !== undefined){
data37 = coerced39;
if(data !== undefined){
data["editedAt"] = coerced39;
}
}
}
var valid0 = _errs120 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deletedAt !== undefined){
let data38 = data.deletedAt;
const _errs123 = errors;
if((!(((typeof data38 == "number") && (!(data38 % 1) && !isNaN(data38))) && (isFinite(data38)))) && (data38 !== null)){
let dataType40 = typeof data38;
let coerced40 = undefined;
if(dataType40 == 'object' && Array.isArray(data38) && data38.length == 1){
data38 = data38[0];
dataType40 = typeof data38;
if((((typeof data38 == "number") && (!(data38 % 1) && !isNaN(data38))) && (isFinite(data38))) && (data38 === null)){
coerced40 = data38;
}
}
if(!(coerced40 !== undefined)){
if(dataType40 === "boolean" || data38 === null
              || (dataType40 === "string" && data38 && data38 == +data38 && !(data38 % 1))){
coerced40 = +data38;
}
else if(data38 === "" || data38 === 0 || data38 === false){
coerced40 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/deletedAt",schemaPath:"#/properties/deletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced40 !== undefined){
data38 = coerced40;
if(data !== undefined){
data["deletedAt"] = coerced40;
}
}
}
var valid0 = _errs123 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverCreatedAt !== undefined){
let data39 = data.receiverCreatedAt;
const _errs126 = errors;
if((!(((typeof data39 == "number") && (!(data39 % 1) && !isNaN(data39))) && (isFinite(data39)))) && (data39 !== null)){
let dataType41 = typeof data39;
let coerced41 = undefined;
if(dataType41 == 'object' && Array.isArray(data39) && data39.length == 1){
data39 = data39[0];
dataType41 = typeof data39;
if((((typeof data39 == "number") && (!(data39 % 1) && !isNaN(data39))) && (isFinite(data39))) && (data39 === null)){
coerced41 = data39;
}
}
if(!(coerced41 !== undefined)){
if(dataType41 === "boolean" || data39 === null
              || (dataType41 === "string" && data39 && data39 == +data39 && !(data39 % 1))){
coerced41 = +data39;
}
else if(data39 === "" || data39 === 0 || data39 === false){
coerced41 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverCreatedAt",schemaPath:"#/properties/receiverCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced41 !== undefined){
data39 = coerced41;
if(data !== undefined){
data["receiverCreatedAt"] = coerced41;
}
}
}
var valid0 = _errs126 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverEditedAt !== undefined){
let data40 = data.receiverEditedAt;
const _errs129 = errors;
if((!(((typeof data40 == "number") && (!(data40 % 1) && !isNaN(data40))) && (isFinite(data40)))) && (data40 !== null)){
let dataType42 = typeof data40;
let coerced42 = undefined;
if(dataType42 == 'object' && Array.isArray(data40) && data40.length == 1){
data40 = data40[0];
dataType42 = typeof data40;
if((((typeof data40 == "number") && (!(data40 % 1) && !isNaN(data40))) && (isFinite(data40))) && (data40 === null)){
coerced42 = data40;
}
}
if(!(coerced42 !== undefined)){
if(dataType42 === "boolean" || data40 === null
              || (dataType42 === "string" && data40 && data40 == +data40 && !(data40 % 1))){
coerced42 = +data40;
}
else if(data40 === "" || data40 === 0 || data40 === false){
coerced42 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverEditedAt",schemaPath:"#/properties/receiverEditedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced42 !== undefined){
data40 = coerced42;
if(data !== undefined){
data["receiverEditedAt"] = coerced42;
}
}
}
var valid0 = _errs129 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverDeletedAt !== undefined){
let data41 = data.receiverDeletedAt;
const _errs132 = errors;
if((!(((typeof data41 == "number") && (!(data41 % 1) && !isNaN(data41))) && (isFinite(data41)))) && (data41 !== null)){
let dataType43 = typeof data41;
let coerced43 = undefined;
if(dataType43 == 'object' && Array.isArray(data41) && data41.length == 1){
data41 = data41[0];
dataType43 = typeof data41;
if((((typeof data41 == "number") && (!(data41 % 1) && !isNaN(data41))) && (isFinite(data41))) && (data41 === null)){
coerced43 = data41;
}
}
if(!(coerced43 !== undefined)){
if(dataType43 === "boolean" || data41 === null
              || (dataType43 === "string" && data41 && data41 == +data41 && !(data41 % 1))){
coerced43 = +data41;
}
else if(data41 === "" || data41 === 0 || data41 === false){
coerced43 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverDeletedAt",schemaPath:"#/properties/receiverDeletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced43 !== undefined){
data41 = coerced43;
if(data !== undefined){
data["receiverDeletedAt"] = coerced43;
}
}
}
var valid0 = _errs132 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionCreatedAt !== undefined){
let data42 = data.revisionCreatedAt;
const _errs135 = errors;
if(!(((typeof data42 == "number") && (!(data42 % 1) && !isNaN(data42))) && (isFinite(data42)))){
let dataType44 = typeof data42;
let coerced44 = undefined;
if(dataType44 == 'object' && Array.isArray(data42) && data42.length == 1){
data42 = data42[0];
dataType44 = typeof data42;
if(((typeof data42 == "number") && (!(data42 % 1) && !isNaN(data42))) && (isFinite(data42))){
coerced44 = data42;
}
}
if(!(coerced44 !== undefined)){
if(dataType44 === "boolean" || data42 === null
              || (dataType44 === "string" && data42 && data42 == +data42 && !(data42 % 1))){
coerced44 = +data42;
}
else {
validate154.errors = [{instancePath:instancePath+"/revisionCreatedAt",schemaPath:"#/properties/revisionCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced44 !== undefined){
data42 = coerced44;
if(data !== undefined){
data["revisionCreatedAt"] = coerced44;
}
}
}
var valid0 = _errs135 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverRevisionCreatedAt !== undefined){
let data43 = data.receiverRevisionCreatedAt;
const _errs137 = errors;
if((!(((typeof data43 == "number") && (!(data43 % 1) && !isNaN(data43))) && (isFinite(data43)))) && (data43 !== null)){
let dataType45 = typeof data43;
let coerced45 = undefined;
if(dataType45 == 'object' && Array.isArray(data43) && data43.length == 1){
data43 = data43[0];
dataType45 = typeof data43;
if((((typeof data43 == "number") && (!(data43 % 1) && !isNaN(data43))) && (isFinite(data43))) && (data43 === null)){
coerced45 = data43;
}
}
if(!(coerced45 !== undefined)){
if(dataType45 === "boolean" || data43 === null
              || (dataType45 === "string" && data43 && data43 == +data43 && !(data43 % 1))){
coerced45 = +data43;
}
else if(data43 === "" || data43 === 0 || data43 === false){
coerced45 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/receiverRevisionCreatedAt",schemaPath:"#/properties/receiverRevisionCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced45 !== undefined){
data43 = coerced45;
if(data !== undefined){
data["receiverRevisionCreatedAt"] = coerced45;
}
}
}
var valid0 = _errs137 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data44 = data.deadline;
const _errs140 = errors;
if((!(((typeof data44 == "number") && (!(data44 % 1) && !isNaN(data44))) && (isFinite(data44)))) && (data44 !== null)){
let dataType46 = typeof data44;
let coerced46 = undefined;
if(dataType46 == 'object' && Array.isArray(data44) && data44.length == 1){
data44 = data44[0];
dataType46 = typeof data44;
if((((typeof data44 == "number") && (!(data44 % 1) && !isNaN(data44))) && (isFinite(data44))) && (data44 === null)){
coerced46 = data44;
}
}
if(!(coerced46 !== undefined)){
if(dataType46 === "boolean" || data44 === null
              || (dataType46 === "string" && data44 && data44 == +data44 && !(data44 % 1))){
coerced46 = +data44;
}
else if(data44 === "" || data44 === 0 || data44 === false){
coerced46 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced46 !== undefined){
data44 = coerced46;
if(data !== undefined){
data["deadline"] = coerced46;
}
}
}
var valid0 = _errs140 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data45 = data.digest;
const _errs143 = errors;
if((typeof data45 !== "string") && (data45 !== null)){
let dataType47 = typeof data45;
let coerced47 = undefined;
if(dataType47 == 'object' && Array.isArray(data45) && data45.length == 1){
data45 = data45[0];
dataType47 = typeof data45;
if((typeof data45 === "string") && (data45 === null)){
coerced47 = data45;
}
}
if(!(coerced47 !== undefined)){
if(dataType47 == "number" || dataType47 == "boolean"){
coerced47 = "" + data45;
}
else if(data45 === null){
coerced47 = "";
}
else if(data45 === "" || data45 === 0 || data45 === false){
coerced47 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced47 !== undefined){
data45 = coerced47;
if(data !== undefined){
data["digest"] = coerced47;
}
}
}
var valid0 = _errs143 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data46 = data.signature;
const _errs146 = errors;
if((typeof data46 !== "string") && (data46 !== null)){
let dataType48 = typeof data46;
let coerced48 = undefined;
if(dataType48 == 'object' && Array.isArray(data46) && data46.length == 1){
data46 = data46[0];
dataType48 = typeof data46;
if((typeof data46 === "string") && (data46 === null)){
coerced48 = data46;
}
}
if(!(coerced48 !== undefined)){
if(dataType48 == "number" || dataType48 == "boolean"){
coerced48 = "" + data46;
}
else if(data46 === null){
coerced48 = "";
}
else if(data46 === "" || data46 === 0 || data46 === false){
coerced48 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced48 !== undefined){
data46 = coerced48;
if(data !== undefined){
data["signature"] = coerced48;
}
}
}
var valid0 = _errs146 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data47 = data.signatureVersion;
const _errs149 = errors;
if((!(((typeof data47 == "number") && (!(data47 % 1) && !isNaN(data47))) && (isFinite(data47)))) && (data47 !== null)){
let dataType49 = typeof data47;
let coerced49 = undefined;
if(dataType49 == 'object' && Array.isArray(data47) && data47.length == 1){
data47 = data47[0];
dataType49 = typeof data47;
if((((typeof data47 == "number") && (!(data47 % 1) && !isNaN(data47))) && (isFinite(data47))) && (data47 === null)){
coerced49 = data47;
}
}
if(!(coerced49 !== undefined)){
if(dataType49 === "boolean" || data47 === null
              || (dataType49 === "string" && data47 && data47 == +data47 && !(data47 % 1))){
coerced49 = +data47;
}
else if(data47 === "" || data47 === 0 || data47 === false){
coerced49 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced49 !== undefined){
data47 = coerced49;
if(data !== undefined){
data["signatureVersion"] = coerced49;
}
}
}
var valid0 = _errs149 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedReferences !== undefined){
let data48 = data.feedReferences;
const _errs152 = errors;
if((!(Array.isArray(data48))) && (data48 !== null)){
let dataType50 = typeof data48;
let coerced50 = undefined;
if(dataType50 == 'object' && Array.isArray(data48) && data48.length == 1){
data48 = data48[0];
dataType50 = typeof data48;
if((Array.isArray(data48)) && (data48 === null)){
coerced50 = data48;
}
}
if(!(coerced50 !== undefined)){
if(dataType50 === "string" || dataType50 === "number"
              || dataType50 === "boolean" || data48 === null){
coerced50 = [data48];
}
else if(data48 === "" || data48 === 0 || data48 === false){
coerced50 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/feedReferences",schemaPath:"#/properties/feedReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced50 !== undefined){
data48 = coerced50;
if(data !== undefined){
data["feedReferences"] = coerced50;
}
}
}
if(errors === _errs152){
if(Array.isArray(data48)){
var valid11 = true;
const len1 = data48.length;
for(let i1=0; i1<len1; i1++){
const _errs155 = errors;
if(!(validate50(data48[i1], {instancePath:instancePath+"/feedReferences/" + i1,parentData:data48,parentDataProperty:i1,rootData}))){
vErrors = vErrors === null ? validate50.errors : vErrors.concat(validate50.errors);
errors = vErrors.length;
}
var valid11 = _errs155 === errors;
if(!valid11){
break;
}
}
}
}
var valid0 = _errs152 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedInstants !== undefined){
let data50 = data.blockedInstants;
const _errs156 = errors;
if((!(Array.isArray(data50))) && (data50 !== null)){
let dataType51 = typeof data50;
let coerced51 = undefined;
if(dataType51 == 'object' && Array.isArray(data50) && data50.length == 1){
data50 = data50[0];
dataType51 = typeof data50;
if((Array.isArray(data50)) && (data50 === null)){
coerced51 = data50;
}
}
if(!(coerced51 !== undefined)){
if(dataType51 === "string" || dataType51 === "number"
              || dataType51 === "boolean" || data50 === null){
coerced51 = [data50];
}
else if(data50 === "" || data50 === 0 || data50 === false){
coerced51 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants",schemaPath:"#/properties/blockedInstants/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced51 !== undefined){
data50 = coerced51;
if(data !== undefined){
data["blockedInstants"] = coerced51;
}
}
}
if(errors === _errs156){
if(Array.isArray(data50)){
var valid12 = true;
const len2 = data50.length;
for(let i2=0; i2<len2; i2++){
let data51 = data50[i2];
const _errs159 = errors;
const _errs160 = errors;
if(errors === _errs160){
if(data51 && typeof data51 == "object" && !Array.isArray(data51)){
let missing3;
if(((data51.id === undefined) && (missing3 = "id")) || ((data51.storyType === undefined) && (missing3 = "storyType"))){
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2,schemaPath:"node#/definitions/BlockedPostingInstantInfo/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];
return false;
}
else {
const _errs162 = errors;
for(const key4 in data51){
if(!((((key4 === "id") || (key4 === "storyType")) || (key4 === "remoteOwnerName")) || (key4 === "deadline"))){
delete data51[key4];
}
}
if(_errs162 === errors){
if(data51.id !== undefined){
let data52 = data51.id;
const _errs163 = errors;
if(typeof data52 !== "string"){
let dataType52 = typeof data52;
let coerced52 = undefined;
if(dataType52 == 'object' && Array.isArray(data52) && data52.length == 1){
data52 = data52[0];
dataType52 = typeof data52;
if(typeof data52 === "string"){
coerced52 = data52;
}
}
if(!(coerced52 !== undefined)){
if(dataType52 == "number" || dataType52 == "boolean"){
coerced52 = "" + data52;
}
else if(data52 === null){
coerced52 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2+"/id",schemaPath:"node#/definitions/BlockedPostingInstantInfo/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced52 !== undefined){
data52 = coerced52;
if(data51 !== undefined){
data51["id"] = coerced52;
}
}
}
var valid14 = _errs163 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data51.storyType !== undefined){
let data53 = data51.storyType;
const _errs165 = errors;
if(typeof data53 !== "string"){
let dataType53 = typeof data53;
let coerced53 = undefined;
if(dataType53 == 'object' && Array.isArray(data53) && data53.length == 1){
data53 = data53[0];
dataType53 = typeof data53;
if(typeof data53 === "string"){
coerced53 = data53;
}
}
if(!(coerced53 !== undefined)){
if(dataType53 == "number" || dataType53 == "boolean"){
coerced53 = "" + data53;
}
else if(data53 === null){
coerced53 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2+"/storyType",schemaPath:"node#/definitions/BlockedPostingInstantInfo/properties/storyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced53 !== undefined){
data53 = coerced53;
if(data51 !== undefined){
data51["storyType"] = coerced53;
}
}
}
var valid14 = _errs165 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data51.remoteOwnerName !== undefined){
let data54 = data51.remoteOwnerName;
const _errs167 = errors;
if((typeof data54 !== "string") && (data54 !== null)){
let dataType54 = typeof data54;
let coerced54 = undefined;
if(dataType54 == 'object' && Array.isArray(data54) && data54.length == 1){
data54 = data54[0];
dataType54 = typeof data54;
if((typeof data54 === "string") && (data54 === null)){
coerced54 = data54;
}
}
if(!(coerced54 !== undefined)){
if(dataType54 == "number" || dataType54 == "boolean"){
coerced54 = "" + data54;
}
else if(data54 === null){
coerced54 = "";
}
else if(data54 === "" || data54 === 0 || data54 === false){
coerced54 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2+"/remoteOwnerName",schemaPath:"node#/definitions/BlockedPostingInstantInfo/properties/remoteOwnerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced54 !== undefined){
data54 = coerced54;
if(data51 !== undefined){
data51["remoteOwnerName"] = coerced54;
}
}
}
var valid14 = _errs167 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data51.deadline !== undefined){
let data55 = data51.deadline;
const _errs170 = errors;
if((!(((typeof data55 == "number") && (!(data55 % 1) && !isNaN(data55))) && (isFinite(data55)))) && (data55 !== null)){
let dataType55 = typeof data55;
let coerced55 = undefined;
if(dataType55 == 'object' && Array.isArray(data55) && data55.length == 1){
data55 = data55[0];
dataType55 = typeof data55;
if((((typeof data55 == "number") && (!(data55 % 1) && !isNaN(data55))) && (isFinite(data55))) && (data55 === null)){
coerced55 = data55;
}
}
if(!(coerced55 !== undefined)){
if(dataType55 === "boolean" || data55 === null
              || (dataType55 === "string" && data55 && data55 == +data55 && !(data55 % 1))){
coerced55 = +data55;
}
else if(data55 === "" || data55 === 0 || data55 === false){
coerced55 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2+"/deadline",schemaPath:"node#/definitions/BlockedPostingInstantInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced55 !== undefined){
data55 = coerced55;
if(data51 !== undefined){
data51["deadline"] = coerced55;
}
}
}
var valid14 = _errs170 === errors;
}
else {
var valid14 = true;
}
}
}
}
}
}
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedInstants/" + i2,schemaPath:"node#/definitions/BlockedPostingInstantInfo/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid12 = _errs159 === errors;
if(!valid12){
break;
}
}
}
}
var valid0 = _errs156 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data56 = data.operations;
const _errs173 = errors;
const _errs174 = errors;
let valid15 = false;
const _errs175 = errors;
if((!(data56 && typeof data56 == "object" && !Array.isArray(data56))) && (data56 !== null)){
let dataType56 = typeof data56;
let coerced56 = undefined;
if(dataType56 == 'object' && Array.isArray(data56) && data56.length == 1){
data56 = data56[0];
dataType56 = typeof data56;
if((data56 && typeof data56 == "object" && !Array.isArray(data56)) && (data56 === null)){
coerced56 = data56;
}
}
if(!(coerced56 !== undefined)){
if(data56 === "" || data56 === 0 || data56 === false){
coerced56 = null;
}
else {
const err26 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced56 !== undefined){
data56 = coerced56;
if(data !== undefined){
data["operations"] = coerced56;
}
}
}
const _errs176 = errors;
if(errors === _errs176){
if(data56 && typeof data56 == "object" && !Array.isArray(data56)){
const _errs178 = errors;
for(const key5 in data56){
if(!(func2.call(schema19.properties, key5))){
delete data56[key5];
}
}
if(_errs178 === errors){
if(data56.view !== undefined){
let data57 = data56.view;
const _errs179 = errors;
if((typeof data57 !== "string") && (data57 !== null)){
let dataType57 = typeof data57;
let coerced57 = undefined;
if(dataType57 == 'object' && Array.isArray(data57) && data57.length == 1){
data57 = data57[0];
dataType57 = typeof data57;
if((typeof data57 === "string") && (data57 === null)){
coerced57 = data57;
}
}
if(!(coerced57 !== undefined)){
if(dataType57 == "number" || dataType57 == "boolean"){
coerced57 = "" + data57;
}
else if(data57 === null){
coerced57 = "";
}
else if(data57 === "" || data57 === 0 || data57 === false){
coerced57 = null;
}
else {
const err27 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/PostingOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
if(coerced57 !== undefined){
data57 = coerced57;
if(data56 !== undefined){
data56["view"] = coerced57;
}
}
}
var valid17 = _errs179 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.edit !== undefined){
let data58 = data56.edit;
const _errs182 = errors;
if((typeof data58 !== "string") && (data58 !== null)){
let dataType58 = typeof data58;
let coerced58 = undefined;
if(dataType58 == 'object' && Array.isArray(data58) && data58.length == 1){
data58 = data58[0];
dataType58 = typeof data58;
if((typeof data58 === "string") && (data58 === null)){
coerced58 = data58;
}
}
if(!(coerced58 !== undefined)){
if(dataType58 == "number" || dataType58 == "boolean"){
coerced58 = "" + data58;
}
else if(data58 === null){
coerced58 = "";
}
else if(data58 === "" || data58 === 0 || data58 === false){
coerced58 = null;
}
else {
const err28 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/PostingOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced58 !== undefined){
data58 = coerced58;
if(data56 !== undefined){
data56["edit"] = coerced58;
}
}
}
var valid17 = _errs182 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.delete !== undefined){
let data59 = data56.delete;
const _errs185 = errors;
if((typeof data59 !== "string") && (data59 !== null)){
let dataType59 = typeof data59;
let coerced59 = undefined;
if(dataType59 == 'object' && Array.isArray(data59) && data59.length == 1){
data59 = data59[0];
dataType59 = typeof data59;
if((typeof data59 === "string") && (data59 === null)){
coerced59 = data59;
}
}
if(!(coerced59 !== undefined)){
if(dataType59 == "number" || dataType59 == "boolean"){
coerced59 = "" + data59;
}
else if(data59 === null){
coerced59 = "";
}
else if(data59 === "" || data59 === 0 || data59 === false){
coerced59 = null;
}
else {
const err29 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/PostingOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(coerced59 !== undefined){
data59 = coerced59;
if(data56 !== undefined){
data56["delete"] = coerced59;
}
}
}
var valid17 = _errs185 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewComments !== undefined){
let data60 = data56.viewComments;
const _errs188 = errors;
if((typeof data60 !== "string") && (data60 !== null)){
let dataType60 = typeof data60;
let coerced60 = undefined;
if(dataType60 == 'object' && Array.isArray(data60) && data60.length == 1){
data60 = data60[0];
dataType60 = typeof data60;
if((typeof data60 === "string") && (data60 === null)){
coerced60 = data60;
}
}
if(!(coerced60 !== undefined)){
if(dataType60 == "number" || dataType60 == "boolean"){
coerced60 = "" + data60;
}
else if(data60 === null){
coerced60 = "";
}
else if(data60 === "" || data60 === 0 || data60 === false){
coerced60 = null;
}
else {
const err30 = {instancePath:instancePath+"/operations/viewComments",schemaPath:"node#/definitions/PostingOperations/properties/viewComments/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
if(coerced60 !== undefined){
data60 = coerced60;
if(data56 !== undefined){
data56["viewComments"] = coerced60;
}
}
}
var valid17 = _errs188 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.addComment !== undefined){
let data61 = data56.addComment;
const _errs191 = errors;
if((typeof data61 !== "string") && (data61 !== null)){
let dataType61 = typeof data61;
let coerced61 = undefined;
if(dataType61 == 'object' && Array.isArray(data61) && data61.length == 1){
data61 = data61[0];
dataType61 = typeof data61;
if((typeof data61 === "string") && (data61 === null)){
coerced61 = data61;
}
}
if(!(coerced61 !== undefined)){
if(dataType61 == "number" || dataType61 == "boolean"){
coerced61 = "" + data61;
}
else if(data61 === null){
coerced61 = "";
}
else if(data61 === "" || data61 === 0 || data61 === false){
coerced61 = null;
}
else {
const err31 = {instancePath:instancePath+"/operations/addComment",schemaPath:"node#/definitions/PostingOperations/properties/addComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
if(coerced61 !== undefined){
data61 = coerced61;
if(data56 !== undefined){
data56["addComment"] = coerced61;
}
}
}
var valid17 = _errs191 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.overrideComment !== undefined){
let data62 = data56.overrideComment;
const _errs194 = errors;
if((typeof data62 !== "string") && (data62 !== null)){
let dataType62 = typeof data62;
let coerced62 = undefined;
if(dataType62 == 'object' && Array.isArray(data62) && data62.length == 1){
data62 = data62[0];
dataType62 = typeof data62;
if((typeof data62 === "string") && (data62 === null)){
coerced62 = data62;
}
}
if(!(coerced62 !== undefined)){
if(dataType62 == "number" || dataType62 == "boolean"){
coerced62 = "" + data62;
}
else if(data62 === null){
coerced62 = "";
}
else if(data62 === "" || data62 === 0 || data62 === false){
coerced62 = null;
}
else {
const err32 = {instancePath:instancePath+"/operations/overrideComment",schemaPath:"node#/definitions/PostingOperations/properties/overrideComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(coerced62 !== undefined){
data62 = coerced62;
if(data56 !== undefined){
data56["overrideComment"] = coerced62;
}
}
}
var valid17 = _errs194 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewReactions !== undefined){
let data63 = data56.viewReactions;
const _errs197 = errors;
if((typeof data63 !== "string") && (data63 !== null)){
let dataType63 = typeof data63;
let coerced63 = undefined;
if(dataType63 == 'object' && Array.isArray(data63) && data63.length == 1){
data63 = data63[0];
dataType63 = typeof data63;
if((typeof data63 === "string") && (data63 === null)){
coerced63 = data63;
}
}
if(!(coerced63 !== undefined)){
if(dataType63 == "number" || dataType63 == "boolean"){
coerced63 = "" + data63;
}
else if(data63 === null){
coerced63 = "";
}
else if(data63 === "" || data63 === 0 || data63 === false){
coerced63 = null;
}
else {
const err33 = {instancePath:instancePath+"/operations/viewReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(coerced63 !== undefined){
data63 = coerced63;
if(data56 !== undefined){
data56["viewReactions"] = coerced63;
}
}
}
var valid17 = _errs197 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewNegativeReactions !== undefined){
let data64 = data56.viewNegativeReactions;
const _errs200 = errors;
if((typeof data64 !== "string") && (data64 !== null)){
let dataType64 = typeof data64;
let coerced64 = undefined;
if(dataType64 == 'object' && Array.isArray(data64) && data64.length == 1){
data64 = data64[0];
dataType64 = typeof data64;
if((typeof data64 === "string") && (data64 === null)){
coerced64 = data64;
}
}
if(!(coerced64 !== undefined)){
if(dataType64 == "number" || dataType64 == "boolean"){
coerced64 = "" + data64;
}
else if(data64 === null){
coerced64 = "";
}
else if(data64 === "" || data64 === 0 || data64 === false){
coerced64 = null;
}
else {
const err34 = {instancePath:instancePath+"/operations/viewNegativeReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
if(coerced64 !== undefined){
data64 = coerced64;
if(data56 !== undefined){
data56["viewNegativeReactions"] = coerced64;
}
}
}
var valid17 = _errs200 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewReactionTotals !== undefined){
let data65 = data56.viewReactionTotals;
const _errs203 = errors;
if((typeof data65 !== "string") && (data65 !== null)){
let dataType65 = typeof data65;
let coerced65 = undefined;
if(dataType65 == 'object' && Array.isArray(data65) && data65.length == 1){
data65 = data65[0];
dataType65 = typeof data65;
if((typeof data65 === "string") && (data65 === null)){
coerced65 = data65;
}
}
if(!(coerced65 !== undefined)){
if(dataType65 == "number" || dataType65 == "boolean"){
coerced65 = "" + data65;
}
else if(data65 === null){
coerced65 = "";
}
else if(data65 === "" || data65 === 0 || data65 === false){
coerced65 = null;
}
else {
const err35 = {instancePath:instancePath+"/operations/viewReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(coerced65 !== undefined){
data65 = coerced65;
if(data56 !== undefined){
data56["viewReactionTotals"] = coerced65;
}
}
}
var valid17 = _errs203 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewNegativeReactionTotals !== undefined){
let data66 = data56.viewNegativeReactionTotals;
const _errs206 = errors;
if((typeof data66 !== "string") && (data66 !== null)){
let dataType66 = typeof data66;
let coerced66 = undefined;
if(dataType66 == 'object' && Array.isArray(data66) && data66.length == 1){
data66 = data66[0];
dataType66 = typeof data66;
if((typeof data66 === "string") && (data66 === null)){
coerced66 = data66;
}
}
if(!(coerced66 !== undefined)){
if(dataType66 == "number" || dataType66 == "boolean"){
coerced66 = "" + data66;
}
else if(data66 === null){
coerced66 = "";
}
else if(data66 === "" || data66 === 0 || data66 === false){
coerced66 = null;
}
else {
const err36 = {instancePath:instancePath+"/operations/viewNegativeReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(coerced66 !== undefined){
data66 = coerced66;
if(data56 !== undefined){
data56["viewNegativeReactionTotals"] = coerced66;
}
}
}
var valid17 = _errs206 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewReactionRatios !== undefined){
let data67 = data56.viewReactionRatios;
const _errs209 = errors;
if((typeof data67 !== "string") && (data67 !== null)){
let dataType67 = typeof data67;
let coerced67 = undefined;
if(dataType67 == 'object' && Array.isArray(data67) && data67.length == 1){
data67 = data67[0];
dataType67 = typeof data67;
if((typeof data67 === "string") && (data67 === null)){
coerced67 = data67;
}
}
if(!(coerced67 !== undefined)){
if(dataType67 == "number" || dataType67 == "boolean"){
coerced67 = "" + data67;
}
else if(data67 === null){
coerced67 = "";
}
else if(data67 === "" || data67 === 0 || data67 === false){
coerced67 = null;
}
else {
const err37 = {instancePath:instancePath+"/operations/viewReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(coerced67 !== undefined){
data67 = coerced67;
if(data56 !== undefined){
data56["viewReactionRatios"] = coerced67;
}
}
}
var valid17 = _errs209 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.viewNegativeReactionRatios !== undefined){
let data68 = data56.viewNegativeReactionRatios;
const _errs212 = errors;
if((typeof data68 !== "string") && (data68 !== null)){
let dataType68 = typeof data68;
let coerced68 = undefined;
if(dataType68 == 'object' && Array.isArray(data68) && data68.length == 1){
data68 = data68[0];
dataType68 = typeof data68;
if((typeof data68 === "string") && (data68 === null)){
coerced68 = data68;
}
}
if(!(coerced68 !== undefined)){
if(dataType68 == "number" || dataType68 == "boolean"){
coerced68 = "" + data68;
}
else if(data68 === null){
coerced68 = "";
}
else if(data68 === "" || data68 === 0 || data68 === false){
coerced68 = null;
}
else {
const err38 = {instancePath:instancePath+"/operations/viewNegativeReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
if(coerced68 !== undefined){
data68 = coerced68;
if(data56 !== undefined){
data56["viewNegativeReactionRatios"] = coerced68;
}
}
}
var valid17 = _errs212 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.addReaction !== undefined){
let data69 = data56.addReaction;
const _errs215 = errors;
if((typeof data69 !== "string") && (data69 !== null)){
let dataType69 = typeof data69;
let coerced69 = undefined;
if(dataType69 == 'object' && Array.isArray(data69) && data69.length == 1){
data69 = data69[0];
dataType69 = typeof data69;
if((typeof data69 === "string") && (data69 === null)){
coerced69 = data69;
}
}
if(!(coerced69 !== undefined)){
if(dataType69 == "number" || dataType69 == "boolean"){
coerced69 = "" + data69;
}
else if(data69 === null){
coerced69 = "";
}
else if(data69 === "" || data69 === 0 || data69 === false){
coerced69 = null;
}
else {
const err39 = {instancePath:instancePath+"/operations/addReaction",schemaPath:"node#/definitions/PostingOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
if(coerced69 !== undefined){
data69 = coerced69;
if(data56 !== undefined){
data56["addReaction"] = coerced69;
}
}
}
var valid17 = _errs215 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.addNegativeReaction !== undefined){
let data70 = data56.addNegativeReaction;
const _errs218 = errors;
if((typeof data70 !== "string") && (data70 !== null)){
let dataType70 = typeof data70;
let coerced70 = undefined;
if(dataType70 == 'object' && Array.isArray(data70) && data70.length == 1){
data70 = data70[0];
dataType70 = typeof data70;
if((typeof data70 === "string") && (data70 === null)){
coerced70 = data70;
}
}
if(!(coerced70 !== undefined)){
if(dataType70 == "number" || dataType70 == "boolean"){
coerced70 = "" + data70;
}
else if(data70 === null){
coerced70 = "";
}
else if(data70 === "" || data70 === 0 || data70 === false){
coerced70 = null;
}
else {
const err40 = {instancePath:instancePath+"/operations/addNegativeReaction",schemaPath:"node#/definitions/PostingOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
}
}
if(coerced70 !== undefined){
data70 = coerced70;
if(data56 !== undefined){
data56["addNegativeReaction"] = coerced70;
}
}
}
var valid17 = _errs218 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.overrideReaction !== undefined){
let data71 = data56.overrideReaction;
const _errs221 = errors;
if((typeof data71 !== "string") && (data71 !== null)){
let dataType71 = typeof data71;
let coerced71 = undefined;
if(dataType71 == 'object' && Array.isArray(data71) && data71.length == 1){
data71 = data71[0];
dataType71 = typeof data71;
if((typeof data71 === "string") && (data71 === null)){
coerced71 = data71;
}
}
if(!(coerced71 !== undefined)){
if(dataType71 == "number" || dataType71 == "boolean"){
coerced71 = "" + data71;
}
else if(data71 === null){
coerced71 = "";
}
else if(data71 === "" || data71 === 0 || data71 === false){
coerced71 = null;
}
else {
const err41 = {instancePath:instancePath+"/operations/overrideReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
}
if(coerced71 !== undefined){
data71 = coerced71;
if(data56 !== undefined){
data56["overrideReaction"] = coerced71;
}
}
}
var valid17 = _errs221 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data56.overrideCommentReaction !== undefined){
let data72 = data56.overrideCommentReaction;
const _errs224 = errors;
if((typeof data72 !== "string") && (data72 !== null)){
let dataType72 = typeof data72;
let coerced72 = undefined;
if(dataType72 == 'object' && Array.isArray(data72) && data72.length == 1){
data72 = data72[0];
dataType72 = typeof data72;
if((typeof data72 === "string") && (data72 === null)){
coerced72 = data72;
}
}
if(!(coerced72 !== undefined)){
if(dataType72 == "number" || dataType72 == "boolean"){
coerced72 = "" + data72;
}
else if(data72 === null){
coerced72 = "";
}
else if(data72 === "" || data72 === 0 || data72 === false){
coerced72 = null;
}
else {
const err42 = {instancePath:instancePath+"/operations/overrideCommentReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideCommentReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
}
}
if(coerced72 !== undefined){
data72 = coerced72;
if(data56 !== undefined){
data56["overrideCommentReaction"] = coerced72;
}
}
}
var valid17 = _errs224 === errors;
}
else {
var valid17 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err43 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/PostingOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
}
var _valid3 = _errs175 === errors;
valid15 = valid15 || _valid3;
if(!valid15){
const _errs229 = errors;
if(data56 !== null){
let dataType73 = typeof data56;
let coerced73 = undefined;
if(dataType73 == 'object' && Array.isArray(data56) && data56.length == 1){
data56 = data56[0];
dataType73 = typeof data56;
if(data56 === null){
coerced73 = data56;
}
}
if(!(coerced73 !== undefined)){
if(data56 === "" || data56 === 0 || data56 === false){
coerced73 = null;
}
else {
const err44 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
if(coerced73 !== undefined){
data56 = coerced73;
if(data !== undefined){
data["operations"] = coerced73;
}
}
}
var _valid3 = _errs229 === errors;
valid15 = valid15 || _valid3;
}
if(!valid15){
const err45 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs174;
if(vErrors !== null){
if(_errs174){
vErrors.length = _errs174;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs173 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverOperations !== undefined){
let data73 = data.receiverOperations;
const _errs231 = errors;
const _errs232 = errors;
let valid18 = false;
const _errs233 = errors;
if((!(data73 && typeof data73 == "object" && !Array.isArray(data73))) && (data73 !== null)){
let dataType74 = typeof data73;
let coerced74 = undefined;
if(dataType74 == 'object' && Array.isArray(data73) && data73.length == 1){
data73 = data73[0];
dataType74 = typeof data73;
if((data73 && typeof data73 == "object" && !Array.isArray(data73)) && (data73 === null)){
coerced74 = data73;
}
}
if(!(coerced74 !== undefined)){
if(data73 === "" || data73 === 0 || data73 === false){
coerced74 = null;
}
else {
const err46 = {instancePath:instancePath+"/receiverOperations",schemaPath:"#/properties/receiverOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
if(coerced74 !== undefined){
data73 = coerced74;
if(data !== undefined){
data["receiverOperations"] = coerced74;
}
}
}
const _errs234 = errors;
if(errors === _errs234){
if(data73 && typeof data73 == "object" && !Array.isArray(data73)){
const _errs236 = errors;
for(const key6 in data73){
if(!(func2.call(schema19.properties, key6))){
delete data73[key6];
}
}
if(_errs236 === errors){
if(data73.view !== undefined){
let data74 = data73.view;
const _errs237 = errors;
if((typeof data74 !== "string") && (data74 !== null)){
let dataType75 = typeof data74;
let coerced75 = undefined;
if(dataType75 == 'object' && Array.isArray(data74) && data74.length == 1){
data74 = data74[0];
dataType75 = typeof data74;
if((typeof data74 === "string") && (data74 === null)){
coerced75 = data74;
}
}
if(!(coerced75 !== undefined)){
if(dataType75 == "number" || dataType75 == "boolean"){
coerced75 = "" + data74;
}
else if(data74 === null){
coerced75 = "";
}
else if(data74 === "" || data74 === 0 || data74 === false){
coerced75 = null;
}
else {
const err47 = {instancePath:instancePath+"/receiverOperations/view",schemaPath:"node#/definitions/PostingOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
}
if(coerced75 !== undefined){
data74 = coerced75;
if(data73 !== undefined){
data73["view"] = coerced75;
}
}
}
var valid20 = _errs237 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.edit !== undefined){
let data75 = data73.edit;
const _errs240 = errors;
if((typeof data75 !== "string") && (data75 !== null)){
let dataType76 = typeof data75;
let coerced76 = undefined;
if(dataType76 == 'object' && Array.isArray(data75) && data75.length == 1){
data75 = data75[0];
dataType76 = typeof data75;
if((typeof data75 === "string") && (data75 === null)){
coerced76 = data75;
}
}
if(!(coerced76 !== undefined)){
if(dataType76 == "number" || dataType76 == "boolean"){
coerced76 = "" + data75;
}
else if(data75 === null){
coerced76 = "";
}
else if(data75 === "" || data75 === 0 || data75 === false){
coerced76 = null;
}
else {
const err48 = {instancePath:instancePath+"/receiverOperations/edit",schemaPath:"node#/definitions/PostingOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err48];
}
else {
vErrors.push(err48);
}
errors++;
}
}
if(coerced76 !== undefined){
data75 = coerced76;
if(data73 !== undefined){
data73["edit"] = coerced76;
}
}
}
var valid20 = _errs240 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.delete !== undefined){
let data76 = data73.delete;
const _errs243 = errors;
if((typeof data76 !== "string") && (data76 !== null)){
let dataType77 = typeof data76;
let coerced77 = undefined;
if(dataType77 == 'object' && Array.isArray(data76) && data76.length == 1){
data76 = data76[0];
dataType77 = typeof data76;
if((typeof data76 === "string") && (data76 === null)){
coerced77 = data76;
}
}
if(!(coerced77 !== undefined)){
if(dataType77 == "number" || dataType77 == "boolean"){
coerced77 = "" + data76;
}
else if(data76 === null){
coerced77 = "";
}
else if(data76 === "" || data76 === 0 || data76 === false){
coerced77 = null;
}
else {
const err49 = {instancePath:instancePath+"/receiverOperations/delete",schemaPath:"node#/definitions/PostingOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err49];
}
else {
vErrors.push(err49);
}
errors++;
}
}
if(coerced77 !== undefined){
data76 = coerced77;
if(data73 !== undefined){
data73["delete"] = coerced77;
}
}
}
var valid20 = _errs243 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewComments !== undefined){
let data77 = data73.viewComments;
const _errs246 = errors;
if((typeof data77 !== "string") && (data77 !== null)){
let dataType78 = typeof data77;
let coerced78 = undefined;
if(dataType78 == 'object' && Array.isArray(data77) && data77.length == 1){
data77 = data77[0];
dataType78 = typeof data77;
if((typeof data77 === "string") && (data77 === null)){
coerced78 = data77;
}
}
if(!(coerced78 !== undefined)){
if(dataType78 == "number" || dataType78 == "boolean"){
coerced78 = "" + data77;
}
else if(data77 === null){
coerced78 = "";
}
else if(data77 === "" || data77 === 0 || data77 === false){
coerced78 = null;
}
else {
const err50 = {instancePath:instancePath+"/receiverOperations/viewComments",schemaPath:"node#/definitions/PostingOperations/properties/viewComments/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err50];
}
else {
vErrors.push(err50);
}
errors++;
}
}
if(coerced78 !== undefined){
data77 = coerced78;
if(data73 !== undefined){
data73["viewComments"] = coerced78;
}
}
}
var valid20 = _errs246 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.addComment !== undefined){
let data78 = data73.addComment;
const _errs249 = errors;
if((typeof data78 !== "string") && (data78 !== null)){
let dataType79 = typeof data78;
let coerced79 = undefined;
if(dataType79 == 'object' && Array.isArray(data78) && data78.length == 1){
data78 = data78[0];
dataType79 = typeof data78;
if((typeof data78 === "string") && (data78 === null)){
coerced79 = data78;
}
}
if(!(coerced79 !== undefined)){
if(dataType79 == "number" || dataType79 == "boolean"){
coerced79 = "" + data78;
}
else if(data78 === null){
coerced79 = "";
}
else if(data78 === "" || data78 === 0 || data78 === false){
coerced79 = null;
}
else {
const err51 = {instancePath:instancePath+"/receiverOperations/addComment",schemaPath:"node#/definitions/PostingOperations/properties/addComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err51];
}
else {
vErrors.push(err51);
}
errors++;
}
}
if(coerced79 !== undefined){
data78 = coerced79;
if(data73 !== undefined){
data73["addComment"] = coerced79;
}
}
}
var valid20 = _errs249 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.overrideComment !== undefined){
let data79 = data73.overrideComment;
const _errs252 = errors;
if((typeof data79 !== "string") && (data79 !== null)){
let dataType80 = typeof data79;
let coerced80 = undefined;
if(dataType80 == 'object' && Array.isArray(data79) && data79.length == 1){
data79 = data79[0];
dataType80 = typeof data79;
if((typeof data79 === "string") && (data79 === null)){
coerced80 = data79;
}
}
if(!(coerced80 !== undefined)){
if(dataType80 == "number" || dataType80 == "boolean"){
coerced80 = "" + data79;
}
else if(data79 === null){
coerced80 = "";
}
else if(data79 === "" || data79 === 0 || data79 === false){
coerced80 = null;
}
else {
const err52 = {instancePath:instancePath+"/receiverOperations/overrideComment",schemaPath:"node#/definitions/PostingOperations/properties/overrideComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err52];
}
else {
vErrors.push(err52);
}
errors++;
}
}
if(coerced80 !== undefined){
data79 = coerced80;
if(data73 !== undefined){
data73["overrideComment"] = coerced80;
}
}
}
var valid20 = _errs252 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewReactions !== undefined){
let data80 = data73.viewReactions;
const _errs255 = errors;
if((typeof data80 !== "string") && (data80 !== null)){
let dataType81 = typeof data80;
let coerced81 = undefined;
if(dataType81 == 'object' && Array.isArray(data80) && data80.length == 1){
data80 = data80[0];
dataType81 = typeof data80;
if((typeof data80 === "string") && (data80 === null)){
coerced81 = data80;
}
}
if(!(coerced81 !== undefined)){
if(dataType81 == "number" || dataType81 == "boolean"){
coerced81 = "" + data80;
}
else if(data80 === null){
coerced81 = "";
}
else if(data80 === "" || data80 === 0 || data80 === false){
coerced81 = null;
}
else {
const err53 = {instancePath:instancePath+"/receiverOperations/viewReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err53];
}
else {
vErrors.push(err53);
}
errors++;
}
}
if(coerced81 !== undefined){
data80 = coerced81;
if(data73 !== undefined){
data73["viewReactions"] = coerced81;
}
}
}
var valid20 = _errs255 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewNegativeReactions !== undefined){
let data81 = data73.viewNegativeReactions;
const _errs258 = errors;
if((typeof data81 !== "string") && (data81 !== null)){
let dataType82 = typeof data81;
let coerced82 = undefined;
if(dataType82 == 'object' && Array.isArray(data81) && data81.length == 1){
data81 = data81[0];
dataType82 = typeof data81;
if((typeof data81 === "string") && (data81 === null)){
coerced82 = data81;
}
}
if(!(coerced82 !== undefined)){
if(dataType82 == "number" || dataType82 == "boolean"){
coerced82 = "" + data81;
}
else if(data81 === null){
coerced82 = "";
}
else if(data81 === "" || data81 === 0 || data81 === false){
coerced82 = null;
}
else {
const err54 = {instancePath:instancePath+"/receiverOperations/viewNegativeReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err54];
}
else {
vErrors.push(err54);
}
errors++;
}
}
if(coerced82 !== undefined){
data81 = coerced82;
if(data73 !== undefined){
data73["viewNegativeReactions"] = coerced82;
}
}
}
var valid20 = _errs258 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewReactionTotals !== undefined){
let data82 = data73.viewReactionTotals;
const _errs261 = errors;
if((typeof data82 !== "string") && (data82 !== null)){
let dataType83 = typeof data82;
let coerced83 = undefined;
if(dataType83 == 'object' && Array.isArray(data82) && data82.length == 1){
data82 = data82[0];
dataType83 = typeof data82;
if((typeof data82 === "string") && (data82 === null)){
coerced83 = data82;
}
}
if(!(coerced83 !== undefined)){
if(dataType83 == "number" || dataType83 == "boolean"){
coerced83 = "" + data82;
}
else if(data82 === null){
coerced83 = "";
}
else if(data82 === "" || data82 === 0 || data82 === false){
coerced83 = null;
}
else {
const err55 = {instancePath:instancePath+"/receiverOperations/viewReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err55];
}
else {
vErrors.push(err55);
}
errors++;
}
}
if(coerced83 !== undefined){
data82 = coerced83;
if(data73 !== undefined){
data73["viewReactionTotals"] = coerced83;
}
}
}
var valid20 = _errs261 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewNegativeReactionTotals !== undefined){
let data83 = data73.viewNegativeReactionTotals;
const _errs264 = errors;
if((typeof data83 !== "string") && (data83 !== null)){
let dataType84 = typeof data83;
let coerced84 = undefined;
if(dataType84 == 'object' && Array.isArray(data83) && data83.length == 1){
data83 = data83[0];
dataType84 = typeof data83;
if((typeof data83 === "string") && (data83 === null)){
coerced84 = data83;
}
}
if(!(coerced84 !== undefined)){
if(dataType84 == "number" || dataType84 == "boolean"){
coerced84 = "" + data83;
}
else if(data83 === null){
coerced84 = "";
}
else if(data83 === "" || data83 === 0 || data83 === false){
coerced84 = null;
}
else {
const err56 = {instancePath:instancePath+"/receiverOperations/viewNegativeReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err56];
}
else {
vErrors.push(err56);
}
errors++;
}
}
if(coerced84 !== undefined){
data83 = coerced84;
if(data73 !== undefined){
data73["viewNegativeReactionTotals"] = coerced84;
}
}
}
var valid20 = _errs264 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewReactionRatios !== undefined){
let data84 = data73.viewReactionRatios;
const _errs267 = errors;
if((typeof data84 !== "string") && (data84 !== null)){
let dataType85 = typeof data84;
let coerced85 = undefined;
if(dataType85 == 'object' && Array.isArray(data84) && data84.length == 1){
data84 = data84[0];
dataType85 = typeof data84;
if((typeof data84 === "string") && (data84 === null)){
coerced85 = data84;
}
}
if(!(coerced85 !== undefined)){
if(dataType85 == "number" || dataType85 == "boolean"){
coerced85 = "" + data84;
}
else if(data84 === null){
coerced85 = "";
}
else if(data84 === "" || data84 === 0 || data84 === false){
coerced85 = null;
}
else {
const err57 = {instancePath:instancePath+"/receiverOperations/viewReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err57];
}
else {
vErrors.push(err57);
}
errors++;
}
}
if(coerced85 !== undefined){
data84 = coerced85;
if(data73 !== undefined){
data73["viewReactionRatios"] = coerced85;
}
}
}
var valid20 = _errs267 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.viewNegativeReactionRatios !== undefined){
let data85 = data73.viewNegativeReactionRatios;
const _errs270 = errors;
if((typeof data85 !== "string") && (data85 !== null)){
let dataType86 = typeof data85;
let coerced86 = undefined;
if(dataType86 == 'object' && Array.isArray(data85) && data85.length == 1){
data85 = data85[0];
dataType86 = typeof data85;
if((typeof data85 === "string") && (data85 === null)){
coerced86 = data85;
}
}
if(!(coerced86 !== undefined)){
if(dataType86 == "number" || dataType86 == "boolean"){
coerced86 = "" + data85;
}
else if(data85 === null){
coerced86 = "";
}
else if(data85 === "" || data85 === 0 || data85 === false){
coerced86 = null;
}
else {
const err58 = {instancePath:instancePath+"/receiverOperations/viewNegativeReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err58];
}
else {
vErrors.push(err58);
}
errors++;
}
}
if(coerced86 !== undefined){
data85 = coerced86;
if(data73 !== undefined){
data73["viewNegativeReactionRatios"] = coerced86;
}
}
}
var valid20 = _errs270 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.addReaction !== undefined){
let data86 = data73.addReaction;
const _errs273 = errors;
if((typeof data86 !== "string") && (data86 !== null)){
let dataType87 = typeof data86;
let coerced87 = undefined;
if(dataType87 == 'object' && Array.isArray(data86) && data86.length == 1){
data86 = data86[0];
dataType87 = typeof data86;
if((typeof data86 === "string") && (data86 === null)){
coerced87 = data86;
}
}
if(!(coerced87 !== undefined)){
if(dataType87 == "number" || dataType87 == "boolean"){
coerced87 = "" + data86;
}
else if(data86 === null){
coerced87 = "";
}
else if(data86 === "" || data86 === 0 || data86 === false){
coerced87 = null;
}
else {
const err59 = {instancePath:instancePath+"/receiverOperations/addReaction",schemaPath:"node#/definitions/PostingOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err59];
}
else {
vErrors.push(err59);
}
errors++;
}
}
if(coerced87 !== undefined){
data86 = coerced87;
if(data73 !== undefined){
data73["addReaction"] = coerced87;
}
}
}
var valid20 = _errs273 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.addNegativeReaction !== undefined){
let data87 = data73.addNegativeReaction;
const _errs276 = errors;
if((typeof data87 !== "string") && (data87 !== null)){
let dataType88 = typeof data87;
let coerced88 = undefined;
if(dataType88 == 'object' && Array.isArray(data87) && data87.length == 1){
data87 = data87[0];
dataType88 = typeof data87;
if((typeof data87 === "string") && (data87 === null)){
coerced88 = data87;
}
}
if(!(coerced88 !== undefined)){
if(dataType88 == "number" || dataType88 == "boolean"){
coerced88 = "" + data87;
}
else if(data87 === null){
coerced88 = "";
}
else if(data87 === "" || data87 === 0 || data87 === false){
coerced88 = null;
}
else {
const err60 = {instancePath:instancePath+"/receiverOperations/addNegativeReaction",schemaPath:"node#/definitions/PostingOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err60];
}
else {
vErrors.push(err60);
}
errors++;
}
}
if(coerced88 !== undefined){
data87 = coerced88;
if(data73 !== undefined){
data73["addNegativeReaction"] = coerced88;
}
}
}
var valid20 = _errs276 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.overrideReaction !== undefined){
let data88 = data73.overrideReaction;
const _errs279 = errors;
if((typeof data88 !== "string") && (data88 !== null)){
let dataType89 = typeof data88;
let coerced89 = undefined;
if(dataType89 == 'object' && Array.isArray(data88) && data88.length == 1){
data88 = data88[0];
dataType89 = typeof data88;
if((typeof data88 === "string") && (data88 === null)){
coerced89 = data88;
}
}
if(!(coerced89 !== undefined)){
if(dataType89 == "number" || dataType89 == "boolean"){
coerced89 = "" + data88;
}
else if(data88 === null){
coerced89 = "";
}
else if(data88 === "" || data88 === 0 || data88 === false){
coerced89 = null;
}
else {
const err61 = {instancePath:instancePath+"/receiverOperations/overrideReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err61];
}
else {
vErrors.push(err61);
}
errors++;
}
}
if(coerced89 !== undefined){
data88 = coerced89;
if(data73 !== undefined){
data73["overrideReaction"] = coerced89;
}
}
}
var valid20 = _errs279 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data73.overrideCommentReaction !== undefined){
let data89 = data73.overrideCommentReaction;
const _errs282 = errors;
if((typeof data89 !== "string") && (data89 !== null)){
let dataType90 = typeof data89;
let coerced90 = undefined;
if(dataType90 == 'object' && Array.isArray(data89) && data89.length == 1){
data89 = data89[0];
dataType90 = typeof data89;
if((typeof data89 === "string") && (data89 === null)){
coerced90 = data89;
}
}
if(!(coerced90 !== undefined)){
if(dataType90 == "number" || dataType90 == "boolean"){
coerced90 = "" + data89;
}
else if(data89 === null){
coerced90 = "";
}
else if(data89 === "" || data89 === 0 || data89 === false){
coerced90 = null;
}
else {
const err62 = {instancePath:instancePath+"/receiverOperations/overrideCommentReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideCommentReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err62];
}
else {
vErrors.push(err62);
}
errors++;
}
}
if(coerced90 !== undefined){
data89 = coerced90;
if(data73 !== undefined){
data73["overrideCommentReaction"] = coerced90;
}
}
}
var valid20 = _errs282 === errors;
}
else {
var valid20 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err63 = {instancePath:instancePath+"/receiverOperations",schemaPath:"node#/definitions/PostingOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err63];
}
else {
vErrors.push(err63);
}
errors++;
}
}
var _valid4 = _errs233 === errors;
valid18 = valid18 || _valid4;
if(!valid18){
const _errs287 = errors;
if(data73 !== null){
let dataType91 = typeof data73;
let coerced91 = undefined;
if(dataType91 == 'object' && Array.isArray(data73) && data73.length == 1){
data73 = data73[0];
dataType91 = typeof data73;
if(data73 === null){
coerced91 = data73;
}
}
if(!(coerced91 !== undefined)){
if(data73 === "" || data73 === 0 || data73 === false){
coerced91 = null;
}
else {
const err64 = {instancePath:instancePath+"/receiverOperations",schemaPath:"#/properties/receiverOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err64];
}
else {
vErrors.push(err64);
}
errors++;
}
}
if(coerced91 !== undefined){
data73 = coerced91;
if(data !== undefined){
data["receiverOperations"] = coerced91;
}
}
}
var _valid4 = _errs287 === errors;
valid18 = valid18 || _valid4;
}
if(!valid18){
const err65 = {instancePath:instancePath+"/receiverOperations",schemaPath:"#/properties/receiverOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err65];
}
else {
vErrors.push(err65);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs232;
if(vErrors !== null){
if(_errs232){
vErrors.length = _errs232;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs231 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentOperations !== undefined){
let data90 = data.commentOperations;
const _errs289 = errors;
const _errs290 = errors;
let valid21 = false;
const _errs291 = errors;
if((!(data90 && typeof data90 == "object" && !Array.isArray(data90))) && (data90 !== null)){
let dataType92 = typeof data90;
let coerced92 = undefined;
if(dataType92 == 'object' && Array.isArray(data90) && data90.length == 1){
data90 = data90[0];
dataType92 = typeof data90;
if((data90 && typeof data90 == "object" && !Array.isArray(data90)) && (data90 === null)){
coerced92 = data90;
}
}
if(!(coerced92 !== undefined)){
if(data90 === "" || data90 === 0 || data90 === false){
coerced92 = null;
}
else {
const err66 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err66];
}
else {
vErrors.push(err66);
}
errors++;
}
}
if(coerced92 !== undefined){
data90 = coerced92;
if(data !== undefined){
data["commentOperations"] = coerced92;
}
}
}
const _errs292 = errors;
if(errors === _errs292){
if(data90 && typeof data90 == "object" && !Array.isArray(data90)){
const _errs294 = errors;
for(const key7 in data90){
if(!(func2.call(schema12.properties, key7))){
delete data90[key7];
}
}
if(_errs294 === errors){
if(data90.view !== undefined){
let data91 = data90.view;
const _errs295 = errors;
if((typeof data91 !== "string") && (data91 !== null)){
let dataType93 = typeof data91;
let coerced93 = undefined;
if(dataType93 == 'object' && Array.isArray(data91) && data91.length == 1){
data91 = data91[0];
dataType93 = typeof data91;
if((typeof data91 === "string") && (data91 === null)){
coerced93 = data91;
}
}
if(!(coerced93 !== undefined)){
if(dataType93 == "number" || dataType93 == "boolean"){
coerced93 = "" + data91;
}
else if(data91 === null){
coerced93 = "";
}
else if(data91 === "" || data91 === 0 || data91 === false){
coerced93 = null;
}
else {
const err67 = {instancePath:instancePath+"/commentOperations/view",schemaPath:"node#/definitions/CommentOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err67];
}
else {
vErrors.push(err67);
}
errors++;
}
}
if(coerced93 !== undefined){
data91 = coerced93;
if(data90 !== undefined){
data90["view"] = coerced93;
}
}
}
var valid23 = _errs295 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.edit !== undefined){
let data92 = data90.edit;
const _errs298 = errors;
if((typeof data92 !== "string") && (data92 !== null)){
let dataType94 = typeof data92;
let coerced94 = undefined;
if(dataType94 == 'object' && Array.isArray(data92) && data92.length == 1){
data92 = data92[0];
dataType94 = typeof data92;
if((typeof data92 === "string") && (data92 === null)){
coerced94 = data92;
}
}
if(!(coerced94 !== undefined)){
if(dataType94 == "number" || dataType94 == "boolean"){
coerced94 = "" + data92;
}
else if(data92 === null){
coerced94 = "";
}
else if(data92 === "" || data92 === 0 || data92 === false){
coerced94 = null;
}
else {
const err68 = {instancePath:instancePath+"/commentOperations/edit",schemaPath:"node#/definitions/CommentOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err68];
}
else {
vErrors.push(err68);
}
errors++;
}
}
if(coerced94 !== undefined){
data92 = coerced94;
if(data90 !== undefined){
data90["edit"] = coerced94;
}
}
}
var valid23 = _errs298 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.delete !== undefined){
let data93 = data90.delete;
const _errs301 = errors;
if((typeof data93 !== "string") && (data93 !== null)){
let dataType95 = typeof data93;
let coerced95 = undefined;
if(dataType95 == 'object' && Array.isArray(data93) && data93.length == 1){
data93 = data93[0];
dataType95 = typeof data93;
if((typeof data93 === "string") && (data93 === null)){
coerced95 = data93;
}
}
if(!(coerced95 !== undefined)){
if(dataType95 == "number" || dataType95 == "boolean"){
coerced95 = "" + data93;
}
else if(data93 === null){
coerced95 = "";
}
else if(data93 === "" || data93 === 0 || data93 === false){
coerced95 = null;
}
else {
const err69 = {instancePath:instancePath+"/commentOperations/delete",schemaPath:"node#/definitions/CommentOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err69];
}
else {
vErrors.push(err69);
}
errors++;
}
}
if(coerced95 !== undefined){
data93 = coerced95;
if(data90 !== undefined){
data90["delete"] = coerced95;
}
}
}
var valid23 = _errs301 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewReactions !== undefined){
let data94 = data90.viewReactions;
const _errs304 = errors;
if((typeof data94 !== "string") && (data94 !== null)){
let dataType96 = typeof data94;
let coerced96 = undefined;
if(dataType96 == 'object' && Array.isArray(data94) && data94.length == 1){
data94 = data94[0];
dataType96 = typeof data94;
if((typeof data94 === "string") && (data94 === null)){
coerced96 = data94;
}
}
if(!(coerced96 !== undefined)){
if(dataType96 == "number" || dataType96 == "boolean"){
coerced96 = "" + data94;
}
else if(data94 === null){
coerced96 = "";
}
else if(data94 === "" || data94 === 0 || data94 === false){
coerced96 = null;
}
else {
const err70 = {instancePath:instancePath+"/commentOperations/viewReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err70];
}
else {
vErrors.push(err70);
}
errors++;
}
}
if(coerced96 !== undefined){
data94 = coerced96;
if(data90 !== undefined){
data90["viewReactions"] = coerced96;
}
}
}
var valid23 = _errs304 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewNegativeReactions !== undefined){
let data95 = data90.viewNegativeReactions;
const _errs307 = errors;
if((typeof data95 !== "string") && (data95 !== null)){
let dataType97 = typeof data95;
let coerced97 = undefined;
if(dataType97 == 'object' && Array.isArray(data95) && data95.length == 1){
data95 = data95[0];
dataType97 = typeof data95;
if((typeof data95 === "string") && (data95 === null)){
coerced97 = data95;
}
}
if(!(coerced97 !== undefined)){
if(dataType97 == "number" || dataType97 == "boolean"){
coerced97 = "" + data95;
}
else if(data95 === null){
coerced97 = "";
}
else if(data95 === "" || data95 === 0 || data95 === false){
coerced97 = null;
}
else {
const err71 = {instancePath:instancePath+"/commentOperations/viewNegativeReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err71];
}
else {
vErrors.push(err71);
}
errors++;
}
}
if(coerced97 !== undefined){
data95 = coerced97;
if(data90 !== undefined){
data90["viewNegativeReactions"] = coerced97;
}
}
}
var valid23 = _errs307 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewReactionTotals !== undefined){
let data96 = data90.viewReactionTotals;
const _errs310 = errors;
if((typeof data96 !== "string") && (data96 !== null)){
let dataType98 = typeof data96;
let coerced98 = undefined;
if(dataType98 == 'object' && Array.isArray(data96) && data96.length == 1){
data96 = data96[0];
dataType98 = typeof data96;
if((typeof data96 === "string") && (data96 === null)){
coerced98 = data96;
}
}
if(!(coerced98 !== undefined)){
if(dataType98 == "number" || dataType98 == "boolean"){
coerced98 = "" + data96;
}
else if(data96 === null){
coerced98 = "";
}
else if(data96 === "" || data96 === 0 || data96 === false){
coerced98 = null;
}
else {
const err72 = {instancePath:instancePath+"/commentOperations/viewReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err72];
}
else {
vErrors.push(err72);
}
errors++;
}
}
if(coerced98 !== undefined){
data96 = coerced98;
if(data90 !== undefined){
data90["viewReactionTotals"] = coerced98;
}
}
}
var valid23 = _errs310 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewNegativeReactionTotals !== undefined){
let data97 = data90.viewNegativeReactionTotals;
const _errs313 = errors;
if((typeof data97 !== "string") && (data97 !== null)){
let dataType99 = typeof data97;
let coerced99 = undefined;
if(dataType99 == 'object' && Array.isArray(data97) && data97.length == 1){
data97 = data97[0];
dataType99 = typeof data97;
if((typeof data97 === "string") && (data97 === null)){
coerced99 = data97;
}
}
if(!(coerced99 !== undefined)){
if(dataType99 == "number" || dataType99 == "boolean"){
coerced99 = "" + data97;
}
else if(data97 === null){
coerced99 = "";
}
else if(data97 === "" || data97 === 0 || data97 === false){
coerced99 = null;
}
else {
const err73 = {instancePath:instancePath+"/commentOperations/viewNegativeReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err73];
}
else {
vErrors.push(err73);
}
errors++;
}
}
if(coerced99 !== undefined){
data97 = coerced99;
if(data90 !== undefined){
data90["viewNegativeReactionTotals"] = coerced99;
}
}
}
var valid23 = _errs313 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewReactionRatios !== undefined){
let data98 = data90.viewReactionRatios;
const _errs316 = errors;
if((typeof data98 !== "string") && (data98 !== null)){
let dataType100 = typeof data98;
let coerced100 = undefined;
if(dataType100 == 'object' && Array.isArray(data98) && data98.length == 1){
data98 = data98[0];
dataType100 = typeof data98;
if((typeof data98 === "string") && (data98 === null)){
coerced100 = data98;
}
}
if(!(coerced100 !== undefined)){
if(dataType100 == "number" || dataType100 == "boolean"){
coerced100 = "" + data98;
}
else if(data98 === null){
coerced100 = "";
}
else if(data98 === "" || data98 === 0 || data98 === false){
coerced100 = null;
}
else {
const err74 = {instancePath:instancePath+"/commentOperations/viewReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err74];
}
else {
vErrors.push(err74);
}
errors++;
}
}
if(coerced100 !== undefined){
data98 = coerced100;
if(data90 !== undefined){
data90["viewReactionRatios"] = coerced100;
}
}
}
var valid23 = _errs316 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.viewNegativeReactionRatios !== undefined){
let data99 = data90.viewNegativeReactionRatios;
const _errs319 = errors;
if((typeof data99 !== "string") && (data99 !== null)){
let dataType101 = typeof data99;
let coerced101 = undefined;
if(dataType101 == 'object' && Array.isArray(data99) && data99.length == 1){
data99 = data99[0];
dataType101 = typeof data99;
if((typeof data99 === "string") && (data99 === null)){
coerced101 = data99;
}
}
if(!(coerced101 !== undefined)){
if(dataType101 == "number" || dataType101 == "boolean"){
coerced101 = "" + data99;
}
else if(data99 === null){
coerced101 = "";
}
else if(data99 === "" || data99 === 0 || data99 === false){
coerced101 = null;
}
else {
const err75 = {instancePath:instancePath+"/commentOperations/viewNegativeReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err75];
}
else {
vErrors.push(err75);
}
errors++;
}
}
if(coerced101 !== undefined){
data99 = coerced101;
if(data90 !== undefined){
data90["viewNegativeReactionRatios"] = coerced101;
}
}
}
var valid23 = _errs319 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.addReaction !== undefined){
let data100 = data90.addReaction;
const _errs322 = errors;
if((typeof data100 !== "string") && (data100 !== null)){
let dataType102 = typeof data100;
let coerced102 = undefined;
if(dataType102 == 'object' && Array.isArray(data100) && data100.length == 1){
data100 = data100[0];
dataType102 = typeof data100;
if((typeof data100 === "string") && (data100 === null)){
coerced102 = data100;
}
}
if(!(coerced102 !== undefined)){
if(dataType102 == "number" || dataType102 == "boolean"){
coerced102 = "" + data100;
}
else if(data100 === null){
coerced102 = "";
}
else if(data100 === "" || data100 === 0 || data100 === false){
coerced102 = null;
}
else {
const err76 = {instancePath:instancePath+"/commentOperations/addReaction",schemaPath:"node#/definitions/CommentOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err76];
}
else {
vErrors.push(err76);
}
errors++;
}
}
if(coerced102 !== undefined){
data100 = coerced102;
if(data90 !== undefined){
data90["addReaction"] = coerced102;
}
}
}
var valid23 = _errs322 === errors;
}
else {
var valid23 = true;
}
if(valid23){
if(data90.addNegativeReaction !== undefined){
let data101 = data90.addNegativeReaction;
const _errs325 = errors;
if((typeof data101 !== "string") && (data101 !== null)){
let dataType103 = typeof data101;
let coerced103 = undefined;
if(dataType103 == 'object' && Array.isArray(data101) && data101.length == 1){
data101 = data101[0];
dataType103 = typeof data101;
if((typeof data101 === "string") && (data101 === null)){
coerced103 = data101;
}
}
if(!(coerced103 !== undefined)){
if(dataType103 == "number" || dataType103 == "boolean"){
coerced103 = "" + data101;
}
else if(data101 === null){
coerced103 = "";
}
else if(data101 === "" || data101 === 0 || data101 === false){
coerced103 = null;
}
else {
const err77 = {instancePath:instancePath+"/commentOperations/addNegativeReaction",schemaPath:"node#/definitions/CommentOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err77];
}
else {
vErrors.push(err77);
}
errors++;
}
}
if(coerced103 !== undefined){
data101 = coerced103;
if(data90 !== undefined){
data90["addNegativeReaction"] = coerced103;
}
}
}
var valid23 = _errs325 === errors;
}
else {
var valid23 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err78 = {instancePath:instancePath+"/commentOperations",schemaPath:"node#/definitions/CommentOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err78];
}
else {
vErrors.push(err78);
}
errors++;
}
}
var _valid5 = _errs291 === errors;
valid21 = valid21 || _valid5;
if(!valid21){
const _errs330 = errors;
if(data90 !== null){
let dataType104 = typeof data90;
let coerced104 = undefined;
if(dataType104 == 'object' && Array.isArray(data90) && data90.length == 1){
data90 = data90[0];
dataType104 = typeof data90;
if(data90 === null){
coerced104 = data90;
}
}
if(!(coerced104 !== undefined)){
if(data90 === "" || data90 === 0 || data90 === false){
coerced104 = null;
}
else {
const err79 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err79];
}
else {
vErrors.push(err79);
}
errors++;
}
}
if(coerced104 !== undefined){
data90 = coerced104;
if(data !== undefined){
data["commentOperations"] = coerced104;
}
}
}
var _valid5 = _errs330 === errors;
valid21 = valid21 || _valid5;
}
if(!valid21){
const err80 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err80];
}
else {
vErrors.push(err80);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs290;
if(vErrors !== null){
if(_errs290){
vErrors.length = _errs290;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs289 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactionOperations !== undefined){
let data102 = data.reactionOperations;
const _errs332 = errors;
const _errs333 = errors;
let valid24 = false;
const _errs334 = errors;
if((!(data102 && typeof data102 == "object" && !Array.isArray(data102))) && (data102 !== null)){
let dataType105 = typeof data102;
let coerced105 = undefined;
if(dataType105 == 'object' && Array.isArray(data102) && data102.length == 1){
data102 = data102[0];
dataType105 = typeof data102;
if((data102 && typeof data102 == "object" && !Array.isArray(data102)) && (data102 === null)){
coerced105 = data102;
}
}
if(!(coerced105 !== undefined)){
if(data102 === "" || data102 === 0 || data102 === false){
coerced105 = null;
}
else {
const err81 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err81];
}
else {
vErrors.push(err81);
}
errors++;
}
}
if(coerced105 !== undefined){
data102 = coerced105;
if(data !== undefined){
data["reactionOperations"] = coerced105;
}
}
}
const _errs335 = errors;
if(errors === _errs335){
if(data102 && typeof data102 == "object" && !Array.isArray(data102)){
const _errs337 = errors;
for(const key8 in data102){
if(!((key8 === "view") || (key8 === "delete"))){
delete data102[key8];
}
}
if(_errs337 === errors){
if(data102.view !== undefined){
let data103 = data102.view;
const _errs338 = errors;
if((typeof data103 !== "string") && (data103 !== null)){
let dataType106 = typeof data103;
let coerced106 = undefined;
if(dataType106 == 'object' && Array.isArray(data103) && data103.length == 1){
data103 = data103[0];
dataType106 = typeof data103;
if((typeof data103 === "string") && (data103 === null)){
coerced106 = data103;
}
}
if(!(coerced106 !== undefined)){
if(dataType106 == "number" || dataType106 == "boolean"){
coerced106 = "" + data103;
}
else if(data103 === null){
coerced106 = "";
}
else if(data103 === "" || data103 === 0 || data103 === false){
coerced106 = null;
}
else {
const err82 = {instancePath:instancePath+"/reactionOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err82];
}
else {
vErrors.push(err82);
}
errors++;
}
}
if(coerced106 !== undefined){
data103 = coerced106;
if(data102 !== undefined){
data102["view"] = coerced106;
}
}
}
var valid26 = _errs338 === errors;
}
else {
var valid26 = true;
}
if(valid26){
if(data102.delete !== undefined){
let data104 = data102.delete;
const _errs341 = errors;
if((typeof data104 !== "string") && (data104 !== null)){
let dataType107 = typeof data104;
let coerced107 = undefined;
if(dataType107 == 'object' && Array.isArray(data104) && data104.length == 1){
data104 = data104[0];
dataType107 = typeof data104;
if((typeof data104 === "string") && (data104 === null)){
coerced107 = data104;
}
}
if(!(coerced107 !== undefined)){
if(dataType107 == "number" || dataType107 == "boolean"){
coerced107 = "" + data104;
}
else if(data104 === null){
coerced107 = "";
}
else if(data104 === "" || data104 === 0 || data104 === false){
coerced107 = null;
}
else {
const err83 = {instancePath:instancePath+"/reactionOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err83];
}
else {
vErrors.push(err83);
}
errors++;
}
}
if(coerced107 !== undefined){
data104 = coerced107;
if(data102 !== undefined){
data102["delete"] = coerced107;
}
}
}
var valid26 = _errs341 === errors;
}
else {
var valid26 = true;
}
}
}
}
else {
const err84 = {instancePath:instancePath+"/reactionOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err84];
}
else {
vErrors.push(err84);
}
errors++;
}
}
var _valid6 = _errs334 === errors;
valid24 = valid24 || _valid6;
if(!valid24){
const _errs346 = errors;
if(data102 !== null){
let dataType108 = typeof data102;
let coerced108 = undefined;
if(dataType108 == 'object' && Array.isArray(data102) && data102.length == 1){
data102 = data102[0];
dataType108 = typeof data102;
if(data102 === null){
coerced108 = data102;
}
}
if(!(coerced108 !== undefined)){
if(data102 === "" || data102 === 0 || data102 === false){
coerced108 = null;
}
else {
const err85 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err85];
}
else {
vErrors.push(err85);
}
errors++;
}
}
if(coerced108 !== undefined){
data102 = coerced108;
if(data !== undefined){
data["reactionOperations"] = coerced108;
}
}
}
var _valid6 = _errs346 === errors;
valid24 = valid24 || _valid6;
}
if(!valid24){
const err86 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err86];
}
else {
vErrors.push(err86);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs333;
if(vErrors !== null){
if(_errs333){
vErrors.length = _errs333;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs332 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentReactionOperations !== undefined){
let data105 = data.commentReactionOperations;
const _errs348 = errors;
const _errs349 = errors;
let valid27 = false;
const _errs350 = errors;
if((!(data105 && typeof data105 == "object" && !Array.isArray(data105))) && (data105 !== null)){
let dataType109 = typeof data105;
let coerced109 = undefined;
if(dataType109 == 'object' && Array.isArray(data105) && data105.length == 1){
data105 = data105[0];
dataType109 = typeof data105;
if((data105 && typeof data105 == "object" && !Array.isArray(data105)) && (data105 === null)){
coerced109 = data105;
}
}
if(!(coerced109 !== undefined)){
if(data105 === "" || data105 === 0 || data105 === false){
coerced109 = null;
}
else {
const err87 = {instancePath:instancePath+"/commentReactionOperations",schemaPath:"#/properties/commentReactionOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err87];
}
else {
vErrors.push(err87);
}
errors++;
}
}
if(coerced109 !== undefined){
data105 = coerced109;
if(data !== undefined){
data["commentReactionOperations"] = coerced109;
}
}
}
const _errs351 = errors;
if(errors === _errs351){
if(data105 && typeof data105 == "object" && !Array.isArray(data105)){
const _errs353 = errors;
for(const key9 in data105){
if(!((key9 === "view") || (key9 === "delete"))){
delete data105[key9];
}
}
if(_errs353 === errors){
if(data105.view !== undefined){
let data106 = data105.view;
const _errs354 = errors;
if((typeof data106 !== "string") && (data106 !== null)){
let dataType110 = typeof data106;
let coerced110 = undefined;
if(dataType110 == 'object' && Array.isArray(data106) && data106.length == 1){
data106 = data106[0];
dataType110 = typeof data106;
if((typeof data106 === "string") && (data106 === null)){
coerced110 = data106;
}
}
if(!(coerced110 !== undefined)){
if(dataType110 == "number" || dataType110 == "boolean"){
coerced110 = "" + data106;
}
else if(data106 === null){
coerced110 = "";
}
else if(data106 === "" || data106 === 0 || data106 === false){
coerced110 = null;
}
else {
const err88 = {instancePath:instancePath+"/commentReactionOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err88];
}
else {
vErrors.push(err88);
}
errors++;
}
}
if(coerced110 !== undefined){
data106 = coerced110;
if(data105 !== undefined){
data105["view"] = coerced110;
}
}
}
var valid29 = _errs354 === errors;
}
else {
var valid29 = true;
}
if(valid29){
if(data105.delete !== undefined){
let data107 = data105.delete;
const _errs357 = errors;
if((typeof data107 !== "string") && (data107 !== null)){
let dataType111 = typeof data107;
let coerced111 = undefined;
if(dataType111 == 'object' && Array.isArray(data107) && data107.length == 1){
data107 = data107[0];
dataType111 = typeof data107;
if((typeof data107 === "string") && (data107 === null)){
coerced111 = data107;
}
}
if(!(coerced111 !== undefined)){
if(dataType111 == "number" || dataType111 == "boolean"){
coerced111 = "" + data107;
}
else if(data107 === null){
coerced111 = "";
}
else if(data107 === "" || data107 === 0 || data107 === false){
coerced111 = null;
}
else {
const err89 = {instancePath:instancePath+"/commentReactionOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err89];
}
else {
vErrors.push(err89);
}
errors++;
}
}
if(coerced111 !== undefined){
data107 = coerced111;
if(data105 !== undefined){
data105["delete"] = coerced111;
}
}
}
var valid29 = _errs357 === errors;
}
else {
var valid29 = true;
}
}
}
}
else {
const err90 = {instancePath:instancePath+"/commentReactionOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err90];
}
else {
vErrors.push(err90);
}
errors++;
}
}
var _valid7 = _errs350 === errors;
valid27 = valid27 || _valid7;
if(!valid27){
const _errs362 = errors;
if(data105 !== null){
let dataType112 = typeof data105;
let coerced112 = undefined;
if(dataType112 == 'object' && Array.isArray(data105) && data105.length == 1){
data105 = data105[0];
dataType112 = typeof data105;
if(data105 === null){
coerced112 = data105;
}
}
if(!(coerced112 !== undefined)){
if(data105 === "" || data105 === 0 || data105 === false){
coerced112 = null;
}
else {
const err91 = {instancePath:instancePath+"/commentReactionOperations",schemaPath:"#/properties/commentReactionOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err91];
}
else {
vErrors.push(err91);
}
errors++;
}
}
if(coerced112 !== undefined){
data105 = coerced112;
if(data !== undefined){
data["commentReactionOperations"] = coerced112;
}
}
}
var _valid7 = _errs362 === errors;
valid27 = valid27 || _valid7;
}
if(!valid27){
const err92 = {instancePath:instancePath+"/commentReactionOperations",schemaPath:"#/properties/commentReactionOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err92];
}
else {
vErrors.push(err92);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs349;
if(vErrors !== null){
if(_errs349){
vErrors.length = _errs349;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs348 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedOperations !== undefined){
let data108 = data.blockedOperations;
const _errs364 = errors;
if((!(Array.isArray(data108))) && (data108 !== null)){
let dataType113 = typeof data108;
let coerced113 = undefined;
if(dataType113 == 'object' && Array.isArray(data108) && data108.length == 1){
data108 = data108[0];
dataType113 = typeof data108;
if((Array.isArray(data108)) && (data108 === null)){
coerced113 = data108;
}
}
if(!(coerced113 !== undefined)){
if(dataType113 === "string" || dataType113 === "number"
              || dataType113 === "boolean" || data108 === null){
coerced113 = [data108];
}
else if(data108 === "" || data108 === 0 || data108 === false){
coerced113 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedOperations",schemaPath:"#/properties/blockedOperations/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced113 !== undefined){
data108 = coerced113;
if(data !== undefined){
data["blockedOperations"] = coerced113;
}
}
}
if(errors === _errs364){
if(Array.isArray(data108)){
var valid30 = true;
const len3 = data108.length;
for(let i3=0; i3<len3; i3++){
let data109 = data108[i3];
const _errs367 = errors;
if(typeof data109 !== "string"){
let dataType114 = typeof data109;
let coerced114 = undefined;
if(dataType114 == 'object' && Array.isArray(data109) && data109.length == 1){
data109 = data109[0];
dataType114 = typeof data109;
if(typeof data109 === "string"){
coerced114 = data109;
}
}
if(!(coerced114 !== undefined)){
if(dataType114 == "number" || dataType114 == "boolean"){
coerced114 = "" + data109;
}
else if(data109 === null){
coerced114 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedOperations/" + i3,schemaPath:"#/properties/blockedOperations/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced114 !== undefined){
data109 = coerced114;
if(data108 !== undefined){
data108[i3] = coerced114;
}
}
}
var valid30 = _errs367 === errors;
if(!valid30){
break;
}
}
}
}
var valid0 = _errs364 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedCommentOperations !== undefined){
let data110 = data.blockedCommentOperations;
const _errs369 = errors;
if((!(Array.isArray(data110))) && (data110 !== null)){
let dataType115 = typeof data110;
let coerced115 = undefined;
if(dataType115 == 'object' && Array.isArray(data110) && data110.length == 1){
data110 = data110[0];
dataType115 = typeof data110;
if((Array.isArray(data110)) && (data110 === null)){
coerced115 = data110;
}
}
if(!(coerced115 !== undefined)){
if(dataType115 === "string" || dataType115 === "number"
              || dataType115 === "boolean" || data110 === null){
coerced115 = [data110];
}
else if(data110 === "" || data110 === 0 || data110 === false){
coerced115 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedCommentOperations",schemaPath:"#/properties/blockedCommentOperations/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced115 !== undefined){
data110 = coerced115;
if(data !== undefined){
data["blockedCommentOperations"] = coerced115;
}
}
}
if(errors === _errs369){
if(Array.isArray(data110)){
var valid31 = true;
const len4 = data110.length;
for(let i4=0; i4<len4; i4++){
let data111 = data110[i4];
const _errs372 = errors;
if(typeof data111 !== "string"){
let dataType116 = typeof data111;
let coerced116 = undefined;
if(dataType116 == 'object' && Array.isArray(data111) && data111.length == 1){
data111 = data111[0];
dataType116 = typeof data111;
if(typeof data111 === "string"){
coerced116 = data111;
}
}
if(!(coerced116 !== undefined)){
if(dataType116 == "number" || dataType116 == "boolean"){
coerced116 = "" + data111;
}
else if(data111 === null){
coerced116 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/blockedCommentOperations/" + i4,schemaPath:"#/properties/blockedCommentOperations/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced116 !== undefined){
data111 = coerced116;
if(data110 !== undefined){
data110[i4] = coerced116;
}
}
}
var valid31 = _errs372 === errors;
if(!valid31){
break;
}
}
}
}
var valid0 = _errs369 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffs !== undefined){
let data112 = data.sheriffs;
const _errs374 = errors;
if((!(Array.isArray(data112))) && (data112 !== null)){
let dataType117 = typeof data112;
let coerced117 = undefined;
if(dataType117 == 'object' && Array.isArray(data112) && data112.length == 1){
data112 = data112[0];
dataType117 = typeof data112;
if((Array.isArray(data112)) && (data112 === null)){
coerced117 = data112;
}
}
if(!(coerced117 !== undefined)){
if(dataType117 === "string" || dataType117 === "number"
              || dataType117 === "boolean" || data112 === null){
coerced117 = [data112];
}
else if(data112 === "" || data112 === 0 || data112 === false){
coerced117 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/sheriffs",schemaPath:"#/properties/sheriffs/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced117 !== undefined){
data112 = coerced117;
if(data !== undefined){
data["sheriffs"] = coerced117;
}
}
}
if(errors === _errs374){
if(Array.isArray(data112)){
var valid32 = true;
const len5 = data112.length;
for(let i5=0; i5<len5; i5++){
let data113 = data112[i5];
const _errs377 = errors;
if(typeof data113 !== "string"){
let dataType118 = typeof data113;
let coerced118 = undefined;
if(dataType118 == 'object' && Array.isArray(data113) && data113.length == 1){
data113 = data113[0];
dataType118 = typeof data113;
if(typeof data113 === "string"){
coerced118 = data113;
}
}
if(!(coerced118 !== undefined)){
if(dataType118 == "number" || dataType118 == "boolean"){
coerced118 = "" + data113;
}
else if(data113 === null){
coerced118 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/sheriffs/" + i5,schemaPath:"#/properties/sheriffs/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced118 !== undefined){
data113 = coerced118;
if(data112 !== undefined){
data112[i5] = coerced118;
}
}
}
var valid32 = _errs377 === errors;
if(!valid32){
break;
}
}
}
}
var valid0 = _errs374 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffMarks !== undefined){
let data114 = data.sheriffMarks;
const _errs379 = errors;
if((!(Array.isArray(data114))) && (data114 !== null)){
let dataType119 = typeof data114;
let coerced119 = undefined;
if(dataType119 == 'object' && Array.isArray(data114) && data114.length == 1){
data114 = data114[0];
dataType119 = typeof data114;
if((Array.isArray(data114)) && (data114 === null)){
coerced119 = data114;
}
}
if(!(coerced119 !== undefined)){
if(dataType119 === "string" || dataType119 === "number"
              || dataType119 === "boolean" || data114 === null){
coerced119 = [data114];
}
else if(data114 === "" || data114 === 0 || data114 === false){
coerced119 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/sheriffMarks",schemaPath:"#/properties/sheriffMarks/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced119 !== undefined){
data114 = coerced119;
if(data !== undefined){
data["sheriffMarks"] = coerced119;
}
}
}
if(errors === _errs379){
if(Array.isArray(data114)){
var valid33 = true;
const len6 = data114.length;
for(let i6=0; i6<len6; i6++){
let data115 = data114[i6];
const _errs382 = errors;
const _errs383 = errors;
if(errors === _errs383){
if(data115 && typeof data115 == "object" && !Array.isArray(data115)){
let missing4;
if((data115.sheriffName === undefined) && (missing4 = "sheriffName")){
validate154.errors = [{instancePath:instancePath+"/sheriffMarks/" + i6,schemaPath:"node#/definitions/SheriffMark/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"}];
return false;
}
else {
const _errs385 = errors;
for(const key10 in data115){
if(!(key10 === "sheriffName")){
delete data115[key10];
}
}
if(_errs385 === errors){
if(data115.sheriffName !== undefined){
let data116 = data115.sheriffName;
if(typeof data116 !== "string"){
let dataType120 = typeof data116;
let coerced120 = undefined;
if(dataType120 == 'object' && Array.isArray(data116) && data116.length == 1){
data116 = data116[0];
dataType120 = typeof data116;
if(typeof data116 === "string"){
coerced120 = data116;
}
}
if(!(coerced120 !== undefined)){
if(dataType120 == "number" || dataType120 == "boolean"){
coerced120 = "" + data116;
}
else if(data116 === null){
coerced120 = "";
}
else {
validate154.errors = [{instancePath:instancePath+"/sheriffMarks/" + i6+"/sheriffName",schemaPath:"node#/definitions/SheriffMark/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced120 !== undefined){
data116 = coerced120;
if(data115 !== undefined){
data115["sheriffName"] = coerced120;
}
}
}
}
}
}
}
else {
validate154.errors = [{instancePath:instancePath+"/sheriffMarks/" + i6,schemaPath:"node#/definitions/SheriffMark/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid33 = _errs382 === errors;
if(!valid33){
break;
}
}
}
}
var valid0 = _errs379 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.acceptedReactions !== undefined){
let data117 = data.acceptedReactions;
const _errs388 = errors;
const _errs389 = errors;
let valid36 = false;
const _errs390 = errors;
if((!(data117 && typeof data117 == "object" && !Array.isArray(data117))) && (data117 !== null)){
let dataType121 = typeof data117;
let coerced121 = undefined;
if(dataType121 == 'object' && Array.isArray(data117) && data117.length == 1){
data117 = data117[0];
dataType121 = typeof data117;
if((data117 && typeof data117 == "object" && !Array.isArray(data117)) && (data117 === null)){
coerced121 = data117;
}
}
if(!(coerced121 !== undefined)){
if(data117 === "" || data117 === 0 || data117 === false){
coerced121 = null;
}
else {
const err93 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err93];
}
else {
vErrors.push(err93);
}
errors++;
}
}
if(coerced121 !== undefined){
data117 = coerced121;
if(data !== undefined){
data["acceptedReactions"] = coerced121;
}
}
}
const _errs391 = errors;
if(errors === _errs391){
if(data117 && typeof data117 == "object" && !Array.isArray(data117)){
let missing5;
if(((data117.positive === undefined) && (missing5 = "positive")) || ((data117.negative === undefined) && (missing5 = "negative"))){
const err94 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/required",keyword:"required",params:{missingProperty: missing5},message:"must have required property '"+missing5+"'"};
if(vErrors === null){
vErrors = [err94];
}
else {
vErrors.push(err94);
}
errors++;
}
else {
const _errs393 = errors;
for(const key11 in data117){
if(!((key11 === "positive") || (key11 === "negative"))){
delete data117[key11];
}
}
if(_errs393 === errors){
if(data117.positive !== undefined){
let data118 = data117.positive;
const _errs394 = errors;
if(typeof data118 !== "string"){
let dataType122 = typeof data118;
let coerced122 = undefined;
if(dataType122 == 'object' && Array.isArray(data118) && data118.length == 1){
data118 = data118[0];
dataType122 = typeof data118;
if(typeof data118 === "string"){
coerced122 = data118;
}
}
if(!(coerced122 !== undefined)){
if(dataType122 == "number" || dataType122 == "boolean"){
coerced122 = "" + data118;
}
else if(data118 === null){
coerced122 = "";
}
else {
const err95 = {instancePath:instancePath+"/acceptedReactions/positive",schemaPath:"node#/definitions/AcceptedReactions/properties/positive/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err95];
}
else {
vErrors.push(err95);
}
errors++;
}
}
if(coerced122 !== undefined){
data118 = coerced122;
if(data117 !== undefined){
data117["positive"] = coerced122;
}
}
}
var valid38 = _errs394 === errors;
}
else {
var valid38 = true;
}
if(valid38){
if(data117.negative !== undefined){
let data119 = data117.negative;
const _errs396 = errors;
if(typeof data119 !== "string"){
let dataType123 = typeof data119;
let coerced123 = undefined;
if(dataType123 == 'object' && Array.isArray(data119) && data119.length == 1){
data119 = data119[0];
dataType123 = typeof data119;
if(typeof data119 === "string"){
coerced123 = data119;
}
}
if(!(coerced123 !== undefined)){
if(dataType123 == "number" || dataType123 == "boolean"){
coerced123 = "" + data119;
}
else if(data119 === null){
coerced123 = "";
}
else {
const err96 = {instancePath:instancePath+"/acceptedReactions/negative",schemaPath:"node#/definitions/AcceptedReactions/properties/negative/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err96];
}
else {
vErrors.push(err96);
}
errors++;
}
}
if(coerced123 !== undefined){
data119 = coerced123;
if(data117 !== undefined){
data117["negative"] = coerced123;
}
}
}
var valid38 = _errs396 === errors;
}
else {
var valid38 = true;
}
}
}
}
}
else {
const err97 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err97];
}
else {
vErrors.push(err97);
}
errors++;
}
}
var _valid8 = _errs390 === errors;
valid36 = valid36 || _valid8;
if(!valid36){
const _errs400 = errors;
if(data117 !== null){
let dataType124 = typeof data117;
let coerced124 = undefined;
if(dataType124 == 'object' && Array.isArray(data117) && data117.length == 1){
data117 = data117[0];
dataType124 = typeof data117;
if(data117 === null){
coerced124 = data117;
}
}
if(!(coerced124 !== undefined)){
if(data117 === "" || data117 === 0 || data117 === false){
coerced124 = null;
}
else {
const err98 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err98];
}
else {
vErrors.push(err98);
}
errors++;
}
}
if(coerced124 !== undefined){
data117 = coerced124;
if(data !== undefined){
data["acceptedReactions"] = coerced124;
}
}
}
var _valid8 = _errs400 === errors;
valid36 = valid36 || _valid8;
}
if(!valid36){
const err99 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err99];
}
else {
vErrors.push(err99);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs389;
if(vErrors !== null){
if(_errs389){
vErrors.length = _errs389;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs388 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientReaction !== undefined){
let data120 = data.clientReaction;
const _errs402 = errors;
const _errs403 = errors;
let valid39 = false;
const _errs404 = errors;
if((!(data120 && typeof data120 == "object" && !Array.isArray(data120))) && (data120 !== null)){
let dataType125 = typeof data120;
let coerced125 = undefined;
if(dataType125 == 'object' && Array.isArray(data120) && data120.length == 1){
data120 = data120[0];
dataType125 = typeof data120;
if((data120 && typeof data120 == "object" && !Array.isArray(data120)) && (data120 === null)){
coerced125 = data120;
}
}
if(!(coerced125 !== undefined)){
if(data120 === "" || data120 === 0 || data120 === false){
coerced125 = null;
}
else {
const err100 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err100];
}
else {
vErrors.push(err100);
}
errors++;
}
}
if(coerced125 !== undefined){
data120 = coerced125;
if(data !== undefined){
data["clientReaction"] = coerced125;
}
}
}
const _errs405 = errors;
if(errors === _errs405){
if(data120 && typeof data120 == "object" && !Array.isArray(data120)){
let missing6;
if((((data120.negative === undefined) && (missing6 = "negative")) || ((data120.emoji === undefined) && (missing6 = "emoji"))) || ((data120.createdAt === undefined) && (missing6 = "createdAt"))){
const err101 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/required",keyword:"required",params:{missingProperty: missing6},message:"must have required property '"+missing6+"'"};
if(vErrors === null){
vErrors = [err101];
}
else {
vErrors.push(err101);
}
errors++;
}
else {
const _errs407 = errors;
for(const key12 in data120){
if(!((((key12 === "negative") || (key12 === "emoji")) || (key12 === "createdAt")) || (key12 === "deadline"))){
delete data120[key12];
}
}
if(_errs407 === errors){
if(data120.negative !== undefined){
let data121 = data120.negative;
const _errs408 = errors;
if(typeof data121 !== "boolean"){
let dataType126 = typeof data121;
let coerced126 = undefined;
if(dataType126 == 'object' && Array.isArray(data121) && data121.length == 1){
data121 = data121[0];
dataType126 = typeof data121;
if(typeof data121 === "boolean"){
coerced126 = data121;
}
}
if(!(coerced126 !== undefined)){
if(data121 === "false" || data121 === 0 || data121 === null){
coerced126 = false;
}
else if(data121 === "true" || data121 === 1){
coerced126 = true;
}
else {
const err102 = {instancePath:instancePath+"/clientReaction/negative",schemaPath:"node#/definitions/ClientReactionInfo/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err102];
}
else {
vErrors.push(err102);
}
errors++;
}
}
if(coerced126 !== undefined){
data121 = coerced126;
if(data120 !== undefined){
data120["negative"] = coerced126;
}
}
}
var valid41 = _errs408 === errors;
}
else {
var valid41 = true;
}
if(valid41){
if(data120.emoji !== undefined){
let data122 = data120.emoji;
const _errs410 = errors;
if(!(((typeof data122 == "number") && (!(data122 % 1) && !isNaN(data122))) && (isFinite(data122)))){
let dataType127 = typeof data122;
let coerced127 = undefined;
if(dataType127 == 'object' && Array.isArray(data122) && data122.length == 1){
data122 = data122[0];
dataType127 = typeof data122;
if(((typeof data122 == "number") && (!(data122 % 1) && !isNaN(data122))) && (isFinite(data122))){
coerced127 = data122;
}
}
if(!(coerced127 !== undefined)){
if(dataType127 === "boolean" || data122 === null
              || (dataType127 === "string" && data122 && data122 == +data122 && !(data122 % 1))){
coerced127 = +data122;
}
else {
const err103 = {instancePath:instancePath+"/clientReaction/emoji",schemaPath:"node#/definitions/ClientReactionInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err103];
}
else {
vErrors.push(err103);
}
errors++;
}
}
if(coerced127 !== undefined){
data122 = coerced127;
if(data120 !== undefined){
data120["emoji"] = coerced127;
}
}
}
var valid41 = _errs410 === errors;
}
else {
var valid41 = true;
}
if(valid41){
if(data120.createdAt !== undefined){
let data123 = data120.createdAt;
const _errs412 = errors;
if(!(((typeof data123 == "number") && (!(data123 % 1) && !isNaN(data123))) && (isFinite(data123)))){
let dataType128 = typeof data123;
let coerced128 = undefined;
if(dataType128 == 'object' && Array.isArray(data123) && data123.length == 1){
data123 = data123[0];
dataType128 = typeof data123;
if(((typeof data123 == "number") && (!(data123 % 1) && !isNaN(data123))) && (isFinite(data123))){
coerced128 = data123;
}
}
if(!(coerced128 !== undefined)){
if(dataType128 === "boolean" || data123 === null
              || (dataType128 === "string" && data123 && data123 == +data123 && !(data123 % 1))){
coerced128 = +data123;
}
else {
const err104 = {instancePath:instancePath+"/clientReaction/createdAt",schemaPath:"node#/definitions/ClientReactionInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err104];
}
else {
vErrors.push(err104);
}
errors++;
}
}
if(coerced128 !== undefined){
data123 = coerced128;
if(data120 !== undefined){
data120["createdAt"] = coerced128;
}
}
}
var valid41 = _errs412 === errors;
}
else {
var valid41 = true;
}
if(valid41){
if(data120.deadline !== undefined){
let data124 = data120.deadline;
const _errs414 = errors;
if((!(((typeof data124 == "number") && (!(data124 % 1) && !isNaN(data124))) && (isFinite(data124)))) && (data124 !== null)){
let dataType129 = typeof data124;
let coerced129 = undefined;
if(dataType129 == 'object' && Array.isArray(data124) && data124.length == 1){
data124 = data124[0];
dataType129 = typeof data124;
if((((typeof data124 == "number") && (!(data124 % 1) && !isNaN(data124))) && (isFinite(data124))) && (data124 === null)){
coerced129 = data124;
}
}
if(!(coerced129 !== undefined)){
if(dataType129 === "boolean" || data124 === null
              || (dataType129 === "string" && data124 && data124 == +data124 && !(data124 % 1))){
coerced129 = +data124;
}
else if(data124 === "" || data124 === 0 || data124 === false){
coerced129 = null;
}
else {
const err105 = {instancePath:instancePath+"/clientReaction/deadline",schemaPath:"node#/definitions/ClientReactionInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err105];
}
else {
vErrors.push(err105);
}
errors++;
}
}
if(coerced129 !== undefined){
data124 = coerced129;
if(data120 !== undefined){
data120["deadline"] = coerced129;
}
}
}
var valid41 = _errs414 === errors;
}
else {
var valid41 = true;
}
}
}
}
}
}
}
else {
const err106 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err106];
}
else {
vErrors.push(err106);
}
errors++;
}
}
var _valid9 = _errs404 === errors;
valid39 = valid39 || _valid9;
if(!valid39){
const _errs419 = errors;
if(data120 !== null){
let dataType130 = typeof data120;
let coerced130 = undefined;
if(dataType130 == 'object' && Array.isArray(data120) && data120.length == 1){
data120 = data120[0];
dataType130 = typeof data120;
if(data120 === null){
coerced130 = data120;
}
}
if(!(coerced130 !== undefined)){
if(data120 === "" || data120 === 0 || data120 === false){
coerced130 = null;
}
else {
const err107 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err107];
}
else {
vErrors.push(err107);
}
errors++;
}
}
if(coerced130 !== undefined){
data120 = coerced130;
if(data !== undefined){
data["clientReaction"] = coerced130;
}
}
}
var _valid9 = _errs419 === errors;
valid39 = valid39 || _valid9;
}
if(!valid39){
const err108 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err108];
}
else {
vErrors.push(err108);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs403;
if(vErrors !== null){
if(_errs403){
vErrors.length = _errs403;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs402 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data125 = data.reactions;
const _errs421 = errors;
const _errs422 = errors;
let valid42 = false;
const _errs423 = errors;
if((!(data125 && typeof data125 == "object" && !Array.isArray(data125))) && (data125 !== null)){
let dataType131 = typeof data125;
let coerced131 = undefined;
if(dataType131 == 'object' && Array.isArray(data125) && data125.length == 1){
data125 = data125[0];
dataType131 = typeof data125;
if((data125 && typeof data125 == "object" && !Array.isArray(data125)) && (data125 === null)){
coerced131 = data125;
}
}
if(!(coerced131 !== undefined)){
if(data125 === "" || data125 === 0 || data125 === false){
coerced131 = null;
}
else {
const err109 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err109];
}
else {
vErrors.push(err109);
}
errors++;
}
}
if(coerced131 !== undefined){
data125 = coerced131;
if(data !== undefined){
data["reactions"] = coerced131;
}
}
}
if(!(validate90(data125, {instancePath:instancePath+"/reactions",parentData:data,parentDataProperty:"reactions",rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var _valid10 = _errs423 === errors;
valid42 = valid42 || _valid10;
if(!valid42){
const _errs426 = errors;
if(data125 !== null){
let dataType132 = typeof data125;
let coerced132 = undefined;
if(dataType132 == 'object' && Array.isArray(data125) && data125.length == 1){
data125 = data125[0];
dataType132 = typeof data125;
if(data125 === null){
coerced132 = data125;
}
}
if(!(coerced132 !== undefined)){
if(data125 === "" || data125 === 0 || data125 === false){
coerced132 = null;
}
else {
const err110 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err110];
}
else {
vErrors.push(err110);
}
errors++;
}
}
if(coerced132 !== undefined){
data125 = coerced132;
if(data !== undefined){
data["reactions"] = coerced132;
}
}
}
var _valid10 = _errs426 === errors;
valid42 = valid42 || _valid10;
}
if(!valid42){
const err111 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err111];
}
else {
vErrors.push(err111);
}
errors++;
validate154.errors = vErrors;
return false;
}
else {
errors = _errs422;
if(vErrors !== null){
if(_errs422){
vErrors.length = _errs422;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs421 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sources !== undefined){
let data126 = data.sources;
const _errs428 = errors;
if((!(Array.isArray(data126))) && (data126 !== null)){
let dataType133 = typeof data126;
let coerced133 = undefined;
if(dataType133 == 'object' && Array.isArray(data126) && data126.length == 1){
data126 = data126[0];
dataType133 = typeof data126;
if((Array.isArray(data126)) && (data126 === null)){
coerced133 = data126;
}
}
if(!(coerced133 !== undefined)){
if(dataType133 === "string" || dataType133 === "number"
              || dataType133 === "boolean" || data126 === null){
coerced133 = [data126];
}
else if(data126 === "" || data126 === 0 || data126 === false){
coerced133 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/sources",schemaPath:"#/properties/sources/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced133 !== undefined){
data126 = coerced133;
if(data !== undefined){
data["sources"] = coerced133;
}
}
}
if(errors === _errs428){
if(Array.isArray(data126)){
var valid43 = true;
const len7 = data126.length;
for(let i7=0; i7<len7; i7++){
const _errs431 = errors;
if(!(validate80(data126[i7], {instancePath:instancePath+"/sources/" + i7,parentData:data126,parentDataProperty:i7,rootData}))){
vErrors = vErrors === null ? validate80.errors : vErrors.concat(validate80.errors);
errors = vErrors.length;
}
var valid43 = _errs431 === errors;
if(!valid43){
break;
}
}
}
}
var valid0 = _errs428 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalComments !== undefined){
let data128 = data.totalComments;
const _errs432 = errors;
if((!(((typeof data128 == "number") && (!(data128 % 1) && !isNaN(data128))) && (isFinite(data128)))) && (data128 !== null)){
let dataType134 = typeof data128;
let coerced134 = undefined;
if(dataType134 == 'object' && Array.isArray(data128) && data128.length == 1){
data128 = data128[0];
dataType134 = typeof data128;
if((((typeof data128 == "number") && (!(data128 % 1) && !isNaN(data128))) && (isFinite(data128))) && (data128 === null)){
coerced134 = data128;
}
}
if(!(coerced134 !== undefined)){
if(dataType134 === "boolean" || data128 === null
              || (dataType134 === "string" && data128 && data128 == +data128 && !(data128 % 1))){
coerced134 = +data128;
}
else if(data128 === "" || data128 === 0 || data128 === false){
coerced134 = null;
}
else {
validate154.errors = [{instancePath:instancePath+"/totalComments",schemaPath:"#/properties/totalComments/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced134 !== undefined){
data128 = coerced134;
if(data !== undefined){
data["totalComments"] = coerced134;
}
}
}
var valid0 = _errs432 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate154.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate154.errors = vErrors;
return errors === 0;
}

export const PostingInfoArray = validate159;
const schema187 = {"type":"array","items":{"$ref":"node#/definitions/PostingInfo"}};

function validate159(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate159.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate154(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate154.errors : vErrors.concat(validate154.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate159.errors = vErrors;
return errors === 0;
}

export const PostingRevisionInfo = validate161;
const schema188 = {"type":"object","properties":{"id":{"type":"string"},"receiverId":{"type":"string","nullable":true},"bodyPreview":{"type":"string","nullable":true},"bodySrcHash":{"type":"string"},"bodySrcFormat":{"type":"string","nullable":true},"body":{"type":"string"},"bodyFormat":{"type":"string","nullable":true},"media":{"type":"array","items":{"$ref":"node#/definitions/MediaAttachment"},"nullable":true},"heading":{"type":"string"},"updateInfo":{"anyOf":[{"$ref":"node#/definitions/UpdateInfo","type":"object","nullable":true},{"type":"null"}]},"createdAt":{"type":"integer"},"deletedAt":{"type":"integer","nullable":true},"receiverCreatedAt":{"type":"integer","nullable":true},"receiverDeletedAt":{"type":"integer","nullable":true},"digest":{"type":"string","nullable":true},"signature":{"type":"string","nullable":true},"signatureVersion":{"type":"integer","nullable":true},"clientReaction":{"anyOf":[{"$ref":"node#/definitions/ClientReactionInfo","type":"object","nullable":true},{"type":"null"}]},"reactions":{"anyOf":[{"$ref":"node#/definitions/ReactionTotalsInfo","type":"object","nullable":true},{"type":"null"}]}},"required":["id","bodySrcHash","body","heading","createdAt"],"additionalProperties":false};

function validate161(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((data.id === undefined) && (missing0 = "id")) || ((data.bodySrcHash === undefined) && (missing0 = "bodySrcHash"))) || ((data.body === undefined) && (missing0 = "body"))) || ((data.heading === undefined) && (missing0 = "heading"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))){
validate161.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema188.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate161.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverId !== undefined){
let data1 = data.receiverId;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/receiverId",schemaPath:"#/properties/receiverId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["receiverId"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyPreview !== undefined){
let data2 = data.bodyPreview;
const _errs7 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/bodyPreview",schemaPath:"#/properties/bodyPreview/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["bodyPreview"] = coerced2;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcHash !== undefined){
let data3 = data.bodySrcHash;
const _errs10 = errors;
if(typeof data3 !== "string"){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(typeof data3 === "string"){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else {
validate161.errors = [{instancePath:instancePath+"/bodySrcHash",schemaPath:"#/properties/bodySrcHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["bodySrcHash"] = coerced3;
}
}
}
var valid0 = _errs10 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcFormat !== undefined){
let data4 = data.bodySrcFormat;
const _errs12 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/bodySrcFormat",schemaPath:"#/properties/bodySrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["bodySrcFormat"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.body !== undefined){
let data5 = data.body;
const _errs15 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
validate161.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["body"] = coerced5;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyFormat !== undefined){
let data6 = data.bodyFormat;
const _errs17 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/bodyFormat",schemaPath:"#/properties/bodyFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["bodyFormat"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.media !== undefined){
let data7 = data.media;
const _errs20 = errors;
if((!(Array.isArray(data7))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((Array.isArray(data7)) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "string" || dataType7 === "number"
              || dataType7 === "boolean" || data7 === null){
coerced7 = [data7];
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/media",schemaPath:"#/properties/media/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["media"] = coerced7;
}
}
}
if(errors === _errs20){
if(Array.isArray(data7)){
var valid1 = true;
const len0 = data7.length;
for(let i0=0; i0<len0; i0++){
const _errs23 = errors;
if(!(validate152(data7[i0], {instancePath:instancePath+"/media/" + i0,parentData:data7,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate152.errors : vErrors.concat(validate152.errors);
errors = vErrors.length;
}
var valid1 = _errs23 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data9 = data.heading;
const _errs24 = errors;
if(typeof data9 !== "string"){
let dataType8 = typeof data9;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType8 = typeof data9;
if(typeof data9 === "string"){
coerced8 = data9;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data9;
}
else if(data9 === null){
coerced8 = "";
}
else {
validate161.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced8 !== undefined){
data9 = coerced8;
if(data !== undefined){
data["heading"] = coerced8;
}
}
}
var valid0 = _errs24 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.updateInfo !== undefined){
let data10 = data.updateInfo;
const _errs26 = errors;
const _errs27 = errors;
let valid2 = false;
const _errs28 = errors;
if((!(data10 && typeof data10 == "object" && !Array.isArray(data10))) && (data10 !== null)){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if((data10 && typeof data10 == "object" && !Array.isArray(data10)) && (data10 === null)){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced9 = null;
}
else {
const err0 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data !== undefined){
data["updateInfo"] = coerced9;
}
}
}
const _errs29 = errors;
if(errors === _errs29){
if(data10 && typeof data10 == "object" && !Array.isArray(data10)){
const _errs31 = errors;
for(const key1 in data10){
if(!((key1 === "important") || (key1 === "description"))){
delete data10[key1];
}
}
if(_errs31 === errors){
if(data10.important !== undefined){
let data11 = data10.important;
const _errs32 = errors;
if((typeof data11 !== "boolean") && (data11 !== null)){
let dataType10 = typeof data11;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType10 = typeof data11;
if((typeof data11 === "boolean") && (data11 === null)){
coerced10 = data11;
}
}
if(!(coerced10 !== undefined)){
if(data11 === "false" || data11 === 0 || data11 === null){
coerced10 = false;
}
else if(data11 === "true" || data11 === 1){
coerced10 = true;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced10 = null;
}
else {
const err1 = {instancePath:instancePath+"/updateInfo/important",schemaPath:"node#/definitions/UpdateInfo/properties/important/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced10 !== undefined){
data11 = coerced10;
if(data10 !== undefined){
data10["important"] = coerced10;
}
}
}
var valid4 = _errs32 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data10.description !== undefined){
let data12 = data10.description;
const _errs35 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType11 = typeof data12;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType11 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced11 = data12;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data12;
}
else if(data12 === null){
coerced11 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced11 = null;
}
else {
const err2 = {instancePath:instancePath+"/updateInfo/description",schemaPath:"node#/definitions/UpdateInfo/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced11 !== undefined){
data12 = coerced11;
if(data10 !== undefined){
data10["description"] = coerced11;
}
}
}
var valid4 = _errs35 === errors;
}
else {
var valid4 = true;
}
}
}
}
else {
const err3 = {instancePath:instancePath+"/updateInfo",schemaPath:"node#/definitions/UpdateInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
var _valid0 = _errs28 === errors;
valid2 = valid2 || _valid0;
if(!valid2){
const _errs40 = errors;
if(data10 !== null){
let dataType12 = typeof data10;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType12 = typeof data10;
if(data10 === null){
coerced12 = data10;
}
}
if(!(coerced12 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced12 = null;
}
else {
const err4 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced12 !== undefined){
data10 = coerced12;
if(data !== undefined){
data["updateInfo"] = coerced12;
}
}
}
var _valid0 = _errs40 === errors;
valid2 = valid2 || _valid0;
}
if(!valid2){
const err5 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
validate161.errors = vErrors;
return false;
}
else {
errors = _errs27;
if(vErrors !== null){
if(_errs27){
vErrors.length = _errs27;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data13 = data.createdAt;
const _errs42 = errors;
if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13))){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 === "boolean" || data13 === null
              || (dataType13 === "string" && data13 && data13 == +data13 && !(data13 % 1))){
coerced13 = +data13;
}
else {
validate161.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data !== undefined){
data["createdAt"] = coerced13;
}
}
}
var valid0 = _errs42 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deletedAt !== undefined){
let data14 = data.deletedAt;
const _errs44 = errors;
if((!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))) && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14))) && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "boolean" || data14 === null
              || (dataType14 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced14 = +data14;
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/deletedAt",schemaPath:"#/properties/deletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data !== undefined){
data["deletedAt"] = coerced14;
}
}
}
var valid0 = _errs44 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverCreatedAt !== undefined){
let data15 = data.receiverCreatedAt;
const _errs47 = errors;
if((!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))) && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15))) && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 === "boolean" || data15 === null
              || (dataType15 === "string" && data15 && data15 == +data15 && !(data15 % 1))){
coerced15 = +data15;
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/receiverCreatedAt",schemaPath:"#/properties/receiverCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data !== undefined){
data["receiverCreatedAt"] = coerced15;
}
}
}
var valid0 = _errs47 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverDeletedAt !== undefined){
let data16 = data.receiverDeletedAt;
const _errs50 = errors;
if((!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))) && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16))) && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "boolean" || data16 === null
              || (dataType16 === "string" && data16 && data16 == +data16 && !(data16 % 1))){
coerced16 = +data16;
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/receiverDeletedAt",schemaPath:"#/properties/receiverDeletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data !== undefined){
data["receiverDeletedAt"] = coerced16;
}
}
}
var valid0 = _errs50 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data17 = data.digest;
const _errs53 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced17 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data !== undefined){
data["digest"] = coerced17;
}
}
}
var valid0 = _errs53 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data18 = data.signature;
const _errs56 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType18 = typeof data18;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType18 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced18 = data18;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data18;
}
else if(data18 === null){
coerced18 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced18 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data18 = coerced18;
if(data !== undefined){
data["signature"] = coerced18;
}
}
}
var valid0 = _errs56 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data19 = data.signatureVersion;
const _errs59 = errors;
if((!(((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19)))) && (data19 !== null)){
let dataType19 = typeof data19;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType19 = typeof data19;
if((((typeof data19 == "number") && (!(data19 % 1) && !isNaN(data19))) && (isFinite(data19))) && (data19 === null)){
coerced19 = data19;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 === "boolean" || data19 === null
              || (dataType19 === "string" && data19 && data19 == +data19 && !(data19 % 1))){
coerced19 = +data19;
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced19 = null;
}
else {
validate161.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced19 !== undefined){
data19 = coerced19;
if(data !== undefined){
data["signatureVersion"] = coerced19;
}
}
}
var valid0 = _errs59 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientReaction !== undefined){
let data20 = data.clientReaction;
const _errs62 = errors;
const _errs63 = errors;
let valid5 = false;
const _errs64 = errors;
if((!(data20 && typeof data20 == "object" && !Array.isArray(data20))) && (data20 !== null)){
let dataType20 = typeof data20;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType20 = typeof data20;
if((data20 && typeof data20 == "object" && !Array.isArray(data20)) && (data20 === null)){
coerced20 = data20;
}
}
if(!(coerced20 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced20 = null;
}
else {
const err6 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced20 !== undefined){
data20 = coerced20;
if(data !== undefined){
data["clientReaction"] = coerced20;
}
}
}
const _errs65 = errors;
if(errors === _errs65){
if(data20 && typeof data20 == "object" && !Array.isArray(data20)){
let missing1;
if((((data20.negative === undefined) && (missing1 = "negative")) || ((data20.emoji === undefined) && (missing1 = "emoji"))) || ((data20.createdAt === undefined) && (missing1 = "createdAt"))){
const err7 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
else {
const _errs67 = errors;
for(const key2 in data20){
if(!((((key2 === "negative") || (key2 === "emoji")) || (key2 === "createdAt")) || (key2 === "deadline"))){
delete data20[key2];
}
}
if(_errs67 === errors){
if(data20.negative !== undefined){
let data21 = data20.negative;
const _errs68 = errors;
if(typeof data21 !== "boolean"){
let dataType21 = typeof data21;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType21 = typeof data21;
if(typeof data21 === "boolean"){
coerced21 = data21;
}
}
if(!(coerced21 !== undefined)){
if(data21 === "false" || data21 === 0 || data21 === null){
coerced21 = false;
}
else if(data21 === "true" || data21 === 1){
coerced21 = true;
}
else {
const err8 = {instancePath:instancePath+"/clientReaction/negative",schemaPath:"node#/definitions/ClientReactionInfo/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced21 !== undefined){
data21 = coerced21;
if(data20 !== undefined){
data20["negative"] = coerced21;
}
}
}
var valid7 = _errs68 === errors;
}
else {
var valid7 = true;
}
if(valid7){
if(data20.emoji !== undefined){
let data22 = data20.emoji;
const _errs70 = errors;
if(!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22))){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 === "boolean" || data22 === null
              || (dataType22 === "string" && data22 && data22 == +data22 && !(data22 % 1))){
coerced22 = +data22;
}
else {
const err9 = {instancePath:instancePath+"/clientReaction/emoji",schemaPath:"node#/definitions/ClientReactionInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data20 !== undefined){
data20["emoji"] = coerced22;
}
}
}
var valid7 = _errs70 === errors;
}
else {
var valid7 = true;
}
if(valid7){
if(data20.createdAt !== undefined){
let data23 = data20.createdAt;
const _errs72 = errors;
if(!(((typeof data23 == "number") && (!(data23 % 1) && !isNaN(data23))) && (isFinite(data23)))){
let dataType23 = typeof data23;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType23 = typeof data23;
if(((typeof data23 == "number") && (!(data23 % 1) && !isNaN(data23))) && (isFinite(data23))){
coerced23 = data23;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 === "boolean" || data23 === null
              || (dataType23 === "string" && data23 && data23 == +data23 && !(data23 % 1))){
coerced23 = +data23;
}
else {
const err10 = {instancePath:instancePath+"/clientReaction/createdAt",schemaPath:"node#/definitions/ClientReactionInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced23 !== undefined){
data23 = coerced23;
if(data20 !== undefined){
data20["createdAt"] = coerced23;
}
}
}
var valid7 = _errs72 === errors;
}
else {
var valid7 = true;
}
if(valid7){
if(data20.deadline !== undefined){
let data24 = data20.deadline;
const _errs74 = errors;
if((!(((typeof data24 == "number") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24)))) && (data24 !== null)){
let dataType24 = typeof data24;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType24 = typeof data24;
if((((typeof data24 == "number") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24))) && (data24 === null)){
coerced24 = data24;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 === "boolean" || data24 === null
              || (dataType24 === "string" && data24 && data24 == +data24 && !(data24 % 1))){
coerced24 = +data24;
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced24 = null;
}
else {
const err11 = {instancePath:instancePath+"/clientReaction/deadline",schemaPath:"node#/definitions/ClientReactionInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced24 !== undefined){
data24 = coerced24;
if(data20 !== undefined){
data20["deadline"] = coerced24;
}
}
}
var valid7 = _errs74 === errors;
}
else {
var valid7 = true;
}
}
}
}
}
}
}
else {
const err12 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
var _valid1 = _errs64 === errors;
valid5 = valid5 || _valid1;
if(!valid5){
const _errs79 = errors;
if(data20 !== null){
let dataType25 = typeof data20;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType25 = typeof data20;
if(data20 === null){
coerced25 = data20;
}
}
if(!(coerced25 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced25 = null;
}
else {
const err13 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced25 !== undefined){
data20 = coerced25;
if(data !== undefined){
data["clientReaction"] = coerced25;
}
}
}
var _valid1 = _errs79 === errors;
valid5 = valid5 || _valid1;
}
if(!valid5){
const err14 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
validate161.errors = vErrors;
return false;
}
else {
errors = _errs63;
if(vErrors !== null){
if(_errs63){
vErrors.length = _errs63;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs62 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data25 = data.reactions;
const _errs81 = errors;
const _errs82 = errors;
let valid8 = false;
const _errs83 = errors;
if((!(data25 && typeof data25 == "object" && !Array.isArray(data25))) && (data25 !== null)){
let dataType26 = typeof data25;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType26 = typeof data25;
if((data25 && typeof data25 == "object" && !Array.isArray(data25)) && (data25 === null)){
coerced26 = data25;
}
}
if(!(coerced26 !== undefined)){
if(data25 === "" || data25 === 0 || data25 === false){
coerced26 = null;
}
else {
const err15 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced26 !== undefined){
data25 = coerced26;
if(data !== undefined){
data["reactions"] = coerced26;
}
}
}
if(!(validate90(data25, {instancePath:instancePath+"/reactions",parentData:data,parentDataProperty:"reactions",rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var _valid2 = _errs83 === errors;
valid8 = valid8 || _valid2;
if(!valid8){
const _errs86 = errors;
if(data25 !== null){
let dataType27 = typeof data25;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType27 = typeof data25;
if(data25 === null){
coerced27 = data25;
}
}
if(!(coerced27 !== undefined)){
if(data25 === "" || data25 === 0 || data25 === false){
coerced27 = null;
}
else {
const err16 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced27 !== undefined){
data25 = coerced27;
if(data !== undefined){
data["reactions"] = coerced27;
}
}
}
var _valid2 = _errs86 === errors;
valid8 = valid8 || _valid2;
}
if(!valid8){
const err17 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
validate161.errors = vErrors;
return false;
}
else {
errors = _errs82;
if(vErrors !== null){
if(_errs82){
vErrors.length = _errs82;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs81 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate161.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate161.errors = vErrors;
return errors === 0;
}

export const PostingRevisionInfoArray = validate164;
const schema191 = {"type":"array","items":{"$ref":"node#/definitions/PostingRevisionInfo"}};

function validate164(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate164.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate161(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate161.errors : vErrors.concat(validate161.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate164.errors = vErrors;
return errors === 0;
}

export const ReactionCreated = validate166;
const schema192 = {"type":"object","properties":{"reaction":{"anyOf":[{"$ref":"node#/definitions/ReactionInfo","type":"object","nullable":true},{"type":"null"}]},"totals":{"$ref":"node#/definitions/ReactionTotalsInfo"}},"required":["totals"],"additionalProperties":false};

function validate166(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.totals === undefined) && (missing0 = "totals")){
validate166.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "reaction") || (key0 === "totals"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.reaction !== undefined){
let data0 = data.reaction;
const _errs2 = errors;
const _errs3 = errors;
let valid1 = false;
const _errs4 = errors;
if((!(data0 && typeof data0 == "object" && !Array.isArray(data0))) && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((data0 && typeof data0 == "object" && !Array.isArray(data0)) && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
const err0 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["reaction"] = coerced0;
}
}
}
if(!(validate84(data0, {instancePath:instancePath+"/reaction",parentData:data,parentDataProperty:"reaction",rootData}))){
vErrors = vErrors === null ? validate84.errors : vErrors.concat(validate84.errors);
errors = vErrors.length;
}
var _valid0 = _errs4 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs7 = errors;
if(data0 !== null){
let dataType1 = typeof data0;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType1 = typeof data0;
if(data0 === null){
coerced1 = data0;
}
}
if(!(coerced1 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced1 = null;
}
else {
const err1 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced1 !== undefined){
data0 = coerced1;
if(data !== undefined){
data["reaction"] = coerced1;
}
}
}
var _valid0 = _errs7 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate166.errors = vErrors;
return false;
}
else {
errors = _errs3;
if(vErrors !== null){
if(_errs3){
vErrors.length = _errs3;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totals !== undefined){
const _errs9 = errors;
if(!(validate90(data.totals, {instancePath:instancePath+"/totals",parentData:data,parentDataProperty:"totals",rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate166.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate166.errors = vErrors;
return errors === 0;
}

export const SettingMetaInfo = validate169;
const schema193 = {"type":"object","properties":{"name":{"type":"string"},"type":{"type":"string"},"defaultValue":{"type":"string","nullable":true},"privileged":{"type":"boolean","nullable":true},"title":{"type":"string"},"modifiers":{"anyOf":[{"$ref":"node#/definitions/SettingTypeModifiers","type":"object","nullable":true},{"type":"null"}]}},"required":["name","type","title"],"additionalProperties":false};

function validate169(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.name === undefined) && (missing0 = "name")) || ((data.type === undefined) && (missing0 = "type"))) || ((data.title === undefined) && (missing0 = "title"))){
validate169.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "name") || (key0 === "type")) || (key0 === "defaultValue")) || (key0 === "privileged")) || (key0 === "title")) || (key0 === "modifiers"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.name !== undefined){
let data0 = data.name;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate169.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["name"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.type !== undefined){
let data1 = data.type;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate169.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["type"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.defaultValue !== undefined){
let data2 = data.defaultValue;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate169.errors = [{instancePath:instancePath+"/defaultValue",schemaPath:"#/properties/defaultValue/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["defaultValue"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.privileged !== undefined){
let data3 = data.privileged;
const _errs9 = errors;
if((typeof data3 !== "boolean") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "boolean") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(data3 === "false" || data3 === 0 || data3 === null){
coerced3 = false;
}
else if(data3 === "true" || data3 === 1){
coerced3 = true;
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate169.errors = [{instancePath:instancePath+"/privileged",schemaPath:"#/properties/privileged/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["privileged"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data4 = data.title;
const _errs12 = errors;
if(typeof data4 !== "string"){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(typeof data4 === "string"){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else {
validate169.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["title"] = coerced4;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.modifiers !== undefined){
let data5 = data.modifiers;
const _errs14 = errors;
const _errs15 = errors;
let valid1 = false;
const _errs16 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
const err0 = {instancePath:instancePath+"/modifiers",schemaPath:"#/properties/modifiers/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["modifiers"] = coerced5;
}
}
}
const _errs17 = errors;
if(errors === _errs17){
if(data5 && typeof data5 == "object" && !Array.isArray(data5)){
const _errs19 = errors;
for(const key1 in data5){
if(!(((((((key1 === "format") || (key1 === "min")) || (key1 === "max")) || (key1 === "multiline")) || (key1 === "never")) || (key1 === "always")) || (key1 === "principals"))){
delete data5[key1];
}
}
if(_errs19 === errors){
if(data5.format !== undefined){
let data6 = data5.format;
const _errs20 = errors;
if((typeof data6 !== "string") && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((typeof data6 === "string") && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
const err1 = {instancePath:instancePath+"/modifiers/format",schemaPath:"node#/definitions/SettingTypeModifiers/properties/format/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data5 !== undefined){
data5["format"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.min !== undefined){
let data7 = data5.min;
const _errs23 = errors;
if((typeof data7 !== "string") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "string") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err2 = {instancePath:instancePath+"/modifiers/min",schemaPath:"node#/definitions/SettingTypeModifiers/properties/min/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data5 !== undefined){
data5["min"] = coerced7;
}
}
}
var valid3 = _errs23 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.max !== undefined){
let data8 = data5.max;
const _errs26 = errors;
if((typeof data8 !== "string") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "string") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 == "number" || dataType8 == "boolean"){
coerced8 = "" + data8;
}
else if(data8 === null){
coerced8 = "";
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err3 = {instancePath:instancePath+"/modifiers/max",schemaPath:"node#/definitions/SettingTypeModifiers/properties/max/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data5 !== undefined){
data5["max"] = coerced8;
}
}
}
var valid3 = _errs26 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.multiline !== undefined){
let data9 = data5.multiline;
const _errs29 = errors;
if((typeof data9 !== "boolean") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "boolean") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(data9 === "false" || data9 === 0 || data9 === null){
coerced9 = false;
}
else if(data9 === "true" || data9 === 1){
coerced9 = true;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err4 = {instancePath:instancePath+"/modifiers/multiline",schemaPath:"node#/definitions/SettingTypeModifiers/properties/multiline/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data5 !== undefined){
data5["multiline"] = coerced9;
}
}
}
var valid3 = _errs29 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.never !== undefined){
let data10 = data5.never;
const _errs32 = errors;
if((typeof data10 !== "boolean") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "boolean") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(data10 === "false" || data10 === 0 || data10 === null){
coerced10 = false;
}
else if(data10 === "true" || data10 === 1){
coerced10 = true;
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err5 = {instancePath:instancePath+"/modifiers/never",schemaPath:"node#/definitions/SettingTypeModifiers/properties/never/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data5 !== undefined){
data5["never"] = coerced10;
}
}
}
var valid3 = _errs32 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.always !== undefined){
let data11 = data5.always;
const _errs35 = errors;
if((typeof data11 !== "boolean") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "boolean") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(data11 === "false" || data11 === 0 || data11 === null){
coerced11 = false;
}
else if(data11 === "true" || data11 === 1){
coerced11 = true;
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
const err6 = {instancePath:instancePath+"/modifiers/always",schemaPath:"node#/definitions/SettingTypeModifiers/properties/always/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data5 !== undefined){
data5["always"] = coerced11;
}
}
}
var valid3 = _errs35 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data5.principals !== undefined){
let data12 = data5.principals;
const _errs38 = errors;
if((!(Array.isArray(data12))) && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((Array.isArray(data12)) && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 === "string" || dataType12 === "number"
              || dataType12 === "boolean" || data12 === null){
coerced12 = [data12];
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err7 = {instancePath:instancePath+"/modifiers/principals",schemaPath:"node#/definitions/SettingTypeModifiers/properties/principals/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data5 !== undefined){
data5["principals"] = coerced12;
}
}
}
if(errors === _errs38){
if(Array.isArray(data12)){
var valid4 = true;
const len0 = data12.length;
for(let i0=0; i0<len0; i0++){
let data13 = data12[i0];
const _errs41 = errors;
if(typeof data13 !== "string"){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if(typeof data13 === "string"){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else {
const err8 = {instancePath:instancePath+"/modifiers/principals/" + i0,schemaPath:"node#/definitions/SettingTypeModifiers/properties/principals/items/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data12 !== undefined){
data12[i0] = coerced13;
}
}
}
var valid4 = _errs41 === errors;
if(!valid4){
break;
}
}
}
}
var valid3 = _errs38 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
}
else {
const err9 = {instancePath:instancePath+"/modifiers",schemaPath:"node#/definitions/SettingTypeModifiers/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
var _valid0 = _errs16 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs45 = errors;
if(data5 !== null){
let dataType14 = typeof data5;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType14 = typeof data5;
if(data5 === null){
coerced14 = data5;
}
}
if(!(coerced14 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced14 = null;
}
else {
const err10 = {instancePath:instancePath+"/modifiers",schemaPath:"#/properties/modifiers/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced14 !== undefined){
data5 = coerced14;
if(data !== undefined){
data["modifiers"] = coerced14;
}
}
}
var _valid0 = _errs45 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err11 = {instancePath:instancePath+"/modifiers",schemaPath:"#/properties/modifiers/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
validate169.errors = vErrors;
return false;
}
else {
errors = _errs15;
if(vErrors !== null){
if(_errs15){
vErrors.length = _errs15;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate169.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate169.errors = vErrors;
return errors === 0;
}

export const SettingMetaInfoArray = validate170;
const schema195 = {"type":"array","items":{"$ref":"node#/definitions/SettingMetaInfo"}};

function validate170(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate170.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate169(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate169.errors : vErrors.concat(validate169.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate170.errors = vErrors;
return errors === 0;
}

export const StorySummaryData = validate172;
const schema196 = {"type":"object","properties":{"node":{"anyOf":[{"$ref":"node#/definitions/StorySummaryNode","type":"object","nullable":true},{"type":"null"}]},"posting":{"anyOf":[{"$ref":"node#/definitions/StorySummaryEntry","type":"object","nullable":true},{"type":"null"}]},"comment":{"anyOf":[{"$ref":"node#/definitions/StorySummaryEntry","type":"object","nullable":true},{"type":"null"}]},"comments":{"type":"array","items":{"$ref":"node#/definitions/StorySummaryEntry"},"nullable":true},"totalComments":{"type":"integer","nullable":true},"repliedTo":{"anyOf":[{"$ref":"node#/definitions/StorySummaryEntry","type":"object","nullable":true},{"type":"null"}]},"parentPosting":{"anyOf":[{"$ref":"node#/definitions/StorySummaryEntry","type":"object","nullable":true},{"type":"null"}]},"reaction":{"anyOf":[{"$ref":"node#/definitions/StorySummaryReaction","type":"object","nullable":true},{"type":"null"}]},"reactions":{"type":"array","items":{"$ref":"node#/definitions/StorySummaryReaction"},"nullable":true},"totalReactions":{"type":"integer","nullable":true},"feedName":{"type":"string","nullable":true},"subscriptionReason":{"type":"string","nullable":true},"friendGroup":{"anyOf":[{"$ref":"node#/definitions/StorySummaryFriendGroup","type":"object","nullable":true},{"type":"null"}]},"blocked":{"anyOf":[{"$ref":"node#/definitions/StorySummaryBlocked","type":"object","nullable":true},{"type":"null"}]},"sheriff":{"anyOf":[{"$ref":"node#/definitions/StorySummarySheriff","type":"object","nullable":true},{"type":"null"}]},"description":{"type":"string","nullable":true},"clicks":{"type":"array","items":{"$ref":"node#/definitions/StorySummaryPageClicks"},"nullable":true}},"additionalProperties":false};

function validate172(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema196.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.node !== undefined){
let data0 = data.node;
const _errs2 = errors;
const _errs3 = errors;
let valid1 = false;
const _errs4 = errors;
if((!(data0 && typeof data0 == "object" && !Array.isArray(data0))) && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((data0 && typeof data0 == "object" && !Array.isArray(data0)) && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
const err0 = {instancePath:instancePath+"/node",schemaPath:"#/properties/node/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["node"] = coerced0;
}
}
}
const _errs5 = errors;
if(errors === _errs5){
if(data0 && typeof data0 == "object" && !Array.isArray(data0)){
const _errs7 = errors;
for(const key1 in data0){
if(!(((key1 === "ownerName") || (key1 === "ownerFullName")) || (key1 === "ownerGender"))){
delete data0[key1];
}
}
if(_errs7 === errors){
if(data0.ownerName !== undefined){
let data1 = data0.ownerName;
const _errs8 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
const err1 = {instancePath:instancePath+"/node/ownerName",schemaPath:"node#/definitions/StorySummaryNode/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data0 !== undefined){
data0["ownerName"] = coerced1;
}
}
}
var valid3 = _errs8 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data0.ownerFullName !== undefined){
let data2 = data0.ownerFullName;
const _errs11 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
const err2 = {instancePath:instancePath+"/node/ownerFullName",schemaPath:"node#/definitions/StorySummaryNode/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data0 !== undefined){
data0["ownerFullName"] = coerced2;
}
}
}
var valid3 = _errs11 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data0.ownerGender !== undefined){
let data3 = data0.ownerGender;
const _errs14 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
const err3 = {instancePath:instancePath+"/node/ownerGender",schemaPath:"node#/definitions/StorySummaryNode/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data0 !== undefined){
data0["ownerGender"] = coerced3;
}
}
}
var valid3 = _errs14 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
else {
const err4 = {instancePath:instancePath+"/node",schemaPath:"node#/definitions/StorySummaryNode/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
var _valid0 = _errs4 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs19 = errors;
if(data0 !== null){
let dataType4 = typeof data0;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType4 = typeof data0;
if(data0 === null){
coerced4 = data0;
}
}
if(!(coerced4 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced4 = null;
}
else {
const err5 = {instancePath:instancePath+"/node",schemaPath:"#/properties/node/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced4 !== undefined){
data0 = coerced4;
if(data !== undefined){
data["node"] = coerced4;
}
}
}
var _valid0 = _errs19 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err6 = {instancePath:instancePath+"/node",schemaPath:"#/properties/node/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs3;
if(vErrors !== null){
if(_errs3){
vErrors.length = _errs3;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.posting !== undefined){
let data4 = data.posting;
const _errs21 = errors;
const _errs22 = errors;
let valid4 = false;
const _errs23 = errors;
if((!(data4 && typeof data4 == "object" && !Array.isArray(data4))) && (data4 !== null)){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if((data4 && typeof data4 == "object" && !Array.isArray(data4)) && (data4 === null)){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced5 = null;
}
else {
const err7 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data !== undefined){
data["posting"] = coerced5;
}
}
}
if(!(validate111(data4, {instancePath:instancePath+"/posting",parentData:data,parentDataProperty:"posting",rootData}))){
vErrors = vErrors === null ? validate111.errors : vErrors.concat(validate111.errors);
errors = vErrors.length;
}
var _valid1 = _errs23 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs26 = errors;
if(data4 !== null){
let dataType6 = typeof data4;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType6 = typeof data4;
if(data4 === null){
coerced6 = data4;
}
}
if(!(coerced6 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced6 = null;
}
else {
const err8 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced6 !== undefined){
data4 = coerced6;
if(data !== undefined){
data["posting"] = coerced6;
}
}
}
var _valid1 = _errs26 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err9 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs22;
if(vErrors !== null){
if(_errs22){
vErrors.length = _errs22;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs21 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.comment !== undefined){
let data5 = data.comment;
const _errs28 = errors;
const _errs29 = errors;
let valid5 = false;
const _errs30 = errors;
if((!(data5 && typeof data5 == "object" && !Array.isArray(data5))) && (data5 !== null)){
let dataType7 = typeof data5;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType7 = typeof data5;
if((data5 && typeof data5 == "object" && !Array.isArray(data5)) && (data5 === null)){
coerced7 = data5;
}
}
if(!(coerced7 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced7 = null;
}
else {
const err10 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced7 !== undefined){
data5 = coerced7;
if(data !== undefined){
data["comment"] = coerced7;
}
}
}
if(!(validate111(data5, {instancePath:instancePath+"/comment",parentData:data,parentDataProperty:"comment",rootData}))){
vErrors = vErrors === null ? validate111.errors : vErrors.concat(validate111.errors);
errors = vErrors.length;
}
var _valid2 = _errs30 === errors;
valid5 = valid5 || _valid2;
if(!valid5){
const _errs33 = errors;
if(data5 !== null){
let dataType8 = typeof data5;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType8 = typeof data5;
if(data5 === null){
coerced8 = data5;
}
}
if(!(coerced8 !== undefined)){
if(data5 === "" || data5 === 0 || data5 === false){
coerced8 = null;
}
else {
const err11 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced8 !== undefined){
data5 = coerced8;
if(data !== undefined){
data["comment"] = coerced8;
}
}
}
var _valid2 = _errs33 === errors;
valid5 = valid5 || _valid2;
}
if(!valid5){
const err12 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs29;
if(vErrors !== null){
if(_errs29){
vErrors.length = _errs29;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs28 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.comments !== undefined){
let data6 = data.comments;
const _errs35 = errors;
if((!(Array.isArray(data6))) && (data6 !== null)){
let dataType9 = typeof data6;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType9 = typeof data6;
if((Array.isArray(data6)) && (data6 === null)){
coerced9 = data6;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 === "string" || dataType9 === "number"
              || dataType9 === "boolean" || data6 === null){
coerced9 = [data6];
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced9 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/comments",schemaPath:"#/properties/comments/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced9 !== undefined){
data6 = coerced9;
if(data !== undefined){
data["comments"] = coerced9;
}
}
}
if(errors === _errs35){
if(Array.isArray(data6)){
var valid6 = true;
const len0 = data6.length;
for(let i0=0; i0<len0; i0++){
const _errs38 = errors;
if(!(validate111(data6[i0], {instancePath:instancePath+"/comments/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate111.errors : vErrors.concat(validate111.errors);
errors = vErrors.length;
}
var valid6 = _errs38 === errors;
if(!valid6){
break;
}
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalComments !== undefined){
let data8 = data.totalComments;
const _errs39 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType10 = typeof data8;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType10 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced10 = data8;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 === "boolean" || data8 === null
              || (dataType10 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced10 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced10 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/totalComments",schemaPath:"#/properties/totalComments/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced10 !== undefined){
data8 = coerced10;
if(data !== undefined){
data["totalComments"] = coerced10;
}
}
}
var valid0 = _errs39 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.repliedTo !== undefined){
let data9 = data.repliedTo;
const _errs42 = errors;
const _errs43 = errors;
let valid7 = false;
const _errs44 = errors;
if((!(data9 && typeof data9 == "object" && !Array.isArray(data9))) && (data9 !== null)){
let dataType11 = typeof data9;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType11 = typeof data9;
if((data9 && typeof data9 == "object" && !Array.isArray(data9)) && (data9 === null)){
coerced11 = data9;
}
}
if(!(coerced11 !== undefined)){
if(data9 === "" || data9 === 0 || data9 === false){
coerced11 = null;
}
else {
const err13 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced11 !== undefined){
data9 = coerced11;
if(data !== undefined){
data["repliedTo"] = coerced11;
}
}
}
if(!(validate111(data9, {instancePath:instancePath+"/repliedTo",parentData:data,parentDataProperty:"repliedTo",rootData}))){
vErrors = vErrors === null ? validate111.errors : vErrors.concat(validate111.errors);
errors = vErrors.length;
}
var _valid3 = _errs44 === errors;
valid7 = valid7 || _valid3;
if(!valid7){
const _errs47 = errors;
if(data9 !== null){
let dataType12 = typeof data9;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType12 = typeof data9;
if(data9 === null){
coerced12 = data9;
}
}
if(!(coerced12 !== undefined)){
if(data9 === "" || data9 === 0 || data9 === false){
coerced12 = null;
}
else {
const err14 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced12 !== undefined){
data9 = coerced12;
if(data !== undefined){
data["repliedTo"] = coerced12;
}
}
}
var _valid3 = _errs47 === errors;
valid7 = valid7 || _valid3;
}
if(!valid7){
const err15 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs43;
if(vErrors !== null){
if(_errs43){
vErrors.length = _errs43;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs42 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.parentPosting !== undefined){
let data10 = data.parentPosting;
const _errs49 = errors;
const _errs50 = errors;
let valid8 = false;
const _errs51 = errors;
if((!(data10 && typeof data10 == "object" && !Array.isArray(data10))) && (data10 !== null)){
let dataType13 = typeof data10;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType13 = typeof data10;
if((data10 && typeof data10 == "object" && !Array.isArray(data10)) && (data10 === null)){
coerced13 = data10;
}
}
if(!(coerced13 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced13 = null;
}
else {
const err16 = {instancePath:instancePath+"/parentPosting",schemaPath:"#/properties/parentPosting/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced13 !== undefined){
data10 = coerced13;
if(data !== undefined){
data["parentPosting"] = coerced13;
}
}
}
if(!(validate111(data10, {instancePath:instancePath+"/parentPosting",parentData:data,parentDataProperty:"parentPosting",rootData}))){
vErrors = vErrors === null ? validate111.errors : vErrors.concat(validate111.errors);
errors = vErrors.length;
}
var _valid4 = _errs51 === errors;
valid8 = valid8 || _valid4;
if(!valid8){
const _errs54 = errors;
if(data10 !== null){
let dataType14 = typeof data10;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType14 = typeof data10;
if(data10 === null){
coerced14 = data10;
}
}
if(!(coerced14 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced14 = null;
}
else {
const err17 = {instancePath:instancePath+"/parentPosting",schemaPath:"#/properties/parentPosting/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced14 !== undefined){
data10 = coerced14;
if(data !== undefined){
data["parentPosting"] = coerced14;
}
}
}
var _valid4 = _errs54 === errors;
valid8 = valid8 || _valid4;
}
if(!valid8){
const err18 = {instancePath:instancePath+"/parentPosting",schemaPath:"#/properties/parentPosting/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs50;
if(vErrors !== null){
if(_errs50){
vErrors.length = _errs50;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reaction !== undefined){
let data11 = data.reaction;
const _errs56 = errors;
const _errs57 = errors;
let valid9 = false;
const _errs58 = errors;
if((!(data11 && typeof data11 == "object" && !Array.isArray(data11))) && (data11 !== null)){
let dataType15 = typeof data11;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType15 = typeof data11;
if((data11 && typeof data11 == "object" && !Array.isArray(data11)) && (data11 === null)){
coerced15 = data11;
}
}
if(!(coerced15 !== undefined)){
if(data11 === "" || data11 === 0 || data11 === false){
coerced15 = null;
}
else {
const err19 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced15 !== undefined){
data11 = coerced15;
if(data !== undefined){
data["reaction"] = coerced15;
}
}
}
const _errs59 = errors;
if(errors === _errs59){
if(data11 && typeof data11 == "object" && !Array.isArray(data11)){
const _errs61 = errors;
for(const key2 in data11){
if(!((((key2 === "ownerName") || (key2 === "ownerFullName")) || (key2 === "ownerGender")) || (key2 === "emoji"))){
delete data11[key2];
}
}
if(_errs61 === errors){
if(data11.ownerName !== undefined){
let data12 = data11.ownerName;
const _errs62 = errors;
if((typeof data12 !== "string") && (data12 !== null)){
let dataType16 = typeof data12;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType16 = typeof data12;
if((typeof data12 === "string") && (data12 === null)){
coerced16 = data12;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data12;
}
else if(data12 === null){
coerced16 = "";
}
else if(data12 === "" || data12 === 0 || data12 === false){
coerced16 = null;
}
else {
const err20 = {instancePath:instancePath+"/reaction/ownerName",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced16 !== undefined){
data12 = coerced16;
if(data11 !== undefined){
data11["ownerName"] = coerced16;
}
}
}
var valid11 = _errs62 === errors;
}
else {
var valid11 = true;
}
if(valid11){
if(data11.ownerFullName !== undefined){
let data13 = data11.ownerFullName;
const _errs65 = errors;
if((typeof data13 !== "string") && (data13 !== null)){
let dataType17 = typeof data13;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType17 = typeof data13;
if((typeof data13 === "string") && (data13 === null)){
coerced17 = data13;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data13;
}
else if(data13 === null){
coerced17 = "";
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced17 = null;
}
else {
const err21 = {instancePath:instancePath+"/reaction/ownerFullName",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced17 !== undefined){
data13 = coerced17;
if(data11 !== undefined){
data11["ownerFullName"] = coerced17;
}
}
}
var valid11 = _errs65 === errors;
}
else {
var valid11 = true;
}
if(valid11){
if(data11.ownerGender !== undefined){
let data14 = data11.ownerGender;
const _errs68 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType18 = typeof data14;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType18 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced18 = data14;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data14;
}
else if(data14 === null){
coerced18 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced18 = null;
}
else {
const err22 = {instancePath:instancePath+"/reaction/ownerGender",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced18 !== undefined){
data14 = coerced18;
if(data11 !== undefined){
data11["ownerGender"] = coerced18;
}
}
}
var valid11 = _errs68 === errors;
}
else {
var valid11 = true;
}
if(valid11){
if(data11.emoji !== undefined){
let data15 = data11.emoji;
const _errs71 = errors;
if((!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))) && (data15 !== null)){
let dataType19 = typeof data15;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType19 = typeof data15;
if((((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15))) && (data15 === null)){
coerced19 = data15;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 === "boolean" || data15 === null
              || (dataType19 === "string" && data15 && data15 == +data15 && !(data15 % 1))){
coerced19 = +data15;
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced19 = null;
}
else {
const err23 = {instancePath:instancePath+"/reaction/emoji",schemaPath:"node#/definitions/StorySummaryReaction/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced19 !== undefined){
data15 = coerced19;
if(data11 !== undefined){
data11["emoji"] = coerced19;
}
}
}
var valid11 = _errs71 === errors;
}
else {
var valid11 = true;
}
}
}
}
}
}
else {
const err24 = {instancePath:instancePath+"/reaction",schemaPath:"node#/definitions/StorySummaryReaction/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
var _valid5 = _errs58 === errors;
valid9 = valid9 || _valid5;
if(!valid9){
const _errs76 = errors;
if(data11 !== null){
let dataType20 = typeof data11;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType20 = typeof data11;
if(data11 === null){
coerced20 = data11;
}
}
if(!(coerced20 !== undefined)){
if(data11 === "" || data11 === 0 || data11 === false){
coerced20 = null;
}
else {
const err25 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
if(coerced20 !== undefined){
data11 = coerced20;
if(data !== undefined){
data["reaction"] = coerced20;
}
}
}
var _valid5 = _errs76 === errors;
valid9 = valid9 || _valid5;
}
if(!valid9){
const err26 = {instancePath:instancePath+"/reaction",schemaPath:"#/properties/reaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs57;
if(vErrors !== null){
if(_errs57){
vErrors.length = _errs57;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs56 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data16 = data.reactions;
const _errs78 = errors;
if((!(Array.isArray(data16))) && (data16 !== null)){
let dataType21 = typeof data16;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType21 = typeof data16;
if((Array.isArray(data16)) && (data16 === null)){
coerced21 = data16;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 === "string" || dataType21 === "number"
              || dataType21 === "boolean" || data16 === null){
coerced21 = [data16];
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced21 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced21 !== undefined){
data16 = coerced21;
if(data !== undefined){
data["reactions"] = coerced21;
}
}
}
if(errors === _errs78){
if(Array.isArray(data16)){
var valid12 = true;
const len1 = data16.length;
for(let i1=0; i1<len1; i1++){
let data17 = data16[i1];
const _errs81 = errors;
const _errs82 = errors;
if(errors === _errs82){
if(data17 && typeof data17 == "object" && !Array.isArray(data17)){
const _errs84 = errors;
for(const key3 in data17){
if(!((((key3 === "ownerName") || (key3 === "ownerFullName")) || (key3 === "ownerGender")) || (key3 === "emoji"))){
delete data17[key3];
}
}
if(_errs84 === errors){
if(data17.ownerName !== undefined){
let data18 = data17.ownerName;
const _errs85 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType22 = typeof data18;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType22 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced22 = data18;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data18;
}
else if(data18 === null){
coerced22 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced22 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions/" + i1+"/ownerName",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced22 !== undefined){
data18 = coerced22;
if(data17 !== undefined){
data17["ownerName"] = coerced22;
}
}
}
var valid14 = _errs85 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data17.ownerFullName !== undefined){
let data19 = data17.ownerFullName;
const _errs88 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType23 = typeof data19;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType23 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced23 = data19;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data19;
}
else if(data19 === null){
coerced23 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced23 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions/" + i1+"/ownerFullName",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced23 !== undefined){
data19 = coerced23;
if(data17 !== undefined){
data17["ownerFullName"] = coerced23;
}
}
}
var valid14 = _errs88 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data17.ownerGender !== undefined){
let data20 = data17.ownerGender;
const _errs91 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType24 = typeof data20;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType24 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced24 = data20;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data20;
}
else if(data20 === null){
coerced24 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced24 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions/" + i1+"/ownerGender",schemaPath:"node#/definitions/StorySummaryReaction/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced24 !== undefined){
data20 = coerced24;
if(data17 !== undefined){
data17["ownerGender"] = coerced24;
}
}
}
var valid14 = _errs91 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data17.emoji !== undefined){
let data21 = data17.emoji;
const _errs94 = errors;
if((!(((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21)))) && (data21 !== null)){
let dataType25 = typeof data21;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType25 = typeof data21;
if((((typeof data21 == "number") && (!(data21 % 1) && !isNaN(data21))) && (isFinite(data21))) && (data21 === null)){
coerced25 = data21;
}
}
if(!(coerced25 !== undefined)){
if(dataType25 === "boolean" || data21 === null
              || (dataType25 === "string" && data21 && data21 == +data21 && !(data21 % 1))){
coerced25 = +data21;
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced25 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions/" + i1+"/emoji",schemaPath:"node#/definitions/StorySummaryReaction/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced25 !== undefined){
data21 = coerced25;
if(data17 !== undefined){
data17["emoji"] = coerced25;
}
}
}
var valid14 = _errs94 === errors;
}
else {
var valid14 = true;
}
}
}
}
}
}
else {
validate172.errors = [{instancePath:instancePath+"/reactions/" + i1,schemaPath:"node#/definitions/StorySummaryReaction/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid12 = _errs81 === errors;
if(!valid12){
break;
}
}
}
}
var valid0 = _errs78 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalReactions !== undefined){
let data22 = data.totalReactions;
const _errs97 = errors;
if((!(((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))) && (data22 !== null)){
let dataType26 = typeof data22;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType26 = typeof data22;
if((((typeof data22 == "number") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22))) && (data22 === null)){
coerced26 = data22;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 === "boolean" || data22 === null
              || (dataType26 === "string" && data22 && data22 == +data22 && !(data22 % 1))){
coerced26 = +data22;
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced26 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/totalReactions",schemaPath:"#/properties/totalReactions/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced26 !== undefined){
data22 = coerced26;
if(data !== undefined){
data["totalReactions"] = coerced26;
}
}
}
var valid0 = _errs97 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data23 = data.feedName;
const _errs100 = errors;
if((typeof data23 !== "string") && (data23 !== null)){
let dataType27 = typeof data23;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType27 = typeof data23;
if((typeof data23 === "string") && (data23 === null)){
coerced27 = data23;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 == "number" || dataType27 == "boolean"){
coerced27 = "" + data23;
}
else if(data23 === null){
coerced27 = "";
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced27 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced27 !== undefined){
data23 = coerced27;
if(data !== undefined){
data["feedName"] = coerced27;
}
}
}
var valid0 = _errs100 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.subscriptionReason !== undefined){
let data24 = data.subscriptionReason;
const _errs103 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType28 = typeof data24;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType28 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced28 = data24;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 == "number" || dataType28 == "boolean"){
coerced28 = "" + data24;
}
else if(data24 === null){
coerced28 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced28 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/subscriptionReason",schemaPath:"#/properties/subscriptionReason/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced28 !== undefined){
data24 = coerced28;
if(data !== undefined){
data["subscriptionReason"] = coerced28;
}
}
}
var valid0 = _errs103 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.friendGroup !== undefined){
let data25 = data.friendGroup;
const _errs106 = errors;
const _errs107 = errors;
let valid15 = false;
const _errs108 = errors;
if((!(data25 && typeof data25 == "object" && !Array.isArray(data25))) && (data25 !== null)){
let dataType29 = typeof data25;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType29 = typeof data25;
if((data25 && typeof data25 == "object" && !Array.isArray(data25)) && (data25 === null)){
coerced29 = data25;
}
}
if(!(coerced29 !== undefined)){
if(data25 === "" || data25 === 0 || data25 === false){
coerced29 = null;
}
else {
const err27 = {instancePath:instancePath+"/friendGroup",schemaPath:"#/properties/friendGroup/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
if(coerced29 !== undefined){
data25 = coerced29;
if(data !== undefined){
data["friendGroup"] = coerced29;
}
}
}
const _errs109 = errors;
if(errors === _errs109){
if(data25 && typeof data25 == "object" && !Array.isArray(data25)){
const _errs111 = errors;
for(const key4 in data25){
if(!((key4 === "id") || (key4 === "title"))){
delete data25[key4];
}
}
if(_errs111 === errors){
if(data25.id !== undefined){
let data26 = data25.id;
const _errs112 = errors;
if((typeof data26 !== "string") && (data26 !== null)){
let dataType30 = typeof data26;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType30 = typeof data26;
if((typeof data26 === "string") && (data26 === null)){
coerced30 = data26;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data26;
}
else if(data26 === null){
coerced30 = "";
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced30 = null;
}
else {
const err28 = {instancePath:instancePath+"/friendGroup/id",schemaPath:"node#/definitions/StorySummaryFriendGroup/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced30 !== undefined){
data26 = coerced30;
if(data25 !== undefined){
data25["id"] = coerced30;
}
}
}
var valid17 = _errs112 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data25.title !== undefined){
let data27 = data25.title;
const _errs115 = errors;
if((typeof data27 !== "string") && (data27 !== null)){
let dataType31 = typeof data27;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType31 = typeof data27;
if((typeof data27 === "string") && (data27 === null)){
coerced31 = data27;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data27;
}
else if(data27 === null){
coerced31 = "";
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced31 = null;
}
else {
const err29 = {instancePath:instancePath+"/friendGroup/title",schemaPath:"node#/definitions/StorySummaryFriendGroup/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(coerced31 !== undefined){
data27 = coerced31;
if(data25 !== undefined){
data25["title"] = coerced31;
}
}
}
var valid17 = _errs115 === errors;
}
else {
var valid17 = true;
}
}
}
}
else {
const err30 = {instancePath:instancePath+"/friendGroup",schemaPath:"node#/definitions/StorySummaryFriendGroup/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
var _valid6 = _errs108 === errors;
valid15 = valid15 || _valid6;
if(!valid15){
const _errs120 = errors;
if(data25 !== null){
let dataType32 = typeof data25;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType32 = typeof data25;
if(data25 === null){
coerced32 = data25;
}
}
if(!(coerced32 !== undefined)){
if(data25 === "" || data25 === 0 || data25 === false){
coerced32 = null;
}
else {
const err31 = {instancePath:instancePath+"/friendGroup",schemaPath:"#/properties/friendGroup/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
if(coerced32 !== undefined){
data25 = coerced32;
if(data !== undefined){
data["friendGroup"] = coerced32;
}
}
}
var _valid6 = _errs120 === errors;
valid15 = valid15 || _valid6;
}
if(!valid15){
const err32 = {instancePath:instancePath+"/friendGroup",schemaPath:"#/properties/friendGroup/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs107;
if(vErrors !== null){
if(_errs107){
vErrors.length = _errs107;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs106 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blocked !== undefined){
let data28 = data.blocked;
const _errs122 = errors;
const _errs123 = errors;
let valid18 = false;
const _errs124 = errors;
if((!(data28 && typeof data28 == "object" && !Array.isArray(data28))) && (data28 !== null)){
let dataType33 = typeof data28;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType33 = typeof data28;
if((data28 && typeof data28 == "object" && !Array.isArray(data28)) && (data28 === null)){
coerced33 = data28;
}
}
if(!(coerced33 !== undefined)){
if(data28 === "" || data28 === 0 || data28 === false){
coerced33 = null;
}
else {
const err33 = {instancePath:instancePath+"/blocked",schemaPath:"#/properties/blocked/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(coerced33 !== undefined){
data28 = coerced33;
if(data !== undefined){
data["blocked"] = coerced33;
}
}
}
const _errs125 = errors;
if(errors === _errs125){
if(data28 && typeof data28 == "object" && !Array.isArray(data28)){
let missing0;
if((data28.operations === undefined) && (missing0 = "operations")){
const err34 = {instancePath:instancePath+"/blocked",schemaPath:"node#/definitions/StorySummaryBlocked/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
else {
const _errs127 = errors;
for(const key5 in data28){
if(!((key5 === "operations") || (key5 === "period"))){
delete data28[key5];
}
}
if(_errs127 === errors){
if(data28.operations !== undefined){
let data29 = data28.operations;
const _errs128 = errors;
if(!(Array.isArray(data29))){
let dataType34 = typeof data29;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType34 = typeof data29;
if(Array.isArray(data29)){
coerced34 = data29;
}
}
if(!(coerced34 !== undefined)){
if(dataType34 === "string" || dataType34 === "number"
              || dataType34 === "boolean" || data29 === null){
coerced34 = [data29];
}
else {
const err35 = {instancePath:instancePath+"/blocked/operations",schemaPath:"node#/definitions/StorySummaryBlocked/properties/operations/type",keyword:"type",params:{type: "array"},message:"must be array"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(coerced34 !== undefined){
data29 = coerced34;
if(data28 !== undefined){
data28["operations"] = coerced34;
}
}
}
if(errors === _errs128){
if(Array.isArray(data29)){
var valid21 = true;
const len2 = data29.length;
for(let i2=0; i2<len2; i2++){
let data30 = data29[i2];
const _errs130 = errors;
if(typeof data30 !== "string"){
let dataType35 = typeof data30;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType35 = typeof data30;
if(typeof data30 === "string"){
coerced35 = data30;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data30;
}
else if(data30 === null){
coerced35 = "";
}
else {
const err36 = {instancePath:instancePath+"/blocked/operations/" + i2,schemaPath:"node#/definitions/StorySummaryBlocked/properties/operations/items/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(coerced35 !== undefined){
data30 = coerced35;
if(data29 !== undefined){
data29[i2] = coerced35;
}
}
}
var valid21 = _errs130 === errors;
if(!valid21){
break;
}
}
}
}
var valid20 = _errs128 === errors;
}
else {
var valid20 = true;
}
if(valid20){
if(data28.period !== undefined){
let data31 = data28.period;
const _errs132 = errors;
if((!(((typeof data31 == "number") && (!(data31 % 1) && !isNaN(data31))) && (isFinite(data31)))) && (data31 !== null)){
let dataType36 = typeof data31;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType36 = typeof data31;
if((((typeof data31 == "number") && (!(data31 % 1) && !isNaN(data31))) && (isFinite(data31))) && (data31 === null)){
coerced36 = data31;
}
}
if(!(coerced36 !== undefined)){
if(dataType36 === "boolean" || data31 === null
              || (dataType36 === "string" && data31 && data31 == +data31 && !(data31 % 1))){
coerced36 = +data31;
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced36 = null;
}
else {
const err37 = {instancePath:instancePath+"/blocked/period",schemaPath:"node#/definitions/StorySummaryBlocked/properties/period/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(coerced36 !== undefined){
data31 = coerced36;
if(data28 !== undefined){
data28["period"] = coerced36;
}
}
}
var valid20 = _errs132 === errors;
}
else {
var valid20 = true;
}
}
}
}
}
else {
const err38 = {instancePath:instancePath+"/blocked",schemaPath:"node#/definitions/StorySummaryBlocked/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
var _valid7 = _errs124 === errors;
valid18 = valid18 || _valid7;
if(!valid18){
const _errs137 = errors;
if(data28 !== null){
let dataType37 = typeof data28;
let coerced37 = undefined;
if(dataType37 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType37 = typeof data28;
if(data28 === null){
coerced37 = data28;
}
}
if(!(coerced37 !== undefined)){
if(data28 === "" || data28 === 0 || data28 === false){
coerced37 = null;
}
else {
const err39 = {instancePath:instancePath+"/blocked",schemaPath:"#/properties/blocked/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
if(coerced37 !== undefined){
data28 = coerced37;
if(data !== undefined){
data["blocked"] = coerced37;
}
}
}
var _valid7 = _errs137 === errors;
valid18 = valid18 || _valid7;
}
if(!valid18){
const err40 = {instancePath:instancePath+"/blocked",schemaPath:"#/properties/blocked/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs123;
if(vErrors !== null){
if(_errs123){
vErrors.length = _errs123;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs122 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriff !== undefined){
let data32 = data.sheriff;
const _errs139 = errors;
const _errs140 = errors;
let valid22 = false;
const _errs141 = errors;
if((!(data32 && typeof data32 == "object" && !Array.isArray(data32))) && (data32 !== null)){
let dataType38 = typeof data32;
let coerced38 = undefined;
if(dataType38 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType38 = typeof data32;
if((data32 && typeof data32 == "object" && !Array.isArray(data32)) && (data32 === null)){
coerced38 = data32;
}
}
if(!(coerced38 !== undefined)){
if(data32 === "" || data32 === 0 || data32 === false){
coerced38 = null;
}
else {
const err41 = {instancePath:instancePath+"/sheriff",schemaPath:"#/properties/sheriff/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
}
if(coerced38 !== undefined){
data32 = coerced38;
if(data !== undefined){
data["sheriff"] = coerced38;
}
}
}
const _errs142 = errors;
if(errors === _errs142){
if(data32 && typeof data32 == "object" && !Array.isArray(data32)){
let missing1;
if((data32.sheriffName === undefined) && (missing1 = "sheriffName")){
const err42 = {instancePath:instancePath+"/sheriff",schemaPath:"node#/definitions/StorySummarySheriff/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
}
else {
const _errs144 = errors;
for(const key6 in data32){
if(!(((key6 === "sheriffName") || (key6 === "orderId")) || (key6 === "complaintId"))){
delete data32[key6];
}
}
if(_errs144 === errors){
if(data32.sheriffName !== undefined){
let data33 = data32.sheriffName;
const _errs145 = errors;
if(typeof data33 !== "string"){
let dataType39 = typeof data33;
let coerced39 = undefined;
if(dataType39 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType39 = typeof data33;
if(typeof data33 === "string"){
coerced39 = data33;
}
}
if(!(coerced39 !== undefined)){
if(dataType39 == "number" || dataType39 == "boolean"){
coerced39 = "" + data33;
}
else if(data33 === null){
coerced39 = "";
}
else {
const err43 = {instancePath:instancePath+"/sheriff/sheriffName",schemaPath:"node#/definitions/StorySummarySheriff/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
}
if(coerced39 !== undefined){
data33 = coerced39;
if(data32 !== undefined){
data32["sheriffName"] = coerced39;
}
}
}
var valid24 = _errs145 === errors;
}
else {
var valid24 = true;
}
if(valid24){
if(data32.orderId !== undefined){
let data34 = data32.orderId;
const _errs147 = errors;
if((typeof data34 !== "string") && (data34 !== null)){
let dataType40 = typeof data34;
let coerced40 = undefined;
if(dataType40 == 'object' && Array.isArray(data34) && data34.length == 1){
data34 = data34[0];
dataType40 = typeof data34;
if((typeof data34 === "string") && (data34 === null)){
coerced40 = data34;
}
}
if(!(coerced40 !== undefined)){
if(dataType40 == "number" || dataType40 == "boolean"){
coerced40 = "" + data34;
}
else if(data34 === null){
coerced40 = "";
}
else if(data34 === "" || data34 === 0 || data34 === false){
coerced40 = null;
}
else {
const err44 = {instancePath:instancePath+"/sheriff/orderId",schemaPath:"node#/definitions/StorySummarySheriff/properties/orderId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
if(coerced40 !== undefined){
data34 = coerced40;
if(data32 !== undefined){
data32["orderId"] = coerced40;
}
}
}
var valid24 = _errs147 === errors;
}
else {
var valid24 = true;
}
if(valid24){
if(data32.complaintId !== undefined){
let data35 = data32.complaintId;
const _errs150 = errors;
if((typeof data35 !== "string") && (data35 !== null)){
let dataType41 = typeof data35;
let coerced41 = undefined;
if(dataType41 == 'object' && Array.isArray(data35) && data35.length == 1){
data35 = data35[0];
dataType41 = typeof data35;
if((typeof data35 === "string") && (data35 === null)){
coerced41 = data35;
}
}
if(!(coerced41 !== undefined)){
if(dataType41 == "number" || dataType41 == "boolean"){
coerced41 = "" + data35;
}
else if(data35 === null){
coerced41 = "";
}
else if(data35 === "" || data35 === 0 || data35 === false){
coerced41 = null;
}
else {
const err45 = {instancePath:instancePath+"/sheriff/complaintId",schemaPath:"node#/definitions/StorySummarySheriff/properties/complaintId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
}
}
if(coerced41 !== undefined){
data35 = coerced41;
if(data32 !== undefined){
data32["complaintId"] = coerced41;
}
}
}
var valid24 = _errs150 === errors;
}
else {
var valid24 = true;
}
}
}
}
}
}
else {
const err46 = {instancePath:instancePath+"/sheriff",schemaPath:"node#/definitions/StorySummarySheriff/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
var _valid8 = _errs141 === errors;
valid22 = valid22 || _valid8;
if(!valid22){
const _errs155 = errors;
if(data32 !== null){
let dataType42 = typeof data32;
let coerced42 = undefined;
if(dataType42 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType42 = typeof data32;
if(data32 === null){
coerced42 = data32;
}
}
if(!(coerced42 !== undefined)){
if(data32 === "" || data32 === 0 || data32 === false){
coerced42 = null;
}
else {
const err47 = {instancePath:instancePath+"/sheriff",schemaPath:"#/properties/sheriff/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
}
if(coerced42 !== undefined){
data32 = coerced42;
if(data !== undefined){
data["sheriff"] = coerced42;
}
}
}
var _valid8 = _errs155 === errors;
valid22 = valid22 || _valid8;
}
if(!valid22){
const err48 = {instancePath:instancePath+"/sheriff",schemaPath:"#/properties/sheriff/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err48];
}
else {
vErrors.push(err48);
}
errors++;
validate172.errors = vErrors;
return false;
}
else {
errors = _errs140;
if(vErrors !== null){
if(_errs140){
vErrors.length = _errs140;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs139 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.description !== undefined){
let data36 = data.description;
const _errs157 = errors;
if((typeof data36 !== "string") && (data36 !== null)){
let dataType43 = typeof data36;
let coerced43 = undefined;
if(dataType43 == 'object' && Array.isArray(data36) && data36.length == 1){
data36 = data36[0];
dataType43 = typeof data36;
if((typeof data36 === "string") && (data36 === null)){
coerced43 = data36;
}
}
if(!(coerced43 !== undefined)){
if(dataType43 == "number" || dataType43 == "boolean"){
coerced43 = "" + data36;
}
else if(data36 === null){
coerced43 = "";
}
else if(data36 === "" || data36 === 0 || data36 === false){
coerced43 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced43 !== undefined){
data36 = coerced43;
if(data !== undefined){
data["description"] = coerced43;
}
}
}
var valid0 = _errs157 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clicks !== undefined){
let data37 = data.clicks;
const _errs160 = errors;
if((!(Array.isArray(data37))) && (data37 !== null)){
let dataType44 = typeof data37;
let coerced44 = undefined;
if(dataType44 == 'object' && Array.isArray(data37) && data37.length == 1){
data37 = data37[0];
dataType44 = typeof data37;
if((Array.isArray(data37)) && (data37 === null)){
coerced44 = data37;
}
}
if(!(coerced44 !== undefined)){
if(dataType44 === "string" || dataType44 === "number"
              || dataType44 === "boolean" || data37 === null){
coerced44 = [data37];
}
else if(data37 === "" || data37 === 0 || data37 === false){
coerced44 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/clicks",schemaPath:"#/properties/clicks/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced44 !== undefined){
data37 = coerced44;
if(data !== undefined){
data["clicks"] = coerced44;
}
}
}
if(errors === _errs160){
if(Array.isArray(data37)){
var valid25 = true;
const len3 = data37.length;
for(let i3=0; i3<len3; i3++){
let data38 = data37[i3];
const _errs163 = errors;
const _errs164 = errors;
if(errors === _errs164){
if(data38 && typeof data38 == "object" && !Array.isArray(data38)){
let missing2;
if(((data38.href === undefined) && (missing2 = "href")) || ((data38.clicks === undefined) && (missing2 = "clicks"))){
validate172.errors = [{instancePath:instancePath+"/clicks/" + i3,schemaPath:"node#/definitions/StorySummaryPageClicks/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];
return false;
}
else {
const _errs166 = errors;
for(const key7 in data38){
if(!(((key7 === "heading") || (key7 === "href")) || (key7 === "clicks"))){
delete data38[key7];
}
}
if(_errs166 === errors){
if(data38.heading !== undefined){
let data39 = data38.heading;
const _errs167 = errors;
if((typeof data39 !== "string") && (data39 !== null)){
let dataType45 = typeof data39;
let coerced45 = undefined;
if(dataType45 == 'object' && Array.isArray(data39) && data39.length == 1){
data39 = data39[0];
dataType45 = typeof data39;
if((typeof data39 === "string") && (data39 === null)){
coerced45 = data39;
}
}
if(!(coerced45 !== undefined)){
if(dataType45 == "number" || dataType45 == "boolean"){
coerced45 = "" + data39;
}
else if(data39 === null){
coerced45 = "";
}
else if(data39 === "" || data39 === 0 || data39 === false){
coerced45 = null;
}
else {
validate172.errors = [{instancePath:instancePath+"/clicks/" + i3+"/heading",schemaPath:"node#/definitions/StorySummaryPageClicks/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced45 !== undefined){
data39 = coerced45;
if(data38 !== undefined){
data38["heading"] = coerced45;
}
}
}
var valid27 = _errs167 === errors;
}
else {
var valid27 = true;
}
if(valid27){
if(data38.href !== undefined){
let data40 = data38.href;
const _errs170 = errors;
if(typeof data40 !== "string"){
let dataType46 = typeof data40;
let coerced46 = undefined;
if(dataType46 == 'object' && Array.isArray(data40) && data40.length == 1){
data40 = data40[0];
dataType46 = typeof data40;
if(typeof data40 === "string"){
coerced46 = data40;
}
}
if(!(coerced46 !== undefined)){
if(dataType46 == "number" || dataType46 == "boolean"){
coerced46 = "" + data40;
}
else if(data40 === null){
coerced46 = "";
}
else {
validate172.errors = [{instancePath:instancePath+"/clicks/" + i3+"/href",schemaPath:"node#/definitions/StorySummaryPageClicks/properties/href/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced46 !== undefined){
data40 = coerced46;
if(data38 !== undefined){
data38["href"] = coerced46;
}
}
}
var valid27 = _errs170 === errors;
}
else {
var valid27 = true;
}
if(valid27){
if(data38.clicks !== undefined){
let data41 = data38.clicks;
const _errs172 = errors;
if(!(((typeof data41 == "number") && (!(data41 % 1) && !isNaN(data41))) && (isFinite(data41)))){
let dataType47 = typeof data41;
let coerced47 = undefined;
if(dataType47 == 'object' && Array.isArray(data41) && data41.length == 1){
data41 = data41[0];
dataType47 = typeof data41;
if(((typeof data41 == "number") && (!(data41 % 1) && !isNaN(data41))) && (isFinite(data41))){
coerced47 = data41;
}
}
if(!(coerced47 !== undefined)){
if(dataType47 === "boolean" || data41 === null
              || (dataType47 === "string" && data41 && data41 == +data41 && !(data41 % 1))){
coerced47 = +data41;
}
else {
validate172.errors = [{instancePath:instancePath+"/clicks/" + i3+"/clicks",schemaPath:"node#/definitions/StorySummaryPageClicks/properties/clicks/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced47 !== undefined){
data41 = coerced47;
if(data38 !== undefined){
data38["clicks"] = coerced47;
}
}
}
var valid27 = _errs172 === errors;
}
else {
var valid27 = true;
}
}
}
}
}
}
else {
validate172.errors = [{instancePath:instancePath+"/clicks/" + i3,schemaPath:"node#/definitions/StorySummaryPageClicks/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid25 = _errs163 === errors;
if(!valid25){
break;
}
}
}
}
var valid0 = _errs160 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate172.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate172.errors = vErrors;
return errors === 0;
}

export const CommentInfo = validate178;
const schema204 = {"type":"object","properties":{"id":{"type":"string"},"ownerName":{"type":"string"},"ownerFullName":{"type":"string","nullable":true},"ownerGender":{"type":"string","nullable":true},"ownerAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"postingId":{"type":"string"},"postingRevisionId":{"type":"string"},"revisionId":{"type":"string"},"totalRevisions":{"type":"integer"},"bodyPreview":{"type":"string","nullable":true},"bodySrc":{"type":"string","nullable":true},"bodySrcHash":{"type":"string"},"bodySrcFormat":{"type":"string","nullable":true},"body":{"type":"string"},"bodyFormat":{"type":"string","nullable":true},"media":{"type":"array","items":{"$ref":"node#/definitions/MediaAttachment"},"nullable":true},"heading":{"type":"string"},"repliedTo":{"anyOf":[{"$ref":"node#/definitions/RepliedTo","type":"object","nullable":true},{"type":"null"}]},"moment":{"type":"integer"},"createdAt":{"type":"integer"},"editedAt":{"type":"integer","nullable":true},"deletedAt":{"type":"integer","nullable":true},"revisionCreatedAt":{"type":"integer"},"deadline":{"type":"integer","nullable":true},"digest":{"type":"string","nullable":true},"signature":{"type":"string","nullable":true},"signatureVersion":{"type":"integer","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/CommentOperations","type":"object","nullable":true},{"type":"null"}]},"reactionOperations":{"anyOf":[{"$ref":"node#/definitions/ReactionOperations","type":"object","nullable":true},{"type":"null"}]},"ownerOperations":{"anyOf":[{"$ref":"node#/definitions/CommentOperations","type":"object","nullable":true},{"type":"null"}]},"seniorOperations":{"anyOf":[{"$ref":"node#/definitions/CommentOperations","type":"object","nullable":true},{"type":"null"}]},"blockedOperations":{"type":"array","items":{"type":"string"},"nullable":true},"sheriffMarks":{"type":"array","items":{"$ref":"node#/definitions/SheriffMark"},"nullable":true},"acceptedReactions":{"anyOf":[{"$ref":"node#/definitions/AcceptedReactions","type":"object","nullable":true},{"type":"null"}]},"clientReaction":{"anyOf":[{"$ref":"node#/definitions/ClientReactionInfo","type":"object","nullable":true},{"type":"null"}]},"seniorReaction":{"anyOf":[{"$ref":"node#/definitions/ClientReactionInfo","type":"object","nullable":true},{"type":"null"}]},"reactions":{"anyOf":[{"$ref":"node#/definitions/ReactionTotalsInfo","type":"object","nullable":true},{"type":"null"}]}},"required":["id","ownerName","postingId","postingRevisionId","revisionId","totalRevisions","bodySrcHash","body","heading","moment","createdAt","revisionCreatedAt"],"additionalProperties":false};

function validate178(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((((((((data.id === undefined) && (missing0 = "id")) || ((data.ownerName === undefined) && (missing0 = "ownerName"))) || ((data.postingId === undefined) && (missing0 = "postingId"))) || ((data.postingRevisionId === undefined) && (missing0 = "postingRevisionId"))) || ((data.revisionId === undefined) && (missing0 = "revisionId"))) || ((data.totalRevisions === undefined) && (missing0 = "totalRevisions"))) || ((data.bodySrcHash === undefined) && (missing0 = "bodySrcHash"))) || ((data.body === undefined) && (missing0 = "body"))) || ((data.heading === undefined) && (missing0 = "heading"))) || ((data.moment === undefined) && (missing0 = "moment"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.revisionCreatedAt === undefined) && (missing0 = "revisionCreatedAt"))){
validate178.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema204.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerName !== undefined){
let data1 = data.ownerName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/ownerName",schemaPath:"#/properties/ownerName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["ownerName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data2 = data.ownerFullName;
const _errs6 = errors;
if((typeof data2 !== "string") && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((typeof data2 === "string") && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["ownerFullName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerGender !== undefined){
let data3 = data.ownerGender;
const _errs9 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/ownerGender",schemaPath:"#/properties/ownerGender/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["ownerGender"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerAvatar !== undefined){
let data4 = data.ownerAvatar;
const _errs12 = errors;
const _errs13 = errors;
let valid1 = false;
const _errs14 = errors;
if((!(data4 && typeof data4 == "object" && !Array.isArray(data4))) && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((data4 && typeof data4 == "object" && !Array.isArray(data4)) && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
const err0 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["ownerAvatar"] = coerced4;
}
}
}
const _errs15 = errors;
if(errors === _errs15){
if(data4 && typeof data4 == "object" && !Array.isArray(data4)){
let missing1;
if(((data4.mediaId === undefined) && (missing1 = "mediaId")) || ((data4.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs17 = errors;
for(const key1 in data4){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data4[key1];
}
}
if(_errs17 === errors){
if(data4.mediaId !== undefined){
let data5 = data4.mediaId;
const _errs18 = errors;
if(typeof data5 !== "string"){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if(typeof data5 === "string"){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else {
const err2 = {instancePath:instancePath+"/ownerAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data4 !== undefined){
data4["mediaId"] = coerced5;
}
}
}
var valid3 = _errs18 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.path !== undefined){
let data6 = data4.path;
const _errs20 = errors;
if(typeof data6 !== "string"){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(typeof data6 === "string"){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 == "number" || dataType6 == "boolean"){
coerced6 = "" + data6;
}
else if(data6 === null){
coerced6 = "";
}
else {
const err3 = {instancePath:instancePath+"/ownerAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data4 !== undefined){
data4["path"] = coerced6;
}
}
}
var valid3 = _errs20 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.width !== undefined){
let data7 = data4.width;
const _errs22 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
const err4 = {instancePath:instancePath+"/ownerAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data4 !== undefined){
data4["width"] = coerced7;
}
}
}
var valid3 = _errs22 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.height !== undefined){
let data8 = data4.height;
const _errs25 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
const err5 = {instancePath:instancePath+"/ownerAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data4 !== undefined){
data4["height"] = coerced8;
}
}
}
var valid3 = _errs25 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data4.shape !== undefined){
let data9 = data4.shape;
const _errs28 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
const err6 = {instancePath:instancePath+"/ownerAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data4 !== undefined){
data4["shape"] = coerced9;
}
}
}
var valid3 = _errs28 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs14 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs33 = errors;
if(data4 !== null){
let dataType10 = typeof data4;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType10 = typeof data4;
if(data4 === null){
coerced10 = data4;
}
}
if(!(coerced10 !== undefined)){
if(data4 === "" || data4 === 0 || data4 === false){
coerced10 = null;
}
else {
const err8 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced10 !== undefined){
data4 = coerced10;
if(data !== undefined){
data["ownerAvatar"] = coerced10;
}
}
}
var _valid0 = _errs33 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs13;
if(vErrors !== null){
if(_errs13){
vErrors.length = _errs13;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data10 = data.postingId;
const _errs35 = errors;
if(typeof data10 !== "string"){
let dataType11 = typeof data10;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType11 = typeof data10;
if(typeof data10 === "string"){
coerced11 = data10;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data10;
}
else if(data10 === null){
coerced11 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data10 = coerced11;
if(data !== undefined){
data["postingId"] = coerced11;
}
}
}
var valid0 = _errs35 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingRevisionId !== undefined){
let data11 = data.postingRevisionId;
const _errs37 = errors;
if(typeof data11 !== "string"){
let dataType12 = typeof data11;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType12 = typeof data11;
if(typeof data11 === "string"){
coerced12 = data11;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data11;
}
else if(data11 === null){
coerced12 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/postingRevisionId",schemaPath:"#/properties/postingRevisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced12 !== undefined){
data11 = coerced12;
if(data !== undefined){
data["postingRevisionId"] = coerced12;
}
}
}
var valid0 = _errs37 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionId !== undefined){
let data12 = data.revisionId;
const _errs39 = errors;
if(typeof data12 !== "string"){
let dataType13 = typeof data12;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType13 = typeof data12;
if(typeof data12 === "string"){
coerced13 = data12;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data12;
}
else if(data12 === null){
coerced13 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/revisionId",schemaPath:"#/properties/revisionId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced13 !== undefined){
data12 = coerced13;
if(data !== undefined){
data["revisionId"] = coerced13;
}
}
}
var valid0 = _errs39 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalRevisions !== undefined){
let data13 = data.totalRevisions;
const _errs41 = errors;
if(!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))){
let dataType14 = typeof data13;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType14 = typeof data13;
if(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13))){
coerced14 = data13;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "boolean" || data13 === null
              || (dataType14 === "string" && data13 && data13 == +data13 && !(data13 % 1))){
coerced14 = +data13;
}
else {
validate178.errors = [{instancePath:instancePath+"/totalRevisions",schemaPath:"#/properties/totalRevisions/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced14 !== undefined){
data13 = coerced14;
if(data !== undefined){
data["totalRevisions"] = coerced14;
}
}
}
var valid0 = _errs41 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyPreview !== undefined){
let data14 = data.bodyPreview;
const _errs43 = errors;
if((typeof data14 !== "string") && (data14 !== null)){
let dataType15 = typeof data14;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType15 = typeof data14;
if((typeof data14 === "string") && (data14 === null)){
coerced15 = data14;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data14;
}
else if(data14 === null){
coerced15 = "";
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced15 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/bodyPreview",schemaPath:"#/properties/bodyPreview/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced15 !== undefined){
data14 = coerced15;
if(data !== undefined){
data["bodyPreview"] = coerced15;
}
}
}
var valid0 = _errs43 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrc !== undefined){
let data15 = data.bodySrc;
const _errs46 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType16 = typeof data15;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType16 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced16 = data15;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 == "number" || dataType16 == "boolean"){
coerced16 = "" + data15;
}
else if(data15 === null){
coerced16 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced16 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/bodySrc",schemaPath:"#/properties/bodySrc/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced16 !== undefined){
data15 = coerced16;
if(data !== undefined){
data["bodySrc"] = coerced16;
}
}
}
var valid0 = _errs46 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcHash !== undefined){
let data16 = data.bodySrcHash;
const _errs49 = errors;
if(typeof data16 !== "string"){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType17 = typeof data16;
if(typeof data16 === "string"){
coerced17 = data16;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data16;
}
else if(data16 === null){
coerced17 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/bodySrcHash",schemaPath:"#/properties/bodySrcHash/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["bodySrcHash"] = coerced17;
}
}
}
var valid0 = _errs49 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcFormat !== undefined){
let data17 = data.bodySrcFormat;
const _errs51 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data17;
}
else if(data17 === null){
coerced18 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced18 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/bodySrcFormat",schemaPath:"#/properties/bodySrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data !== undefined){
data["bodySrcFormat"] = coerced18;
}
}
}
var valid0 = _errs51 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.body !== undefined){
let data18 = data.body;
const _errs54 = errors;
if(typeof data18 !== "string"){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if(typeof data18 === "string"){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data18;
}
else if(data18 === null){
coerced19 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data !== undefined){
data["body"] = coerced19;
}
}
}
var valid0 = _errs54 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyFormat !== undefined){
let data19 = data.bodyFormat;
const _errs56 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(dataType20 == "number" || dataType20 == "boolean"){
coerced20 = "" + data19;
}
else if(data19 === null){
coerced20 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced20 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/bodyFormat",schemaPath:"#/properties/bodyFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data !== undefined){
data["bodyFormat"] = coerced20;
}
}
}
var valid0 = _errs56 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.media !== undefined){
let data20 = data.media;
const _errs59 = errors;
if((!(Array.isArray(data20))) && (data20 !== null)){
let dataType21 = typeof data20;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType21 = typeof data20;
if((Array.isArray(data20)) && (data20 === null)){
coerced21 = data20;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 === "string" || dataType21 === "number"
              || dataType21 === "boolean" || data20 === null){
coerced21 = [data20];
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced21 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/media",schemaPath:"#/properties/media/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced21 !== undefined){
data20 = coerced21;
if(data !== undefined){
data["media"] = coerced21;
}
}
}
if(errors === _errs59){
if(Array.isArray(data20)){
var valid4 = true;
const len0 = data20.length;
for(let i0=0; i0<len0; i0++){
const _errs62 = errors;
if(!(validate152(data20[i0], {instancePath:instancePath+"/media/" + i0,parentData:data20,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate152.errors : vErrors.concat(validate152.errors);
errors = vErrors.length;
}
var valid4 = _errs62 === errors;
if(!valid4){
break;
}
}
}
}
var valid0 = _errs59 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data22 = data.heading;
const _errs63 = errors;
if(typeof data22 !== "string"){
let dataType22 = typeof data22;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType22 = typeof data22;
if(typeof data22 === "string"){
coerced22 = data22;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data22;
}
else if(data22 === null){
coerced22 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced22 !== undefined){
data22 = coerced22;
if(data !== undefined){
data["heading"] = coerced22;
}
}
}
var valid0 = _errs63 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.repliedTo !== undefined){
let data23 = data.repliedTo;
const _errs65 = errors;
const _errs66 = errors;
let valid5 = false;
const _errs67 = errors;
if((!(data23 && typeof data23 == "object" && !Array.isArray(data23))) && (data23 !== null)){
let dataType23 = typeof data23;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType23 = typeof data23;
if((data23 && typeof data23 == "object" && !Array.isArray(data23)) && (data23 === null)){
coerced23 = data23;
}
}
if(!(coerced23 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced23 = null;
}
else {
const err10 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced23 !== undefined){
data23 = coerced23;
if(data !== undefined){
data["repliedTo"] = coerced23;
}
}
}
if(!(validate97(data23, {instancePath:instancePath+"/repliedTo",parentData:data,parentDataProperty:"repliedTo",rootData}))){
vErrors = vErrors === null ? validate97.errors : vErrors.concat(validate97.errors);
errors = vErrors.length;
}
var _valid1 = _errs67 === errors;
valid5 = valid5 || _valid1;
if(!valid5){
const _errs70 = errors;
if(data23 !== null){
let dataType24 = typeof data23;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType24 = typeof data23;
if(data23 === null){
coerced24 = data23;
}
}
if(!(coerced24 !== undefined)){
if(data23 === "" || data23 === 0 || data23 === false){
coerced24 = null;
}
else {
const err11 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced24 !== undefined){
data23 = coerced24;
if(data !== undefined){
data["repliedTo"] = coerced24;
}
}
}
var _valid1 = _errs70 === errors;
valid5 = valid5 || _valid1;
}
if(!valid5){
const err12 = {instancePath:instancePath+"/repliedTo",schemaPath:"#/properties/repliedTo/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs66;
if(vErrors !== null){
if(_errs66){
vErrors.length = _errs66;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs65 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data24 = data.moment;
const _errs72 = errors;
if(!(((typeof data24 == "number") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24)))){
let dataType25 = typeof data24;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType25 = typeof data24;
if(((typeof data24 == "number") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24))){
coerced25 = data24;
}
}
if(!(coerced25 !== undefined)){
if(dataType25 === "boolean" || data24 === null
              || (dataType25 === "string" && data24 && data24 == +data24 && !(data24 % 1))){
coerced25 = +data24;
}
else {
validate178.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced25 !== undefined){
data24 = coerced25;
if(data !== undefined){
data["moment"] = coerced25;
}
}
}
var valid0 = _errs72 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data25 = data.createdAt;
const _errs74 = errors;
if(!(((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25)))){
let dataType26 = typeof data25;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType26 = typeof data25;
if(((typeof data25 == "number") && (!(data25 % 1) && !isNaN(data25))) && (isFinite(data25))){
coerced26 = data25;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 === "boolean" || data25 === null
              || (dataType26 === "string" && data25 && data25 == +data25 && !(data25 % 1))){
coerced26 = +data25;
}
else {
validate178.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced26 !== undefined){
data25 = coerced26;
if(data !== undefined){
data["createdAt"] = coerced26;
}
}
}
var valid0 = _errs74 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.editedAt !== undefined){
let data26 = data.editedAt;
const _errs76 = errors;
if((!(((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26)))) && (data26 !== null)){
let dataType27 = typeof data26;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType27 = typeof data26;
if((((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26))) && (data26 === null)){
coerced27 = data26;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 === "boolean" || data26 === null
              || (dataType27 === "string" && data26 && data26 == +data26 && !(data26 % 1))){
coerced27 = +data26;
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced27 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/editedAt",schemaPath:"#/properties/editedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced27 !== undefined){
data26 = coerced27;
if(data !== undefined){
data["editedAt"] = coerced27;
}
}
}
var valid0 = _errs76 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deletedAt !== undefined){
let data27 = data.deletedAt;
const _errs79 = errors;
if((!(((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27)))) && (data27 !== null)){
let dataType28 = typeof data27;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType28 = typeof data27;
if((((typeof data27 == "number") && (!(data27 % 1) && !isNaN(data27))) && (isFinite(data27))) && (data27 === null)){
coerced28 = data27;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 === "boolean" || data27 === null
              || (dataType28 === "string" && data27 && data27 == +data27 && !(data27 % 1))){
coerced28 = +data27;
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced28 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/deletedAt",schemaPath:"#/properties/deletedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced28 !== undefined){
data27 = coerced28;
if(data !== undefined){
data["deletedAt"] = coerced28;
}
}
}
var valid0 = _errs79 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.revisionCreatedAt !== undefined){
let data28 = data.revisionCreatedAt;
const _errs82 = errors;
if(!(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28)))){
let dataType29 = typeof data28;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType29 = typeof data28;
if(((typeof data28 == "number") && (!(data28 % 1) && !isNaN(data28))) && (isFinite(data28))){
coerced29 = data28;
}
}
if(!(coerced29 !== undefined)){
if(dataType29 === "boolean" || data28 === null
              || (dataType29 === "string" && data28 && data28 == +data28 && !(data28 % 1))){
coerced29 = +data28;
}
else {
validate178.errors = [{instancePath:instancePath+"/revisionCreatedAt",schemaPath:"#/properties/revisionCreatedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced29 !== undefined){
data28 = coerced29;
if(data !== undefined){
data["revisionCreatedAt"] = coerced29;
}
}
}
var valid0 = _errs82 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data29 = data.deadline;
const _errs84 = errors;
if((!(((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29))) && (isFinite(data29)))) && (data29 !== null)){
let dataType30 = typeof data29;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType30 = typeof data29;
if((((typeof data29 == "number") && (!(data29 % 1) && !isNaN(data29))) && (isFinite(data29))) && (data29 === null)){
coerced30 = data29;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 === "boolean" || data29 === null
              || (dataType30 === "string" && data29 && data29 == +data29 && !(data29 % 1))){
coerced30 = +data29;
}
else if(data29 === "" || data29 === 0 || data29 === false){
coerced30 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced30 !== undefined){
data29 = coerced30;
if(data !== undefined){
data["deadline"] = coerced30;
}
}
}
var valid0 = _errs84 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.digest !== undefined){
let data30 = data.digest;
const _errs87 = errors;
if((typeof data30 !== "string") && (data30 !== null)){
let dataType31 = typeof data30;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType31 = typeof data30;
if((typeof data30 === "string") && (data30 === null)){
coerced31 = data30;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data30;
}
else if(data30 === null){
coerced31 = "";
}
else if(data30 === "" || data30 === 0 || data30 === false){
coerced31 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/digest",schemaPath:"#/properties/digest/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced31 !== undefined){
data30 = coerced31;
if(data !== undefined){
data["digest"] = coerced31;
}
}
}
var valid0 = _errs87 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signature !== undefined){
let data31 = data.signature;
const _errs90 = errors;
if((typeof data31 !== "string") && (data31 !== null)){
let dataType32 = typeof data31;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType32 = typeof data31;
if((typeof data31 === "string") && (data31 === null)){
coerced32 = data31;
}
}
if(!(coerced32 !== undefined)){
if(dataType32 == "number" || dataType32 == "boolean"){
coerced32 = "" + data31;
}
else if(data31 === null){
coerced32 = "";
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced32 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/signature",schemaPath:"#/properties/signature/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced32 !== undefined){
data31 = coerced32;
if(data !== undefined){
data["signature"] = coerced32;
}
}
}
var valid0 = _errs90 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.signatureVersion !== undefined){
let data32 = data.signatureVersion;
const _errs93 = errors;
if((!(((typeof data32 == "number") && (!(data32 % 1) && !isNaN(data32))) && (isFinite(data32)))) && (data32 !== null)){
let dataType33 = typeof data32;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType33 = typeof data32;
if((((typeof data32 == "number") && (!(data32 % 1) && !isNaN(data32))) && (isFinite(data32))) && (data32 === null)){
coerced33 = data32;
}
}
if(!(coerced33 !== undefined)){
if(dataType33 === "boolean" || data32 === null
              || (dataType33 === "string" && data32 && data32 == +data32 && !(data32 % 1))){
coerced33 = +data32;
}
else if(data32 === "" || data32 === 0 || data32 === false){
coerced33 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/signatureVersion",schemaPath:"#/properties/signatureVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced33 !== undefined){
data32 = coerced33;
if(data !== undefined){
data["signatureVersion"] = coerced33;
}
}
}
var valid0 = _errs93 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data33 = data.operations;
const _errs96 = errors;
const _errs97 = errors;
let valid6 = false;
const _errs98 = errors;
if((!(data33 && typeof data33 == "object" && !Array.isArray(data33))) && (data33 !== null)){
let dataType34 = typeof data33;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType34 = typeof data33;
if((data33 && typeof data33 == "object" && !Array.isArray(data33)) && (data33 === null)){
coerced34 = data33;
}
}
if(!(coerced34 !== undefined)){
if(data33 === "" || data33 === 0 || data33 === false){
coerced34 = null;
}
else {
const err13 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced34 !== undefined){
data33 = coerced34;
if(data !== undefined){
data["operations"] = coerced34;
}
}
}
const _errs99 = errors;
if(errors === _errs99){
if(data33 && typeof data33 == "object" && !Array.isArray(data33)){
const _errs101 = errors;
for(const key2 in data33){
if(!(func2.call(schema12.properties, key2))){
delete data33[key2];
}
}
if(_errs101 === errors){
if(data33.view !== undefined){
let data34 = data33.view;
const _errs102 = errors;
if((typeof data34 !== "string") && (data34 !== null)){
let dataType35 = typeof data34;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data34) && data34.length == 1){
data34 = data34[0];
dataType35 = typeof data34;
if((typeof data34 === "string") && (data34 === null)){
coerced35 = data34;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data34;
}
else if(data34 === null){
coerced35 = "";
}
else if(data34 === "" || data34 === 0 || data34 === false){
coerced35 = null;
}
else {
const err14 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/CommentOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced35 !== undefined){
data34 = coerced35;
if(data33 !== undefined){
data33["view"] = coerced35;
}
}
}
var valid8 = _errs102 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.edit !== undefined){
let data35 = data33.edit;
const _errs105 = errors;
if((typeof data35 !== "string") && (data35 !== null)){
let dataType36 = typeof data35;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data35) && data35.length == 1){
data35 = data35[0];
dataType36 = typeof data35;
if((typeof data35 === "string") && (data35 === null)){
coerced36 = data35;
}
}
if(!(coerced36 !== undefined)){
if(dataType36 == "number" || dataType36 == "boolean"){
coerced36 = "" + data35;
}
else if(data35 === null){
coerced36 = "";
}
else if(data35 === "" || data35 === 0 || data35 === false){
coerced36 = null;
}
else {
const err15 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/CommentOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced36 !== undefined){
data35 = coerced36;
if(data33 !== undefined){
data33["edit"] = coerced36;
}
}
}
var valid8 = _errs105 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.delete !== undefined){
let data36 = data33.delete;
const _errs108 = errors;
if((typeof data36 !== "string") && (data36 !== null)){
let dataType37 = typeof data36;
let coerced37 = undefined;
if(dataType37 == 'object' && Array.isArray(data36) && data36.length == 1){
data36 = data36[0];
dataType37 = typeof data36;
if((typeof data36 === "string") && (data36 === null)){
coerced37 = data36;
}
}
if(!(coerced37 !== undefined)){
if(dataType37 == "number" || dataType37 == "boolean"){
coerced37 = "" + data36;
}
else if(data36 === null){
coerced37 = "";
}
else if(data36 === "" || data36 === 0 || data36 === false){
coerced37 = null;
}
else {
const err16 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/CommentOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced37 !== undefined){
data36 = coerced37;
if(data33 !== undefined){
data33["delete"] = coerced37;
}
}
}
var valid8 = _errs108 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewReactions !== undefined){
let data37 = data33.viewReactions;
const _errs111 = errors;
if((typeof data37 !== "string") && (data37 !== null)){
let dataType38 = typeof data37;
let coerced38 = undefined;
if(dataType38 == 'object' && Array.isArray(data37) && data37.length == 1){
data37 = data37[0];
dataType38 = typeof data37;
if((typeof data37 === "string") && (data37 === null)){
coerced38 = data37;
}
}
if(!(coerced38 !== undefined)){
if(dataType38 == "number" || dataType38 == "boolean"){
coerced38 = "" + data37;
}
else if(data37 === null){
coerced38 = "";
}
else if(data37 === "" || data37 === 0 || data37 === false){
coerced38 = null;
}
else {
const err17 = {instancePath:instancePath+"/operations/viewReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced38 !== undefined){
data37 = coerced38;
if(data33 !== undefined){
data33["viewReactions"] = coerced38;
}
}
}
var valid8 = _errs111 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewNegativeReactions !== undefined){
let data38 = data33.viewNegativeReactions;
const _errs114 = errors;
if((typeof data38 !== "string") && (data38 !== null)){
let dataType39 = typeof data38;
let coerced39 = undefined;
if(dataType39 == 'object' && Array.isArray(data38) && data38.length == 1){
data38 = data38[0];
dataType39 = typeof data38;
if((typeof data38 === "string") && (data38 === null)){
coerced39 = data38;
}
}
if(!(coerced39 !== undefined)){
if(dataType39 == "number" || dataType39 == "boolean"){
coerced39 = "" + data38;
}
else if(data38 === null){
coerced39 = "";
}
else if(data38 === "" || data38 === 0 || data38 === false){
coerced39 = null;
}
else {
const err18 = {instancePath:instancePath+"/operations/viewNegativeReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced39 !== undefined){
data38 = coerced39;
if(data33 !== undefined){
data33["viewNegativeReactions"] = coerced39;
}
}
}
var valid8 = _errs114 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewReactionTotals !== undefined){
let data39 = data33.viewReactionTotals;
const _errs117 = errors;
if((typeof data39 !== "string") && (data39 !== null)){
let dataType40 = typeof data39;
let coerced40 = undefined;
if(dataType40 == 'object' && Array.isArray(data39) && data39.length == 1){
data39 = data39[0];
dataType40 = typeof data39;
if((typeof data39 === "string") && (data39 === null)){
coerced40 = data39;
}
}
if(!(coerced40 !== undefined)){
if(dataType40 == "number" || dataType40 == "boolean"){
coerced40 = "" + data39;
}
else if(data39 === null){
coerced40 = "";
}
else if(data39 === "" || data39 === 0 || data39 === false){
coerced40 = null;
}
else {
const err19 = {instancePath:instancePath+"/operations/viewReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced40 !== undefined){
data39 = coerced40;
if(data33 !== undefined){
data33["viewReactionTotals"] = coerced40;
}
}
}
var valid8 = _errs117 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewNegativeReactionTotals !== undefined){
let data40 = data33.viewNegativeReactionTotals;
const _errs120 = errors;
if((typeof data40 !== "string") && (data40 !== null)){
let dataType41 = typeof data40;
let coerced41 = undefined;
if(dataType41 == 'object' && Array.isArray(data40) && data40.length == 1){
data40 = data40[0];
dataType41 = typeof data40;
if((typeof data40 === "string") && (data40 === null)){
coerced41 = data40;
}
}
if(!(coerced41 !== undefined)){
if(dataType41 == "number" || dataType41 == "boolean"){
coerced41 = "" + data40;
}
else if(data40 === null){
coerced41 = "";
}
else if(data40 === "" || data40 === 0 || data40 === false){
coerced41 = null;
}
else {
const err20 = {instancePath:instancePath+"/operations/viewNegativeReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced41 !== undefined){
data40 = coerced41;
if(data33 !== undefined){
data33["viewNegativeReactionTotals"] = coerced41;
}
}
}
var valid8 = _errs120 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewReactionRatios !== undefined){
let data41 = data33.viewReactionRatios;
const _errs123 = errors;
if((typeof data41 !== "string") && (data41 !== null)){
let dataType42 = typeof data41;
let coerced42 = undefined;
if(dataType42 == 'object' && Array.isArray(data41) && data41.length == 1){
data41 = data41[0];
dataType42 = typeof data41;
if((typeof data41 === "string") && (data41 === null)){
coerced42 = data41;
}
}
if(!(coerced42 !== undefined)){
if(dataType42 == "number" || dataType42 == "boolean"){
coerced42 = "" + data41;
}
else if(data41 === null){
coerced42 = "";
}
else if(data41 === "" || data41 === 0 || data41 === false){
coerced42 = null;
}
else {
const err21 = {instancePath:instancePath+"/operations/viewReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced42 !== undefined){
data41 = coerced42;
if(data33 !== undefined){
data33["viewReactionRatios"] = coerced42;
}
}
}
var valid8 = _errs123 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.viewNegativeReactionRatios !== undefined){
let data42 = data33.viewNegativeReactionRatios;
const _errs126 = errors;
if((typeof data42 !== "string") && (data42 !== null)){
let dataType43 = typeof data42;
let coerced43 = undefined;
if(dataType43 == 'object' && Array.isArray(data42) && data42.length == 1){
data42 = data42[0];
dataType43 = typeof data42;
if((typeof data42 === "string") && (data42 === null)){
coerced43 = data42;
}
}
if(!(coerced43 !== undefined)){
if(dataType43 == "number" || dataType43 == "boolean"){
coerced43 = "" + data42;
}
else if(data42 === null){
coerced43 = "";
}
else if(data42 === "" || data42 === 0 || data42 === false){
coerced43 = null;
}
else {
const err22 = {instancePath:instancePath+"/operations/viewNegativeReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
if(coerced43 !== undefined){
data42 = coerced43;
if(data33 !== undefined){
data33["viewNegativeReactionRatios"] = coerced43;
}
}
}
var valid8 = _errs126 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.addReaction !== undefined){
let data43 = data33.addReaction;
const _errs129 = errors;
if((typeof data43 !== "string") && (data43 !== null)){
let dataType44 = typeof data43;
let coerced44 = undefined;
if(dataType44 == 'object' && Array.isArray(data43) && data43.length == 1){
data43 = data43[0];
dataType44 = typeof data43;
if((typeof data43 === "string") && (data43 === null)){
coerced44 = data43;
}
}
if(!(coerced44 !== undefined)){
if(dataType44 == "number" || dataType44 == "boolean"){
coerced44 = "" + data43;
}
else if(data43 === null){
coerced44 = "";
}
else if(data43 === "" || data43 === 0 || data43 === false){
coerced44 = null;
}
else {
const err23 = {instancePath:instancePath+"/operations/addReaction",schemaPath:"node#/definitions/CommentOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced44 !== undefined){
data43 = coerced44;
if(data33 !== undefined){
data33["addReaction"] = coerced44;
}
}
}
var valid8 = _errs129 === errors;
}
else {
var valid8 = true;
}
if(valid8){
if(data33.addNegativeReaction !== undefined){
let data44 = data33.addNegativeReaction;
const _errs132 = errors;
if((typeof data44 !== "string") && (data44 !== null)){
let dataType45 = typeof data44;
let coerced45 = undefined;
if(dataType45 == 'object' && Array.isArray(data44) && data44.length == 1){
data44 = data44[0];
dataType45 = typeof data44;
if((typeof data44 === "string") && (data44 === null)){
coerced45 = data44;
}
}
if(!(coerced45 !== undefined)){
if(dataType45 == "number" || dataType45 == "boolean"){
coerced45 = "" + data44;
}
else if(data44 === null){
coerced45 = "";
}
else if(data44 === "" || data44 === 0 || data44 === false){
coerced45 = null;
}
else {
const err24 = {instancePath:instancePath+"/operations/addNegativeReaction",schemaPath:"node#/definitions/CommentOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced45 !== undefined){
data44 = coerced45;
if(data33 !== undefined){
data33["addNegativeReaction"] = coerced45;
}
}
}
var valid8 = _errs132 === errors;
}
else {
var valid8 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err25 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/CommentOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
var _valid2 = _errs98 === errors;
valid6 = valid6 || _valid2;
if(!valid6){
const _errs137 = errors;
if(data33 !== null){
let dataType46 = typeof data33;
let coerced46 = undefined;
if(dataType46 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType46 = typeof data33;
if(data33 === null){
coerced46 = data33;
}
}
if(!(coerced46 !== undefined)){
if(data33 === "" || data33 === 0 || data33 === false){
coerced46 = null;
}
else {
const err26 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced46 !== undefined){
data33 = coerced46;
if(data !== undefined){
data["operations"] = coerced46;
}
}
}
var _valid2 = _errs137 === errors;
valid6 = valid6 || _valid2;
}
if(!valid6){
const err27 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs97;
if(vErrors !== null){
if(_errs97){
vErrors.length = _errs97;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs96 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactionOperations !== undefined){
let data45 = data.reactionOperations;
const _errs139 = errors;
const _errs140 = errors;
let valid9 = false;
const _errs141 = errors;
if((!(data45 && typeof data45 == "object" && !Array.isArray(data45))) && (data45 !== null)){
let dataType47 = typeof data45;
let coerced47 = undefined;
if(dataType47 == 'object' && Array.isArray(data45) && data45.length == 1){
data45 = data45[0];
dataType47 = typeof data45;
if((data45 && typeof data45 == "object" && !Array.isArray(data45)) && (data45 === null)){
coerced47 = data45;
}
}
if(!(coerced47 !== undefined)){
if(data45 === "" || data45 === 0 || data45 === false){
coerced47 = null;
}
else {
const err28 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced47 !== undefined){
data45 = coerced47;
if(data !== undefined){
data["reactionOperations"] = coerced47;
}
}
}
const _errs142 = errors;
if(errors === _errs142){
if(data45 && typeof data45 == "object" && !Array.isArray(data45)){
const _errs144 = errors;
for(const key3 in data45){
if(!((key3 === "view") || (key3 === "delete"))){
delete data45[key3];
}
}
if(_errs144 === errors){
if(data45.view !== undefined){
let data46 = data45.view;
const _errs145 = errors;
if((typeof data46 !== "string") && (data46 !== null)){
let dataType48 = typeof data46;
let coerced48 = undefined;
if(dataType48 == 'object' && Array.isArray(data46) && data46.length == 1){
data46 = data46[0];
dataType48 = typeof data46;
if((typeof data46 === "string") && (data46 === null)){
coerced48 = data46;
}
}
if(!(coerced48 !== undefined)){
if(dataType48 == "number" || dataType48 == "boolean"){
coerced48 = "" + data46;
}
else if(data46 === null){
coerced48 = "";
}
else if(data46 === "" || data46 === 0 || data46 === false){
coerced48 = null;
}
else {
const err29 = {instancePath:instancePath+"/reactionOperations/view",schemaPath:"node#/definitions/ReactionOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(coerced48 !== undefined){
data46 = coerced48;
if(data45 !== undefined){
data45["view"] = coerced48;
}
}
}
var valid11 = _errs145 === errors;
}
else {
var valid11 = true;
}
if(valid11){
if(data45.delete !== undefined){
let data47 = data45.delete;
const _errs148 = errors;
if((typeof data47 !== "string") && (data47 !== null)){
let dataType49 = typeof data47;
let coerced49 = undefined;
if(dataType49 == 'object' && Array.isArray(data47) && data47.length == 1){
data47 = data47[0];
dataType49 = typeof data47;
if((typeof data47 === "string") && (data47 === null)){
coerced49 = data47;
}
}
if(!(coerced49 !== undefined)){
if(dataType49 == "number" || dataType49 == "boolean"){
coerced49 = "" + data47;
}
else if(data47 === null){
coerced49 = "";
}
else if(data47 === "" || data47 === 0 || data47 === false){
coerced49 = null;
}
else {
const err30 = {instancePath:instancePath+"/reactionOperations/delete",schemaPath:"node#/definitions/ReactionOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
if(coerced49 !== undefined){
data47 = coerced49;
if(data45 !== undefined){
data45["delete"] = coerced49;
}
}
}
var valid11 = _errs148 === errors;
}
else {
var valid11 = true;
}
}
}
}
else {
const err31 = {instancePath:instancePath+"/reactionOperations",schemaPath:"node#/definitions/ReactionOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
var _valid3 = _errs141 === errors;
valid9 = valid9 || _valid3;
if(!valid9){
const _errs153 = errors;
if(data45 !== null){
let dataType50 = typeof data45;
let coerced50 = undefined;
if(dataType50 == 'object' && Array.isArray(data45) && data45.length == 1){
data45 = data45[0];
dataType50 = typeof data45;
if(data45 === null){
coerced50 = data45;
}
}
if(!(coerced50 !== undefined)){
if(data45 === "" || data45 === 0 || data45 === false){
coerced50 = null;
}
else {
const err32 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(coerced50 !== undefined){
data45 = coerced50;
if(data !== undefined){
data["reactionOperations"] = coerced50;
}
}
}
var _valid3 = _errs153 === errors;
valid9 = valid9 || _valid3;
}
if(!valid9){
const err33 = {instancePath:instancePath+"/reactionOperations",schemaPath:"#/properties/reactionOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs140;
if(vErrors !== null){
if(_errs140){
vErrors.length = _errs140;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs139 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerOperations !== undefined){
let data48 = data.ownerOperations;
const _errs155 = errors;
const _errs156 = errors;
let valid12 = false;
const _errs157 = errors;
if((!(data48 && typeof data48 == "object" && !Array.isArray(data48))) && (data48 !== null)){
let dataType51 = typeof data48;
let coerced51 = undefined;
if(dataType51 == 'object' && Array.isArray(data48) && data48.length == 1){
data48 = data48[0];
dataType51 = typeof data48;
if((data48 && typeof data48 == "object" && !Array.isArray(data48)) && (data48 === null)){
coerced51 = data48;
}
}
if(!(coerced51 !== undefined)){
if(data48 === "" || data48 === 0 || data48 === false){
coerced51 = null;
}
else {
const err34 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
if(coerced51 !== undefined){
data48 = coerced51;
if(data !== undefined){
data["ownerOperations"] = coerced51;
}
}
}
const _errs158 = errors;
if(errors === _errs158){
if(data48 && typeof data48 == "object" && !Array.isArray(data48)){
const _errs160 = errors;
for(const key4 in data48){
if(!(func2.call(schema12.properties, key4))){
delete data48[key4];
}
}
if(_errs160 === errors){
if(data48.view !== undefined){
let data49 = data48.view;
const _errs161 = errors;
if((typeof data49 !== "string") && (data49 !== null)){
let dataType52 = typeof data49;
let coerced52 = undefined;
if(dataType52 == 'object' && Array.isArray(data49) && data49.length == 1){
data49 = data49[0];
dataType52 = typeof data49;
if((typeof data49 === "string") && (data49 === null)){
coerced52 = data49;
}
}
if(!(coerced52 !== undefined)){
if(dataType52 == "number" || dataType52 == "boolean"){
coerced52 = "" + data49;
}
else if(data49 === null){
coerced52 = "";
}
else if(data49 === "" || data49 === 0 || data49 === false){
coerced52 = null;
}
else {
const err35 = {instancePath:instancePath+"/ownerOperations/view",schemaPath:"node#/definitions/CommentOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(coerced52 !== undefined){
data49 = coerced52;
if(data48 !== undefined){
data48["view"] = coerced52;
}
}
}
var valid14 = _errs161 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.edit !== undefined){
let data50 = data48.edit;
const _errs164 = errors;
if((typeof data50 !== "string") && (data50 !== null)){
let dataType53 = typeof data50;
let coerced53 = undefined;
if(dataType53 == 'object' && Array.isArray(data50) && data50.length == 1){
data50 = data50[0];
dataType53 = typeof data50;
if((typeof data50 === "string") && (data50 === null)){
coerced53 = data50;
}
}
if(!(coerced53 !== undefined)){
if(dataType53 == "number" || dataType53 == "boolean"){
coerced53 = "" + data50;
}
else if(data50 === null){
coerced53 = "";
}
else if(data50 === "" || data50 === 0 || data50 === false){
coerced53 = null;
}
else {
const err36 = {instancePath:instancePath+"/ownerOperations/edit",schemaPath:"node#/definitions/CommentOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(coerced53 !== undefined){
data50 = coerced53;
if(data48 !== undefined){
data48["edit"] = coerced53;
}
}
}
var valid14 = _errs164 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.delete !== undefined){
let data51 = data48.delete;
const _errs167 = errors;
if((typeof data51 !== "string") && (data51 !== null)){
let dataType54 = typeof data51;
let coerced54 = undefined;
if(dataType54 == 'object' && Array.isArray(data51) && data51.length == 1){
data51 = data51[0];
dataType54 = typeof data51;
if((typeof data51 === "string") && (data51 === null)){
coerced54 = data51;
}
}
if(!(coerced54 !== undefined)){
if(dataType54 == "number" || dataType54 == "boolean"){
coerced54 = "" + data51;
}
else if(data51 === null){
coerced54 = "";
}
else if(data51 === "" || data51 === 0 || data51 === false){
coerced54 = null;
}
else {
const err37 = {instancePath:instancePath+"/ownerOperations/delete",schemaPath:"node#/definitions/CommentOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(coerced54 !== undefined){
data51 = coerced54;
if(data48 !== undefined){
data48["delete"] = coerced54;
}
}
}
var valid14 = _errs167 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewReactions !== undefined){
let data52 = data48.viewReactions;
const _errs170 = errors;
if((typeof data52 !== "string") && (data52 !== null)){
let dataType55 = typeof data52;
let coerced55 = undefined;
if(dataType55 == 'object' && Array.isArray(data52) && data52.length == 1){
data52 = data52[0];
dataType55 = typeof data52;
if((typeof data52 === "string") && (data52 === null)){
coerced55 = data52;
}
}
if(!(coerced55 !== undefined)){
if(dataType55 == "number" || dataType55 == "boolean"){
coerced55 = "" + data52;
}
else if(data52 === null){
coerced55 = "";
}
else if(data52 === "" || data52 === 0 || data52 === false){
coerced55 = null;
}
else {
const err38 = {instancePath:instancePath+"/ownerOperations/viewReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
if(coerced55 !== undefined){
data52 = coerced55;
if(data48 !== undefined){
data48["viewReactions"] = coerced55;
}
}
}
var valid14 = _errs170 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewNegativeReactions !== undefined){
let data53 = data48.viewNegativeReactions;
const _errs173 = errors;
if((typeof data53 !== "string") && (data53 !== null)){
let dataType56 = typeof data53;
let coerced56 = undefined;
if(dataType56 == 'object' && Array.isArray(data53) && data53.length == 1){
data53 = data53[0];
dataType56 = typeof data53;
if((typeof data53 === "string") && (data53 === null)){
coerced56 = data53;
}
}
if(!(coerced56 !== undefined)){
if(dataType56 == "number" || dataType56 == "boolean"){
coerced56 = "" + data53;
}
else if(data53 === null){
coerced56 = "";
}
else if(data53 === "" || data53 === 0 || data53 === false){
coerced56 = null;
}
else {
const err39 = {instancePath:instancePath+"/ownerOperations/viewNegativeReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
if(coerced56 !== undefined){
data53 = coerced56;
if(data48 !== undefined){
data48["viewNegativeReactions"] = coerced56;
}
}
}
var valid14 = _errs173 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewReactionTotals !== undefined){
let data54 = data48.viewReactionTotals;
const _errs176 = errors;
if((typeof data54 !== "string") && (data54 !== null)){
let dataType57 = typeof data54;
let coerced57 = undefined;
if(dataType57 == 'object' && Array.isArray(data54) && data54.length == 1){
data54 = data54[0];
dataType57 = typeof data54;
if((typeof data54 === "string") && (data54 === null)){
coerced57 = data54;
}
}
if(!(coerced57 !== undefined)){
if(dataType57 == "number" || dataType57 == "boolean"){
coerced57 = "" + data54;
}
else if(data54 === null){
coerced57 = "";
}
else if(data54 === "" || data54 === 0 || data54 === false){
coerced57 = null;
}
else {
const err40 = {instancePath:instancePath+"/ownerOperations/viewReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
}
}
if(coerced57 !== undefined){
data54 = coerced57;
if(data48 !== undefined){
data48["viewReactionTotals"] = coerced57;
}
}
}
var valid14 = _errs176 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewNegativeReactionTotals !== undefined){
let data55 = data48.viewNegativeReactionTotals;
const _errs179 = errors;
if((typeof data55 !== "string") && (data55 !== null)){
let dataType58 = typeof data55;
let coerced58 = undefined;
if(dataType58 == 'object' && Array.isArray(data55) && data55.length == 1){
data55 = data55[0];
dataType58 = typeof data55;
if((typeof data55 === "string") && (data55 === null)){
coerced58 = data55;
}
}
if(!(coerced58 !== undefined)){
if(dataType58 == "number" || dataType58 == "boolean"){
coerced58 = "" + data55;
}
else if(data55 === null){
coerced58 = "";
}
else if(data55 === "" || data55 === 0 || data55 === false){
coerced58 = null;
}
else {
const err41 = {instancePath:instancePath+"/ownerOperations/viewNegativeReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
}
if(coerced58 !== undefined){
data55 = coerced58;
if(data48 !== undefined){
data48["viewNegativeReactionTotals"] = coerced58;
}
}
}
var valid14 = _errs179 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewReactionRatios !== undefined){
let data56 = data48.viewReactionRatios;
const _errs182 = errors;
if((typeof data56 !== "string") && (data56 !== null)){
let dataType59 = typeof data56;
let coerced59 = undefined;
if(dataType59 == 'object' && Array.isArray(data56) && data56.length == 1){
data56 = data56[0];
dataType59 = typeof data56;
if((typeof data56 === "string") && (data56 === null)){
coerced59 = data56;
}
}
if(!(coerced59 !== undefined)){
if(dataType59 == "number" || dataType59 == "boolean"){
coerced59 = "" + data56;
}
else if(data56 === null){
coerced59 = "";
}
else if(data56 === "" || data56 === 0 || data56 === false){
coerced59 = null;
}
else {
const err42 = {instancePath:instancePath+"/ownerOperations/viewReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
}
}
if(coerced59 !== undefined){
data56 = coerced59;
if(data48 !== undefined){
data48["viewReactionRatios"] = coerced59;
}
}
}
var valid14 = _errs182 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.viewNegativeReactionRatios !== undefined){
let data57 = data48.viewNegativeReactionRatios;
const _errs185 = errors;
if((typeof data57 !== "string") && (data57 !== null)){
let dataType60 = typeof data57;
let coerced60 = undefined;
if(dataType60 == 'object' && Array.isArray(data57) && data57.length == 1){
data57 = data57[0];
dataType60 = typeof data57;
if((typeof data57 === "string") && (data57 === null)){
coerced60 = data57;
}
}
if(!(coerced60 !== undefined)){
if(dataType60 == "number" || dataType60 == "boolean"){
coerced60 = "" + data57;
}
else if(data57 === null){
coerced60 = "";
}
else if(data57 === "" || data57 === 0 || data57 === false){
coerced60 = null;
}
else {
const err43 = {instancePath:instancePath+"/ownerOperations/viewNegativeReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
}
if(coerced60 !== undefined){
data57 = coerced60;
if(data48 !== undefined){
data48["viewNegativeReactionRatios"] = coerced60;
}
}
}
var valid14 = _errs185 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.addReaction !== undefined){
let data58 = data48.addReaction;
const _errs188 = errors;
if((typeof data58 !== "string") && (data58 !== null)){
let dataType61 = typeof data58;
let coerced61 = undefined;
if(dataType61 == 'object' && Array.isArray(data58) && data58.length == 1){
data58 = data58[0];
dataType61 = typeof data58;
if((typeof data58 === "string") && (data58 === null)){
coerced61 = data58;
}
}
if(!(coerced61 !== undefined)){
if(dataType61 == "number" || dataType61 == "boolean"){
coerced61 = "" + data58;
}
else if(data58 === null){
coerced61 = "";
}
else if(data58 === "" || data58 === 0 || data58 === false){
coerced61 = null;
}
else {
const err44 = {instancePath:instancePath+"/ownerOperations/addReaction",schemaPath:"node#/definitions/CommentOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
if(coerced61 !== undefined){
data58 = coerced61;
if(data48 !== undefined){
data48["addReaction"] = coerced61;
}
}
}
var valid14 = _errs188 === errors;
}
else {
var valid14 = true;
}
if(valid14){
if(data48.addNegativeReaction !== undefined){
let data59 = data48.addNegativeReaction;
const _errs191 = errors;
if((typeof data59 !== "string") && (data59 !== null)){
let dataType62 = typeof data59;
let coerced62 = undefined;
if(dataType62 == 'object' && Array.isArray(data59) && data59.length == 1){
data59 = data59[0];
dataType62 = typeof data59;
if((typeof data59 === "string") && (data59 === null)){
coerced62 = data59;
}
}
if(!(coerced62 !== undefined)){
if(dataType62 == "number" || dataType62 == "boolean"){
coerced62 = "" + data59;
}
else if(data59 === null){
coerced62 = "";
}
else if(data59 === "" || data59 === 0 || data59 === false){
coerced62 = null;
}
else {
const err45 = {instancePath:instancePath+"/ownerOperations/addNegativeReaction",schemaPath:"node#/definitions/CommentOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
}
}
if(coerced62 !== undefined){
data59 = coerced62;
if(data48 !== undefined){
data48["addNegativeReaction"] = coerced62;
}
}
}
var valid14 = _errs191 === errors;
}
else {
var valid14 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err46 = {instancePath:instancePath+"/ownerOperations",schemaPath:"node#/definitions/CommentOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
var _valid4 = _errs157 === errors;
valid12 = valid12 || _valid4;
if(!valid12){
const _errs196 = errors;
if(data48 !== null){
let dataType63 = typeof data48;
let coerced63 = undefined;
if(dataType63 == 'object' && Array.isArray(data48) && data48.length == 1){
data48 = data48[0];
dataType63 = typeof data48;
if(data48 === null){
coerced63 = data48;
}
}
if(!(coerced63 !== undefined)){
if(data48 === "" || data48 === 0 || data48 === false){
coerced63 = null;
}
else {
const err47 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
}
if(coerced63 !== undefined){
data48 = coerced63;
if(data !== undefined){
data["ownerOperations"] = coerced63;
}
}
}
var _valid4 = _errs196 === errors;
valid12 = valid12 || _valid4;
}
if(!valid12){
const err48 = {instancePath:instancePath+"/ownerOperations",schemaPath:"#/properties/ownerOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err48];
}
else {
vErrors.push(err48);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs156;
if(vErrors !== null){
if(_errs156){
vErrors.length = _errs156;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs155 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.seniorOperations !== undefined){
let data60 = data.seniorOperations;
const _errs198 = errors;
const _errs199 = errors;
let valid15 = false;
const _errs200 = errors;
if((!(data60 && typeof data60 == "object" && !Array.isArray(data60))) && (data60 !== null)){
let dataType64 = typeof data60;
let coerced64 = undefined;
if(dataType64 == 'object' && Array.isArray(data60) && data60.length == 1){
data60 = data60[0];
dataType64 = typeof data60;
if((data60 && typeof data60 == "object" && !Array.isArray(data60)) && (data60 === null)){
coerced64 = data60;
}
}
if(!(coerced64 !== undefined)){
if(data60 === "" || data60 === 0 || data60 === false){
coerced64 = null;
}
else {
const err49 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err49];
}
else {
vErrors.push(err49);
}
errors++;
}
}
if(coerced64 !== undefined){
data60 = coerced64;
if(data !== undefined){
data["seniorOperations"] = coerced64;
}
}
}
const _errs201 = errors;
if(errors === _errs201){
if(data60 && typeof data60 == "object" && !Array.isArray(data60)){
const _errs203 = errors;
for(const key5 in data60){
if(!(func2.call(schema12.properties, key5))){
delete data60[key5];
}
}
if(_errs203 === errors){
if(data60.view !== undefined){
let data61 = data60.view;
const _errs204 = errors;
if((typeof data61 !== "string") && (data61 !== null)){
let dataType65 = typeof data61;
let coerced65 = undefined;
if(dataType65 == 'object' && Array.isArray(data61) && data61.length == 1){
data61 = data61[0];
dataType65 = typeof data61;
if((typeof data61 === "string") && (data61 === null)){
coerced65 = data61;
}
}
if(!(coerced65 !== undefined)){
if(dataType65 == "number" || dataType65 == "boolean"){
coerced65 = "" + data61;
}
else if(data61 === null){
coerced65 = "";
}
else if(data61 === "" || data61 === 0 || data61 === false){
coerced65 = null;
}
else {
const err50 = {instancePath:instancePath+"/seniorOperations/view",schemaPath:"node#/definitions/CommentOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err50];
}
else {
vErrors.push(err50);
}
errors++;
}
}
if(coerced65 !== undefined){
data61 = coerced65;
if(data60 !== undefined){
data60["view"] = coerced65;
}
}
}
var valid17 = _errs204 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.edit !== undefined){
let data62 = data60.edit;
const _errs207 = errors;
if((typeof data62 !== "string") && (data62 !== null)){
let dataType66 = typeof data62;
let coerced66 = undefined;
if(dataType66 == 'object' && Array.isArray(data62) && data62.length == 1){
data62 = data62[0];
dataType66 = typeof data62;
if((typeof data62 === "string") && (data62 === null)){
coerced66 = data62;
}
}
if(!(coerced66 !== undefined)){
if(dataType66 == "number" || dataType66 == "boolean"){
coerced66 = "" + data62;
}
else if(data62 === null){
coerced66 = "";
}
else if(data62 === "" || data62 === 0 || data62 === false){
coerced66 = null;
}
else {
const err51 = {instancePath:instancePath+"/seniorOperations/edit",schemaPath:"node#/definitions/CommentOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err51];
}
else {
vErrors.push(err51);
}
errors++;
}
}
if(coerced66 !== undefined){
data62 = coerced66;
if(data60 !== undefined){
data60["edit"] = coerced66;
}
}
}
var valid17 = _errs207 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.delete !== undefined){
let data63 = data60.delete;
const _errs210 = errors;
if((typeof data63 !== "string") && (data63 !== null)){
let dataType67 = typeof data63;
let coerced67 = undefined;
if(dataType67 == 'object' && Array.isArray(data63) && data63.length == 1){
data63 = data63[0];
dataType67 = typeof data63;
if((typeof data63 === "string") && (data63 === null)){
coerced67 = data63;
}
}
if(!(coerced67 !== undefined)){
if(dataType67 == "number" || dataType67 == "boolean"){
coerced67 = "" + data63;
}
else if(data63 === null){
coerced67 = "";
}
else if(data63 === "" || data63 === 0 || data63 === false){
coerced67 = null;
}
else {
const err52 = {instancePath:instancePath+"/seniorOperations/delete",schemaPath:"node#/definitions/CommentOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err52];
}
else {
vErrors.push(err52);
}
errors++;
}
}
if(coerced67 !== undefined){
data63 = coerced67;
if(data60 !== undefined){
data60["delete"] = coerced67;
}
}
}
var valid17 = _errs210 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewReactions !== undefined){
let data64 = data60.viewReactions;
const _errs213 = errors;
if((typeof data64 !== "string") && (data64 !== null)){
let dataType68 = typeof data64;
let coerced68 = undefined;
if(dataType68 == 'object' && Array.isArray(data64) && data64.length == 1){
data64 = data64[0];
dataType68 = typeof data64;
if((typeof data64 === "string") && (data64 === null)){
coerced68 = data64;
}
}
if(!(coerced68 !== undefined)){
if(dataType68 == "number" || dataType68 == "boolean"){
coerced68 = "" + data64;
}
else if(data64 === null){
coerced68 = "";
}
else if(data64 === "" || data64 === 0 || data64 === false){
coerced68 = null;
}
else {
const err53 = {instancePath:instancePath+"/seniorOperations/viewReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err53];
}
else {
vErrors.push(err53);
}
errors++;
}
}
if(coerced68 !== undefined){
data64 = coerced68;
if(data60 !== undefined){
data60["viewReactions"] = coerced68;
}
}
}
var valid17 = _errs213 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewNegativeReactions !== undefined){
let data65 = data60.viewNegativeReactions;
const _errs216 = errors;
if((typeof data65 !== "string") && (data65 !== null)){
let dataType69 = typeof data65;
let coerced69 = undefined;
if(dataType69 == 'object' && Array.isArray(data65) && data65.length == 1){
data65 = data65[0];
dataType69 = typeof data65;
if((typeof data65 === "string") && (data65 === null)){
coerced69 = data65;
}
}
if(!(coerced69 !== undefined)){
if(dataType69 == "number" || dataType69 == "boolean"){
coerced69 = "" + data65;
}
else if(data65 === null){
coerced69 = "";
}
else if(data65 === "" || data65 === 0 || data65 === false){
coerced69 = null;
}
else {
const err54 = {instancePath:instancePath+"/seniorOperations/viewNegativeReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err54];
}
else {
vErrors.push(err54);
}
errors++;
}
}
if(coerced69 !== undefined){
data65 = coerced69;
if(data60 !== undefined){
data60["viewNegativeReactions"] = coerced69;
}
}
}
var valid17 = _errs216 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewReactionTotals !== undefined){
let data66 = data60.viewReactionTotals;
const _errs219 = errors;
if((typeof data66 !== "string") && (data66 !== null)){
let dataType70 = typeof data66;
let coerced70 = undefined;
if(dataType70 == 'object' && Array.isArray(data66) && data66.length == 1){
data66 = data66[0];
dataType70 = typeof data66;
if((typeof data66 === "string") && (data66 === null)){
coerced70 = data66;
}
}
if(!(coerced70 !== undefined)){
if(dataType70 == "number" || dataType70 == "boolean"){
coerced70 = "" + data66;
}
else if(data66 === null){
coerced70 = "";
}
else if(data66 === "" || data66 === 0 || data66 === false){
coerced70 = null;
}
else {
const err55 = {instancePath:instancePath+"/seniorOperations/viewReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err55];
}
else {
vErrors.push(err55);
}
errors++;
}
}
if(coerced70 !== undefined){
data66 = coerced70;
if(data60 !== undefined){
data60["viewReactionTotals"] = coerced70;
}
}
}
var valid17 = _errs219 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewNegativeReactionTotals !== undefined){
let data67 = data60.viewNegativeReactionTotals;
const _errs222 = errors;
if((typeof data67 !== "string") && (data67 !== null)){
let dataType71 = typeof data67;
let coerced71 = undefined;
if(dataType71 == 'object' && Array.isArray(data67) && data67.length == 1){
data67 = data67[0];
dataType71 = typeof data67;
if((typeof data67 === "string") && (data67 === null)){
coerced71 = data67;
}
}
if(!(coerced71 !== undefined)){
if(dataType71 == "number" || dataType71 == "boolean"){
coerced71 = "" + data67;
}
else if(data67 === null){
coerced71 = "";
}
else if(data67 === "" || data67 === 0 || data67 === false){
coerced71 = null;
}
else {
const err56 = {instancePath:instancePath+"/seniorOperations/viewNegativeReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err56];
}
else {
vErrors.push(err56);
}
errors++;
}
}
if(coerced71 !== undefined){
data67 = coerced71;
if(data60 !== undefined){
data60["viewNegativeReactionTotals"] = coerced71;
}
}
}
var valid17 = _errs222 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewReactionRatios !== undefined){
let data68 = data60.viewReactionRatios;
const _errs225 = errors;
if((typeof data68 !== "string") && (data68 !== null)){
let dataType72 = typeof data68;
let coerced72 = undefined;
if(dataType72 == 'object' && Array.isArray(data68) && data68.length == 1){
data68 = data68[0];
dataType72 = typeof data68;
if((typeof data68 === "string") && (data68 === null)){
coerced72 = data68;
}
}
if(!(coerced72 !== undefined)){
if(dataType72 == "number" || dataType72 == "boolean"){
coerced72 = "" + data68;
}
else if(data68 === null){
coerced72 = "";
}
else if(data68 === "" || data68 === 0 || data68 === false){
coerced72 = null;
}
else {
const err57 = {instancePath:instancePath+"/seniorOperations/viewReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err57];
}
else {
vErrors.push(err57);
}
errors++;
}
}
if(coerced72 !== undefined){
data68 = coerced72;
if(data60 !== undefined){
data60["viewReactionRatios"] = coerced72;
}
}
}
var valid17 = _errs225 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.viewNegativeReactionRatios !== undefined){
let data69 = data60.viewNegativeReactionRatios;
const _errs228 = errors;
if((typeof data69 !== "string") && (data69 !== null)){
let dataType73 = typeof data69;
let coerced73 = undefined;
if(dataType73 == 'object' && Array.isArray(data69) && data69.length == 1){
data69 = data69[0];
dataType73 = typeof data69;
if((typeof data69 === "string") && (data69 === null)){
coerced73 = data69;
}
}
if(!(coerced73 !== undefined)){
if(dataType73 == "number" || dataType73 == "boolean"){
coerced73 = "" + data69;
}
else if(data69 === null){
coerced73 = "";
}
else if(data69 === "" || data69 === 0 || data69 === false){
coerced73 = null;
}
else {
const err58 = {instancePath:instancePath+"/seniorOperations/viewNegativeReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err58];
}
else {
vErrors.push(err58);
}
errors++;
}
}
if(coerced73 !== undefined){
data69 = coerced73;
if(data60 !== undefined){
data60["viewNegativeReactionRatios"] = coerced73;
}
}
}
var valid17 = _errs228 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.addReaction !== undefined){
let data70 = data60.addReaction;
const _errs231 = errors;
if((typeof data70 !== "string") && (data70 !== null)){
let dataType74 = typeof data70;
let coerced74 = undefined;
if(dataType74 == 'object' && Array.isArray(data70) && data70.length == 1){
data70 = data70[0];
dataType74 = typeof data70;
if((typeof data70 === "string") && (data70 === null)){
coerced74 = data70;
}
}
if(!(coerced74 !== undefined)){
if(dataType74 == "number" || dataType74 == "boolean"){
coerced74 = "" + data70;
}
else if(data70 === null){
coerced74 = "";
}
else if(data70 === "" || data70 === 0 || data70 === false){
coerced74 = null;
}
else {
const err59 = {instancePath:instancePath+"/seniorOperations/addReaction",schemaPath:"node#/definitions/CommentOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err59];
}
else {
vErrors.push(err59);
}
errors++;
}
}
if(coerced74 !== undefined){
data70 = coerced74;
if(data60 !== undefined){
data60["addReaction"] = coerced74;
}
}
}
var valid17 = _errs231 === errors;
}
else {
var valid17 = true;
}
if(valid17){
if(data60.addNegativeReaction !== undefined){
let data71 = data60.addNegativeReaction;
const _errs234 = errors;
if((typeof data71 !== "string") && (data71 !== null)){
let dataType75 = typeof data71;
let coerced75 = undefined;
if(dataType75 == 'object' && Array.isArray(data71) && data71.length == 1){
data71 = data71[0];
dataType75 = typeof data71;
if((typeof data71 === "string") && (data71 === null)){
coerced75 = data71;
}
}
if(!(coerced75 !== undefined)){
if(dataType75 == "number" || dataType75 == "boolean"){
coerced75 = "" + data71;
}
else if(data71 === null){
coerced75 = "";
}
else if(data71 === "" || data71 === 0 || data71 === false){
coerced75 = null;
}
else {
const err60 = {instancePath:instancePath+"/seniorOperations/addNegativeReaction",schemaPath:"node#/definitions/CommentOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err60];
}
else {
vErrors.push(err60);
}
errors++;
}
}
if(coerced75 !== undefined){
data71 = coerced75;
if(data60 !== undefined){
data60["addNegativeReaction"] = coerced75;
}
}
}
var valid17 = _errs234 === errors;
}
else {
var valid17 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err61 = {instancePath:instancePath+"/seniorOperations",schemaPath:"node#/definitions/CommentOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err61];
}
else {
vErrors.push(err61);
}
errors++;
}
}
var _valid5 = _errs200 === errors;
valid15 = valid15 || _valid5;
if(!valid15){
const _errs239 = errors;
if(data60 !== null){
let dataType76 = typeof data60;
let coerced76 = undefined;
if(dataType76 == 'object' && Array.isArray(data60) && data60.length == 1){
data60 = data60[0];
dataType76 = typeof data60;
if(data60 === null){
coerced76 = data60;
}
}
if(!(coerced76 !== undefined)){
if(data60 === "" || data60 === 0 || data60 === false){
coerced76 = null;
}
else {
const err62 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err62];
}
else {
vErrors.push(err62);
}
errors++;
}
}
if(coerced76 !== undefined){
data60 = coerced76;
if(data !== undefined){
data["seniorOperations"] = coerced76;
}
}
}
var _valid5 = _errs239 === errors;
valid15 = valid15 || _valid5;
}
if(!valid15){
const err63 = {instancePath:instancePath+"/seniorOperations",schemaPath:"#/properties/seniorOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err63];
}
else {
vErrors.push(err63);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs199;
if(vErrors !== null){
if(_errs199){
vErrors.length = _errs199;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs198 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.blockedOperations !== undefined){
let data72 = data.blockedOperations;
const _errs241 = errors;
if((!(Array.isArray(data72))) && (data72 !== null)){
let dataType77 = typeof data72;
let coerced77 = undefined;
if(dataType77 == 'object' && Array.isArray(data72) && data72.length == 1){
data72 = data72[0];
dataType77 = typeof data72;
if((Array.isArray(data72)) && (data72 === null)){
coerced77 = data72;
}
}
if(!(coerced77 !== undefined)){
if(dataType77 === "string" || dataType77 === "number"
              || dataType77 === "boolean" || data72 === null){
coerced77 = [data72];
}
else if(data72 === "" || data72 === 0 || data72 === false){
coerced77 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/blockedOperations",schemaPath:"#/properties/blockedOperations/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced77 !== undefined){
data72 = coerced77;
if(data !== undefined){
data["blockedOperations"] = coerced77;
}
}
}
if(errors === _errs241){
if(Array.isArray(data72)){
var valid18 = true;
const len1 = data72.length;
for(let i1=0; i1<len1; i1++){
let data73 = data72[i1];
const _errs244 = errors;
if(typeof data73 !== "string"){
let dataType78 = typeof data73;
let coerced78 = undefined;
if(dataType78 == 'object' && Array.isArray(data73) && data73.length == 1){
data73 = data73[0];
dataType78 = typeof data73;
if(typeof data73 === "string"){
coerced78 = data73;
}
}
if(!(coerced78 !== undefined)){
if(dataType78 == "number" || dataType78 == "boolean"){
coerced78 = "" + data73;
}
else if(data73 === null){
coerced78 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/blockedOperations/" + i1,schemaPath:"#/properties/blockedOperations/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced78 !== undefined){
data73 = coerced78;
if(data72 !== undefined){
data72[i1] = coerced78;
}
}
}
var valid18 = _errs244 === errors;
if(!valid18){
break;
}
}
}
}
var valid0 = _errs241 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.sheriffMarks !== undefined){
let data74 = data.sheriffMarks;
const _errs246 = errors;
if((!(Array.isArray(data74))) && (data74 !== null)){
let dataType79 = typeof data74;
let coerced79 = undefined;
if(dataType79 == 'object' && Array.isArray(data74) && data74.length == 1){
data74 = data74[0];
dataType79 = typeof data74;
if((Array.isArray(data74)) && (data74 === null)){
coerced79 = data74;
}
}
if(!(coerced79 !== undefined)){
if(dataType79 === "string" || dataType79 === "number"
              || dataType79 === "boolean" || data74 === null){
coerced79 = [data74];
}
else if(data74 === "" || data74 === 0 || data74 === false){
coerced79 = null;
}
else {
validate178.errors = [{instancePath:instancePath+"/sheriffMarks",schemaPath:"#/properties/sheriffMarks/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced79 !== undefined){
data74 = coerced79;
if(data !== undefined){
data["sheriffMarks"] = coerced79;
}
}
}
if(errors === _errs246){
if(Array.isArray(data74)){
var valid19 = true;
const len2 = data74.length;
for(let i2=0; i2<len2; i2++){
let data75 = data74[i2];
const _errs249 = errors;
const _errs250 = errors;
if(errors === _errs250){
if(data75 && typeof data75 == "object" && !Array.isArray(data75)){
let missing2;
if((data75.sheriffName === undefined) && (missing2 = "sheriffName")){
validate178.errors = [{instancePath:instancePath+"/sheriffMarks/" + i2,schemaPath:"node#/definitions/SheriffMark/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];
return false;
}
else {
const _errs252 = errors;
for(const key6 in data75){
if(!(key6 === "sheriffName")){
delete data75[key6];
}
}
if(_errs252 === errors){
if(data75.sheriffName !== undefined){
let data76 = data75.sheriffName;
if(typeof data76 !== "string"){
let dataType80 = typeof data76;
let coerced80 = undefined;
if(dataType80 == 'object' && Array.isArray(data76) && data76.length == 1){
data76 = data76[0];
dataType80 = typeof data76;
if(typeof data76 === "string"){
coerced80 = data76;
}
}
if(!(coerced80 !== undefined)){
if(dataType80 == "number" || dataType80 == "boolean"){
coerced80 = "" + data76;
}
else if(data76 === null){
coerced80 = "";
}
else {
validate178.errors = [{instancePath:instancePath+"/sheriffMarks/" + i2+"/sheriffName",schemaPath:"node#/definitions/SheriffMark/properties/sheriffName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced80 !== undefined){
data76 = coerced80;
if(data75 !== undefined){
data75["sheriffName"] = coerced80;
}
}
}
}
}
}
}
else {
validate178.errors = [{instancePath:instancePath+"/sheriffMarks/" + i2,schemaPath:"node#/definitions/SheriffMark/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
var valid19 = _errs249 === errors;
if(!valid19){
break;
}
}
}
}
var valid0 = _errs246 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.acceptedReactions !== undefined){
let data77 = data.acceptedReactions;
const _errs255 = errors;
const _errs256 = errors;
let valid22 = false;
const _errs257 = errors;
if((!(data77 && typeof data77 == "object" && !Array.isArray(data77))) && (data77 !== null)){
let dataType81 = typeof data77;
let coerced81 = undefined;
if(dataType81 == 'object' && Array.isArray(data77) && data77.length == 1){
data77 = data77[0];
dataType81 = typeof data77;
if((data77 && typeof data77 == "object" && !Array.isArray(data77)) && (data77 === null)){
coerced81 = data77;
}
}
if(!(coerced81 !== undefined)){
if(data77 === "" || data77 === 0 || data77 === false){
coerced81 = null;
}
else {
const err64 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err64];
}
else {
vErrors.push(err64);
}
errors++;
}
}
if(coerced81 !== undefined){
data77 = coerced81;
if(data !== undefined){
data["acceptedReactions"] = coerced81;
}
}
}
const _errs258 = errors;
if(errors === _errs258){
if(data77 && typeof data77 == "object" && !Array.isArray(data77)){
let missing3;
if(((data77.positive === undefined) && (missing3 = "positive")) || ((data77.negative === undefined) && (missing3 = "negative"))){
const err65 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"};
if(vErrors === null){
vErrors = [err65];
}
else {
vErrors.push(err65);
}
errors++;
}
else {
const _errs260 = errors;
for(const key7 in data77){
if(!((key7 === "positive") || (key7 === "negative"))){
delete data77[key7];
}
}
if(_errs260 === errors){
if(data77.positive !== undefined){
let data78 = data77.positive;
const _errs261 = errors;
if(typeof data78 !== "string"){
let dataType82 = typeof data78;
let coerced82 = undefined;
if(dataType82 == 'object' && Array.isArray(data78) && data78.length == 1){
data78 = data78[0];
dataType82 = typeof data78;
if(typeof data78 === "string"){
coerced82 = data78;
}
}
if(!(coerced82 !== undefined)){
if(dataType82 == "number" || dataType82 == "boolean"){
coerced82 = "" + data78;
}
else if(data78 === null){
coerced82 = "";
}
else {
const err66 = {instancePath:instancePath+"/acceptedReactions/positive",schemaPath:"node#/definitions/AcceptedReactions/properties/positive/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err66];
}
else {
vErrors.push(err66);
}
errors++;
}
}
if(coerced82 !== undefined){
data78 = coerced82;
if(data77 !== undefined){
data77["positive"] = coerced82;
}
}
}
var valid24 = _errs261 === errors;
}
else {
var valid24 = true;
}
if(valid24){
if(data77.negative !== undefined){
let data79 = data77.negative;
const _errs263 = errors;
if(typeof data79 !== "string"){
let dataType83 = typeof data79;
let coerced83 = undefined;
if(dataType83 == 'object' && Array.isArray(data79) && data79.length == 1){
data79 = data79[0];
dataType83 = typeof data79;
if(typeof data79 === "string"){
coerced83 = data79;
}
}
if(!(coerced83 !== undefined)){
if(dataType83 == "number" || dataType83 == "boolean"){
coerced83 = "" + data79;
}
else if(data79 === null){
coerced83 = "";
}
else {
const err67 = {instancePath:instancePath+"/acceptedReactions/negative",schemaPath:"node#/definitions/AcceptedReactions/properties/negative/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err67];
}
else {
vErrors.push(err67);
}
errors++;
}
}
if(coerced83 !== undefined){
data79 = coerced83;
if(data77 !== undefined){
data77["negative"] = coerced83;
}
}
}
var valid24 = _errs263 === errors;
}
else {
var valid24 = true;
}
}
}
}
}
else {
const err68 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err68];
}
else {
vErrors.push(err68);
}
errors++;
}
}
var _valid6 = _errs257 === errors;
valid22 = valid22 || _valid6;
if(!valid22){
const _errs267 = errors;
if(data77 !== null){
let dataType84 = typeof data77;
let coerced84 = undefined;
if(dataType84 == 'object' && Array.isArray(data77) && data77.length == 1){
data77 = data77[0];
dataType84 = typeof data77;
if(data77 === null){
coerced84 = data77;
}
}
if(!(coerced84 !== undefined)){
if(data77 === "" || data77 === 0 || data77 === false){
coerced84 = null;
}
else {
const err69 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err69];
}
else {
vErrors.push(err69);
}
errors++;
}
}
if(coerced84 !== undefined){
data77 = coerced84;
if(data !== undefined){
data["acceptedReactions"] = coerced84;
}
}
}
var _valid6 = _errs267 === errors;
valid22 = valid22 || _valid6;
}
if(!valid22){
const err70 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err70];
}
else {
vErrors.push(err70);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs256;
if(vErrors !== null){
if(_errs256){
vErrors.length = _errs256;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs255 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.clientReaction !== undefined){
let data80 = data.clientReaction;
const _errs269 = errors;
const _errs270 = errors;
let valid25 = false;
const _errs271 = errors;
if((!(data80 && typeof data80 == "object" && !Array.isArray(data80))) && (data80 !== null)){
let dataType85 = typeof data80;
let coerced85 = undefined;
if(dataType85 == 'object' && Array.isArray(data80) && data80.length == 1){
data80 = data80[0];
dataType85 = typeof data80;
if((data80 && typeof data80 == "object" && !Array.isArray(data80)) && (data80 === null)){
coerced85 = data80;
}
}
if(!(coerced85 !== undefined)){
if(data80 === "" || data80 === 0 || data80 === false){
coerced85 = null;
}
else {
const err71 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err71];
}
else {
vErrors.push(err71);
}
errors++;
}
}
if(coerced85 !== undefined){
data80 = coerced85;
if(data !== undefined){
data["clientReaction"] = coerced85;
}
}
}
const _errs272 = errors;
if(errors === _errs272){
if(data80 && typeof data80 == "object" && !Array.isArray(data80)){
let missing4;
if((((data80.negative === undefined) && (missing4 = "negative")) || ((data80.emoji === undefined) && (missing4 = "emoji"))) || ((data80.createdAt === undefined) && (missing4 = "createdAt"))){
const err72 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"};
if(vErrors === null){
vErrors = [err72];
}
else {
vErrors.push(err72);
}
errors++;
}
else {
const _errs274 = errors;
for(const key8 in data80){
if(!((((key8 === "negative") || (key8 === "emoji")) || (key8 === "createdAt")) || (key8 === "deadline"))){
delete data80[key8];
}
}
if(_errs274 === errors){
if(data80.negative !== undefined){
let data81 = data80.negative;
const _errs275 = errors;
if(typeof data81 !== "boolean"){
let dataType86 = typeof data81;
let coerced86 = undefined;
if(dataType86 == 'object' && Array.isArray(data81) && data81.length == 1){
data81 = data81[0];
dataType86 = typeof data81;
if(typeof data81 === "boolean"){
coerced86 = data81;
}
}
if(!(coerced86 !== undefined)){
if(data81 === "false" || data81 === 0 || data81 === null){
coerced86 = false;
}
else if(data81 === "true" || data81 === 1){
coerced86 = true;
}
else {
const err73 = {instancePath:instancePath+"/clientReaction/negative",schemaPath:"node#/definitions/ClientReactionInfo/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err73];
}
else {
vErrors.push(err73);
}
errors++;
}
}
if(coerced86 !== undefined){
data81 = coerced86;
if(data80 !== undefined){
data80["negative"] = coerced86;
}
}
}
var valid27 = _errs275 === errors;
}
else {
var valid27 = true;
}
if(valid27){
if(data80.emoji !== undefined){
let data82 = data80.emoji;
const _errs277 = errors;
if(!(((typeof data82 == "number") && (!(data82 % 1) && !isNaN(data82))) && (isFinite(data82)))){
let dataType87 = typeof data82;
let coerced87 = undefined;
if(dataType87 == 'object' && Array.isArray(data82) && data82.length == 1){
data82 = data82[0];
dataType87 = typeof data82;
if(((typeof data82 == "number") && (!(data82 % 1) && !isNaN(data82))) && (isFinite(data82))){
coerced87 = data82;
}
}
if(!(coerced87 !== undefined)){
if(dataType87 === "boolean" || data82 === null
              || (dataType87 === "string" && data82 && data82 == +data82 && !(data82 % 1))){
coerced87 = +data82;
}
else {
const err74 = {instancePath:instancePath+"/clientReaction/emoji",schemaPath:"node#/definitions/ClientReactionInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err74];
}
else {
vErrors.push(err74);
}
errors++;
}
}
if(coerced87 !== undefined){
data82 = coerced87;
if(data80 !== undefined){
data80["emoji"] = coerced87;
}
}
}
var valid27 = _errs277 === errors;
}
else {
var valid27 = true;
}
if(valid27){
if(data80.createdAt !== undefined){
let data83 = data80.createdAt;
const _errs279 = errors;
if(!(((typeof data83 == "number") && (!(data83 % 1) && !isNaN(data83))) && (isFinite(data83)))){
let dataType88 = typeof data83;
let coerced88 = undefined;
if(dataType88 == 'object' && Array.isArray(data83) && data83.length == 1){
data83 = data83[0];
dataType88 = typeof data83;
if(((typeof data83 == "number") && (!(data83 % 1) && !isNaN(data83))) && (isFinite(data83))){
coerced88 = data83;
}
}
if(!(coerced88 !== undefined)){
if(dataType88 === "boolean" || data83 === null
              || (dataType88 === "string" && data83 && data83 == +data83 && !(data83 % 1))){
coerced88 = +data83;
}
else {
const err75 = {instancePath:instancePath+"/clientReaction/createdAt",schemaPath:"node#/definitions/ClientReactionInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err75];
}
else {
vErrors.push(err75);
}
errors++;
}
}
if(coerced88 !== undefined){
data83 = coerced88;
if(data80 !== undefined){
data80["createdAt"] = coerced88;
}
}
}
var valid27 = _errs279 === errors;
}
else {
var valid27 = true;
}
if(valid27){
if(data80.deadline !== undefined){
let data84 = data80.deadline;
const _errs281 = errors;
if((!(((typeof data84 == "number") && (!(data84 % 1) && !isNaN(data84))) && (isFinite(data84)))) && (data84 !== null)){
let dataType89 = typeof data84;
let coerced89 = undefined;
if(dataType89 == 'object' && Array.isArray(data84) && data84.length == 1){
data84 = data84[0];
dataType89 = typeof data84;
if((((typeof data84 == "number") && (!(data84 % 1) && !isNaN(data84))) && (isFinite(data84))) && (data84 === null)){
coerced89 = data84;
}
}
if(!(coerced89 !== undefined)){
if(dataType89 === "boolean" || data84 === null
              || (dataType89 === "string" && data84 && data84 == +data84 && !(data84 % 1))){
coerced89 = +data84;
}
else if(data84 === "" || data84 === 0 || data84 === false){
coerced89 = null;
}
else {
const err76 = {instancePath:instancePath+"/clientReaction/deadline",schemaPath:"node#/definitions/ClientReactionInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err76];
}
else {
vErrors.push(err76);
}
errors++;
}
}
if(coerced89 !== undefined){
data84 = coerced89;
if(data80 !== undefined){
data80["deadline"] = coerced89;
}
}
}
var valid27 = _errs281 === errors;
}
else {
var valid27 = true;
}
}
}
}
}
}
}
else {
const err77 = {instancePath:instancePath+"/clientReaction",schemaPath:"node#/definitions/ClientReactionInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err77];
}
else {
vErrors.push(err77);
}
errors++;
}
}
var _valid7 = _errs271 === errors;
valid25 = valid25 || _valid7;
if(!valid25){
const _errs286 = errors;
if(data80 !== null){
let dataType90 = typeof data80;
let coerced90 = undefined;
if(dataType90 == 'object' && Array.isArray(data80) && data80.length == 1){
data80 = data80[0];
dataType90 = typeof data80;
if(data80 === null){
coerced90 = data80;
}
}
if(!(coerced90 !== undefined)){
if(data80 === "" || data80 === 0 || data80 === false){
coerced90 = null;
}
else {
const err78 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err78];
}
else {
vErrors.push(err78);
}
errors++;
}
}
if(coerced90 !== undefined){
data80 = coerced90;
if(data !== undefined){
data["clientReaction"] = coerced90;
}
}
}
var _valid7 = _errs286 === errors;
valid25 = valid25 || _valid7;
}
if(!valid25){
const err79 = {instancePath:instancePath+"/clientReaction",schemaPath:"#/properties/clientReaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err79];
}
else {
vErrors.push(err79);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs270;
if(vErrors !== null){
if(_errs270){
vErrors.length = _errs270;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs269 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.seniorReaction !== undefined){
let data85 = data.seniorReaction;
const _errs288 = errors;
const _errs289 = errors;
let valid28 = false;
const _errs290 = errors;
if((!(data85 && typeof data85 == "object" && !Array.isArray(data85))) && (data85 !== null)){
let dataType91 = typeof data85;
let coerced91 = undefined;
if(dataType91 == 'object' && Array.isArray(data85) && data85.length == 1){
data85 = data85[0];
dataType91 = typeof data85;
if((data85 && typeof data85 == "object" && !Array.isArray(data85)) && (data85 === null)){
coerced91 = data85;
}
}
if(!(coerced91 !== undefined)){
if(data85 === "" || data85 === 0 || data85 === false){
coerced91 = null;
}
else {
const err80 = {instancePath:instancePath+"/seniorReaction",schemaPath:"#/properties/seniorReaction/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err80];
}
else {
vErrors.push(err80);
}
errors++;
}
}
if(coerced91 !== undefined){
data85 = coerced91;
if(data !== undefined){
data["seniorReaction"] = coerced91;
}
}
}
const _errs291 = errors;
if(errors === _errs291){
if(data85 && typeof data85 == "object" && !Array.isArray(data85)){
let missing5;
if((((data85.negative === undefined) && (missing5 = "negative")) || ((data85.emoji === undefined) && (missing5 = "emoji"))) || ((data85.createdAt === undefined) && (missing5 = "createdAt"))){
const err81 = {instancePath:instancePath+"/seniorReaction",schemaPath:"node#/definitions/ClientReactionInfo/required",keyword:"required",params:{missingProperty: missing5},message:"must have required property '"+missing5+"'"};
if(vErrors === null){
vErrors = [err81];
}
else {
vErrors.push(err81);
}
errors++;
}
else {
const _errs293 = errors;
for(const key9 in data85){
if(!((((key9 === "negative") || (key9 === "emoji")) || (key9 === "createdAt")) || (key9 === "deadline"))){
delete data85[key9];
}
}
if(_errs293 === errors){
if(data85.negative !== undefined){
let data86 = data85.negative;
const _errs294 = errors;
if(typeof data86 !== "boolean"){
let dataType92 = typeof data86;
let coerced92 = undefined;
if(dataType92 == 'object' && Array.isArray(data86) && data86.length == 1){
data86 = data86[0];
dataType92 = typeof data86;
if(typeof data86 === "boolean"){
coerced92 = data86;
}
}
if(!(coerced92 !== undefined)){
if(data86 === "false" || data86 === 0 || data86 === null){
coerced92 = false;
}
else if(data86 === "true" || data86 === 1){
coerced92 = true;
}
else {
const err82 = {instancePath:instancePath+"/seniorReaction/negative",schemaPath:"node#/definitions/ClientReactionInfo/properties/negative/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err82];
}
else {
vErrors.push(err82);
}
errors++;
}
}
if(coerced92 !== undefined){
data86 = coerced92;
if(data85 !== undefined){
data85["negative"] = coerced92;
}
}
}
var valid30 = _errs294 === errors;
}
else {
var valid30 = true;
}
if(valid30){
if(data85.emoji !== undefined){
let data87 = data85.emoji;
const _errs296 = errors;
if(!(((typeof data87 == "number") && (!(data87 % 1) && !isNaN(data87))) && (isFinite(data87)))){
let dataType93 = typeof data87;
let coerced93 = undefined;
if(dataType93 == 'object' && Array.isArray(data87) && data87.length == 1){
data87 = data87[0];
dataType93 = typeof data87;
if(((typeof data87 == "number") && (!(data87 % 1) && !isNaN(data87))) && (isFinite(data87))){
coerced93 = data87;
}
}
if(!(coerced93 !== undefined)){
if(dataType93 === "boolean" || data87 === null
              || (dataType93 === "string" && data87 && data87 == +data87 && !(data87 % 1))){
coerced93 = +data87;
}
else {
const err83 = {instancePath:instancePath+"/seniorReaction/emoji",schemaPath:"node#/definitions/ClientReactionInfo/properties/emoji/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err83];
}
else {
vErrors.push(err83);
}
errors++;
}
}
if(coerced93 !== undefined){
data87 = coerced93;
if(data85 !== undefined){
data85["emoji"] = coerced93;
}
}
}
var valid30 = _errs296 === errors;
}
else {
var valid30 = true;
}
if(valid30){
if(data85.createdAt !== undefined){
let data88 = data85.createdAt;
const _errs298 = errors;
if(!(((typeof data88 == "number") && (!(data88 % 1) && !isNaN(data88))) && (isFinite(data88)))){
let dataType94 = typeof data88;
let coerced94 = undefined;
if(dataType94 == 'object' && Array.isArray(data88) && data88.length == 1){
data88 = data88[0];
dataType94 = typeof data88;
if(((typeof data88 == "number") && (!(data88 % 1) && !isNaN(data88))) && (isFinite(data88))){
coerced94 = data88;
}
}
if(!(coerced94 !== undefined)){
if(dataType94 === "boolean" || data88 === null
              || (dataType94 === "string" && data88 && data88 == +data88 && !(data88 % 1))){
coerced94 = +data88;
}
else {
const err84 = {instancePath:instancePath+"/seniorReaction/createdAt",schemaPath:"node#/definitions/ClientReactionInfo/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err84];
}
else {
vErrors.push(err84);
}
errors++;
}
}
if(coerced94 !== undefined){
data88 = coerced94;
if(data85 !== undefined){
data85["createdAt"] = coerced94;
}
}
}
var valid30 = _errs298 === errors;
}
else {
var valid30 = true;
}
if(valid30){
if(data85.deadline !== undefined){
let data89 = data85.deadline;
const _errs300 = errors;
if((!(((typeof data89 == "number") && (!(data89 % 1) && !isNaN(data89))) && (isFinite(data89)))) && (data89 !== null)){
let dataType95 = typeof data89;
let coerced95 = undefined;
if(dataType95 == 'object' && Array.isArray(data89) && data89.length == 1){
data89 = data89[0];
dataType95 = typeof data89;
if((((typeof data89 == "number") && (!(data89 % 1) && !isNaN(data89))) && (isFinite(data89))) && (data89 === null)){
coerced95 = data89;
}
}
if(!(coerced95 !== undefined)){
if(dataType95 === "boolean" || data89 === null
              || (dataType95 === "string" && data89 && data89 == +data89 && !(data89 % 1))){
coerced95 = +data89;
}
else if(data89 === "" || data89 === 0 || data89 === false){
coerced95 = null;
}
else {
const err85 = {instancePath:instancePath+"/seniorReaction/deadline",schemaPath:"node#/definitions/ClientReactionInfo/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err85];
}
else {
vErrors.push(err85);
}
errors++;
}
}
if(coerced95 !== undefined){
data89 = coerced95;
if(data85 !== undefined){
data85["deadline"] = coerced95;
}
}
}
var valid30 = _errs300 === errors;
}
else {
var valid30 = true;
}
}
}
}
}
}
}
else {
const err86 = {instancePath:instancePath+"/seniorReaction",schemaPath:"node#/definitions/ClientReactionInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err86];
}
else {
vErrors.push(err86);
}
errors++;
}
}
var _valid8 = _errs290 === errors;
valid28 = valid28 || _valid8;
if(!valid28){
const _errs305 = errors;
if(data85 !== null){
let dataType96 = typeof data85;
let coerced96 = undefined;
if(dataType96 == 'object' && Array.isArray(data85) && data85.length == 1){
data85 = data85[0];
dataType96 = typeof data85;
if(data85 === null){
coerced96 = data85;
}
}
if(!(coerced96 !== undefined)){
if(data85 === "" || data85 === 0 || data85 === false){
coerced96 = null;
}
else {
const err87 = {instancePath:instancePath+"/seniorReaction",schemaPath:"#/properties/seniorReaction/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err87];
}
else {
vErrors.push(err87);
}
errors++;
}
}
if(coerced96 !== undefined){
data85 = coerced96;
if(data !== undefined){
data["seniorReaction"] = coerced96;
}
}
}
var _valid8 = _errs305 === errors;
valid28 = valid28 || _valid8;
}
if(!valid28){
const err88 = {instancePath:instancePath+"/seniorReaction",schemaPath:"#/properties/seniorReaction/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err88];
}
else {
vErrors.push(err88);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs289;
if(vErrors !== null){
if(_errs289){
vErrors.length = _errs289;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs288 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.reactions !== undefined){
let data90 = data.reactions;
const _errs307 = errors;
const _errs308 = errors;
let valid31 = false;
const _errs309 = errors;
if((!(data90 && typeof data90 == "object" && !Array.isArray(data90))) && (data90 !== null)){
let dataType97 = typeof data90;
let coerced97 = undefined;
if(dataType97 == 'object' && Array.isArray(data90) && data90.length == 1){
data90 = data90[0];
dataType97 = typeof data90;
if((data90 && typeof data90 == "object" && !Array.isArray(data90)) && (data90 === null)){
coerced97 = data90;
}
}
if(!(coerced97 !== undefined)){
if(data90 === "" || data90 === 0 || data90 === false){
coerced97 = null;
}
else {
const err89 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err89];
}
else {
vErrors.push(err89);
}
errors++;
}
}
if(coerced97 !== undefined){
data90 = coerced97;
if(data !== undefined){
data["reactions"] = coerced97;
}
}
}
if(!(validate90(data90, {instancePath:instancePath+"/reactions",parentData:data,parentDataProperty:"reactions",rootData}))){
vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);
errors = vErrors.length;
}
var _valid9 = _errs309 === errors;
valid31 = valid31 || _valid9;
if(!valid31){
const _errs312 = errors;
if(data90 !== null){
let dataType98 = typeof data90;
let coerced98 = undefined;
if(dataType98 == 'object' && Array.isArray(data90) && data90.length == 1){
data90 = data90[0];
dataType98 = typeof data90;
if(data90 === null){
coerced98 = data90;
}
}
if(!(coerced98 !== undefined)){
if(data90 === "" || data90 === 0 || data90 === false){
coerced98 = null;
}
else {
const err90 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err90];
}
else {
vErrors.push(err90);
}
errors++;
}
}
if(coerced98 !== undefined){
data90 = coerced98;
if(data !== undefined){
data["reactions"] = coerced98;
}
}
}
var _valid9 = _errs312 === errors;
valid31 = valid31 || _valid9;
}
if(!valid31){
const err91 = {instancePath:instancePath+"/reactions",schemaPath:"#/properties/reactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err91];
}
else {
vErrors.push(err91);
}
errors++;
validate178.errors = vErrors;
return false;
}
else {
errors = _errs308;
if(vErrors !== null){
if(_errs308){
vErrors.length = _errs308;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs307 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate178.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate178.errors = vErrors;
return errors === 0;
}

export const CommentsSliceInfo = validate182;
const schema214 = {"type":"object","properties":{"before":{"type":"integer"},"after":{"type":"integer"},"comments":{"type":"array","items":{"$ref":"node#/definitions/CommentInfo"}},"total":{"type":"integer"},"totalInPast":{"type":"integer"},"totalInFuture":{"type":"integer"}},"required":["before","after","comments","total","totalInPast","totalInFuture"],"additionalProperties":false};

function validate182(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.before === undefined) && (missing0 = "before")) || ((data.after === undefined) && (missing0 = "after"))) || ((data.comments === undefined) && (missing0 = "comments"))) || ((data.total === undefined) && (missing0 = "total"))) || ((data.totalInPast === undefined) && (missing0 = "totalInPast"))) || ((data.totalInFuture === undefined) && (missing0 = "totalInFuture"))){
validate182.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((((key0 === "before") || (key0 === "after")) || (key0 === "comments")) || (key0 === "total")) || (key0 === "totalInPast")) || (key0 === "totalInFuture"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.before !== undefined){
let data0 = data.before;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate182.errors = [{instancePath:instancePath+"/before",schemaPath:"#/properties/before/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["before"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.after !== undefined){
let data1 = data.after;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate182.errors = [{instancePath:instancePath+"/after",schemaPath:"#/properties/after/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["after"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.comments !== undefined){
let data2 = data.comments;
const _errs6 = errors;
if(!(Array.isArray(data2))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(Array.isArray(data2)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else {
validate182.errors = [{instancePath:instancePath+"/comments",schemaPath:"#/properties/comments/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["comments"] = coerced2;
}
}
}
if(errors === _errs6){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
const _errs8 = errors;
if(!(validate178(data2[i0], {instancePath:instancePath+"/comments/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate178.errors : vErrors.concat(validate178.errors);
errors = vErrors.length;
}
var valid1 = _errs8 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data4 = data.total;
const _errs9 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data4 === null
              || (dataType3 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced3 = +data4;
}
else {
validate182.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data !== undefined){
data["total"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInPast !== undefined){
let data5 = data.totalInPast;
const _errs11 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data5 === null
              || (dataType4 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced4 = +data5;
}
else {
validate182.errors = [{instancePath:instancePath+"/totalInPast",schemaPath:"#/properties/totalInPast/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data !== undefined){
data["totalInPast"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInFuture !== undefined){
let data6 = data.totalInFuture;
const _errs13 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType5 = typeof data6;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType5 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced5 = data6;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 === "boolean" || data6 === null
              || (dataType5 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced5 = +data6;
}
else {
validate182.errors = [{instancePath:instancePath+"/totalInFuture",schemaPath:"#/properties/totalInFuture/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced5 !== undefined){
data6 = coerced5;
if(data !== undefined){
data["totalInFuture"] = coerced5;
}
}
}
var valid0 = _errs13 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
else {
validate182.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate182.errors = vErrors;
return errors === 0;
}

export const DraftInfo = validate184;
const schema215 = {"type":"object","properties":{"id":{"type":"string"},"draftType":{"type":"string"},"receiverName":{"type":"string"},"receiverPostingId":{"type":"string","nullable":true},"receiverCommentId":{"type":"string","nullable":true},"repliedToId":{"type":"string","nullable":true},"createdAt":{"type":"integer"},"editedAt":{"type":"integer","nullable":true},"deadline":{"type":"integer","nullable":true},"ownerFullName":{"type":"string","nullable":true},"ownerAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"acceptedReactions":{"anyOf":[{"$ref":"node#/definitions/AcceptedReactions","type":"object","nullable":true},{"type":"null"}]},"bodySrc":{"type":"string","nullable":true},"bodySrcFormat":{"type":"string","nullable":true},"body":{"type":"string"},"bodyFormat":{"type":"string","nullable":true},"media":{"type":"array","items":{"$ref":"node#/definitions/MediaAttachment"},"nullable":true},"heading":{"type":"string"},"publishAt":{"type":"integer","nullable":true},"updateInfo":{"anyOf":[{"$ref":"node#/definitions/UpdateInfo","type":"object","nullable":true},{"type":"null"}]},"operations":{"anyOf":[{"$ref":"node#/definitions/PostingOperations","type":"object","nullable":true},{"type":"null"}]},"commentOperations":{"anyOf":[{"$ref":"node#/definitions/CommentOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","draftType","receiverName","createdAt","body","heading"],"additionalProperties":false};

function validate184(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.id === undefined) && (missing0 = "id")) || ((data.draftType === undefined) && (missing0 = "draftType"))) || ((data.receiverName === undefined) && (missing0 = "receiverName"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.body === undefined) && (missing0 = "body"))) || ((data.heading === undefined) && (missing0 = "heading"))){
validate184.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema215.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate184.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.draftType !== undefined){
let data1 = data.draftType;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate184.errors = [{instancePath:instancePath+"/draftType",schemaPath:"#/properties/draftType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["draftType"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverName !== undefined){
let data2 = data.receiverName;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate184.errors = [{instancePath:instancePath+"/receiverName",schemaPath:"#/properties/receiverName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["receiverName"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverPostingId !== undefined){
let data3 = data.receiverPostingId;
const _errs8 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/receiverPostingId",schemaPath:"#/properties/receiverPostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["receiverPostingId"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.receiverCommentId !== undefined){
let data4 = data.receiverCommentId;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/receiverCommentId",schemaPath:"#/properties/receiverCommentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["receiverCommentId"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.repliedToId !== undefined){
let data5 = data.repliedToId;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/repliedToId",schemaPath:"#/properties/repliedToId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["repliedToId"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data6 = data.createdAt;
const _errs17 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate184.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["createdAt"] = coerced6;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.editedAt !== undefined){
let data7 = data.editedAt;
const _errs19 = errors;
if((!(((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((((typeof data7 == "number") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7))) && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data7 === null
              || (dataType7 === "string" && data7 && data7 == +data7 && !(data7 % 1))){
coerced7 = +data7;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/editedAt",schemaPath:"#/properties/editedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["editedAt"] = coerced7;
}
}
}
var valid0 = _errs19 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.deadline !== undefined){
let data8 = data.deadline;
const _errs22 = errors;
if((!(((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8)))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((((typeof data8 == "number") && (!(data8 % 1) && !isNaN(data8))) && (isFinite(data8))) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "boolean" || data8 === null
              || (dataType8 === "string" && data8 && data8 == +data8 && !(data8 % 1))){
coerced8 = +data8;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/deadline",schemaPath:"#/properties/deadline/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["deadline"] = coerced8;
}
}
}
var valid0 = _errs22 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerFullName !== undefined){
let data9 = data.ownerFullName;
const _errs25 = errors;
if((typeof data9 !== "string") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "string") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data9;
}
else if(data9 === null){
coerced9 = "";
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/ownerFullName",schemaPath:"#/properties/ownerFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["ownerFullName"] = coerced9;
}
}
}
var valid0 = _errs25 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.ownerAvatar !== undefined){
let data10 = data.ownerAvatar;
const _errs28 = errors;
const _errs29 = errors;
let valid1 = false;
const _errs30 = errors;
if((!(data10 && typeof data10 == "object" && !Array.isArray(data10))) && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((data10 && typeof data10 == "object" && !Array.isArray(data10)) && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
const err0 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["ownerAvatar"] = coerced10;
}
}
}
const _errs31 = errors;
if(errors === _errs31){
if(data10 && typeof data10 == "object" && !Array.isArray(data10)){
let missing1;
if(((data10.mediaId === undefined) && (missing1 = "mediaId")) || ((data10.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs33 = errors;
for(const key1 in data10){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data10[key1];
}
}
if(_errs33 === errors){
if(data10.mediaId !== undefined){
let data11 = data10.mediaId;
const _errs34 = errors;
if(typeof data11 !== "string"){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if(typeof data11 === "string"){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else {
const err2 = {instancePath:instancePath+"/ownerAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data10 !== undefined){
data10["mediaId"] = coerced11;
}
}
}
var valid3 = _errs34 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data10.path !== undefined){
let data12 = data10.path;
const _errs36 = errors;
if(typeof data12 !== "string"){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if(typeof data12 === "string"){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(dataType12 == "number" || dataType12 == "boolean"){
coerced12 = "" + data12;
}
else if(data12 === null){
coerced12 = "";
}
else {
const err3 = {instancePath:instancePath+"/ownerAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data10 !== undefined){
data10["path"] = coerced12;
}
}
}
var valid3 = _errs36 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data10.width !== undefined){
let data13 = data10.width;
const _errs38 = errors;
if((!(((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13)))) && (data13 !== null)){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if((((typeof data13 == "number") && (!(data13 % 1) && !isNaN(data13))) && (isFinite(data13))) && (data13 === null)){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 === "boolean" || data13 === null
              || (dataType13 === "string" && data13 && data13 == +data13 && !(data13 % 1))){
coerced13 = +data13;
}
else if(data13 === "" || data13 === 0 || data13 === false){
coerced13 = null;
}
else {
const err4 = {instancePath:instancePath+"/ownerAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data10 !== undefined){
data10["width"] = coerced13;
}
}
}
var valid3 = _errs38 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data10.height !== undefined){
let data14 = data10.height;
const _errs41 = errors;
if((!(((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14)))) && (data14 !== null)){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if((((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14))) && (isFinite(data14))) && (data14 === null)){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 === "boolean" || data14 === null
              || (dataType14 === "string" && data14 && data14 == +data14 && !(data14 % 1))){
coerced14 = +data14;
}
else if(data14 === "" || data14 === 0 || data14 === false){
coerced14 = null;
}
else {
const err5 = {instancePath:instancePath+"/ownerAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data10 !== undefined){
data10["height"] = coerced14;
}
}
}
var valid3 = _errs41 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data10.shape !== undefined){
let data15 = data10.shape;
const _errs44 = errors;
if((typeof data15 !== "string") && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((typeof data15 === "string") && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 == "number" || dataType15 == "boolean"){
coerced15 = "" + data15;
}
else if(data15 === null){
coerced15 = "";
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
const err6 = {instancePath:instancePath+"/ownerAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data10 !== undefined){
data10["shape"] = coerced15;
}
}
}
var valid3 = _errs44 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs30 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs49 = errors;
if(data10 !== null){
let dataType16 = typeof data10;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType16 = typeof data10;
if(data10 === null){
coerced16 = data10;
}
}
if(!(coerced16 !== undefined)){
if(data10 === "" || data10 === 0 || data10 === false){
coerced16 = null;
}
else {
const err8 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced16 !== undefined){
data10 = coerced16;
if(data !== undefined){
data["ownerAvatar"] = coerced16;
}
}
}
var _valid0 = _errs49 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/ownerAvatar",schemaPath:"#/properties/ownerAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate184.errors = vErrors;
return false;
}
else {
errors = _errs29;
if(vErrors !== null){
if(_errs29){
vErrors.length = _errs29;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs28 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.acceptedReactions !== undefined){
let data16 = data.acceptedReactions;
const _errs51 = errors;
const _errs52 = errors;
let valid4 = false;
const _errs53 = errors;
if((!(data16 && typeof data16 == "object" && !Array.isArray(data16))) && (data16 !== null)){
let dataType17 = typeof data16;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType17 = typeof data16;
if((data16 && typeof data16 == "object" && !Array.isArray(data16)) && (data16 === null)){
coerced17 = data16;
}
}
if(!(coerced17 !== undefined)){
if(data16 === "" || data16 === 0 || data16 === false){
coerced17 = null;
}
else {
const err10 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced17 !== undefined){
data16 = coerced17;
if(data !== undefined){
data["acceptedReactions"] = coerced17;
}
}
}
const _errs54 = errors;
if(errors === _errs54){
if(data16 && typeof data16 == "object" && !Array.isArray(data16)){
let missing2;
if(((data16.positive === undefined) && (missing2 = "positive")) || ((data16.negative === undefined) && (missing2 = "negative"))){
const err11 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
else {
const _errs56 = errors;
for(const key2 in data16){
if(!((key2 === "positive") || (key2 === "negative"))){
delete data16[key2];
}
}
if(_errs56 === errors){
if(data16.positive !== undefined){
let data17 = data16.positive;
const _errs57 = errors;
if(typeof data17 !== "string"){
let dataType18 = typeof data17;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType18 = typeof data17;
if(typeof data17 === "string"){
coerced18 = data17;
}
}
if(!(coerced18 !== undefined)){
if(dataType18 == "number" || dataType18 == "boolean"){
coerced18 = "" + data17;
}
else if(data17 === null){
coerced18 = "";
}
else {
const err12 = {instancePath:instancePath+"/acceptedReactions/positive",schemaPath:"node#/definitions/AcceptedReactions/properties/positive/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
}
}
if(coerced18 !== undefined){
data17 = coerced18;
if(data16 !== undefined){
data16["positive"] = coerced18;
}
}
}
var valid6 = _errs57 === errors;
}
else {
var valid6 = true;
}
if(valid6){
if(data16.negative !== undefined){
let data18 = data16.negative;
const _errs59 = errors;
if(typeof data18 !== "string"){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if(typeof data18 === "string"){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data18;
}
else if(data18 === null){
coerced19 = "";
}
else {
const err13 = {instancePath:instancePath+"/acceptedReactions/negative",schemaPath:"node#/definitions/AcceptedReactions/properties/negative/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data16 !== undefined){
data16["negative"] = coerced19;
}
}
}
var valid6 = _errs59 === errors;
}
else {
var valid6 = true;
}
}
}
}
}
else {
const err14 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"node#/definitions/AcceptedReactions/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
var _valid1 = _errs53 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs63 = errors;
if(data16 !== null){
let dataType20 = typeof data16;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType20 = typeof data16;
if(data16 === null){
coerced20 = data16;
}
}
if(!(coerced20 !== undefined)){
if(data16 === "" || data16 === 0 || data16 === false){
coerced20 = null;
}
else {
const err15 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
}
}
if(coerced20 !== undefined){
data16 = coerced20;
if(data !== undefined){
data["acceptedReactions"] = coerced20;
}
}
}
var _valid1 = _errs63 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err16 = {instancePath:instancePath+"/acceptedReactions",schemaPath:"#/properties/acceptedReactions/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
validate184.errors = vErrors;
return false;
}
else {
errors = _errs52;
if(vErrors !== null){
if(_errs52){
vErrors.length = _errs52;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs51 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrc !== undefined){
let data19 = data.bodySrc;
const _errs65 = errors;
if((typeof data19 !== "string") && (data19 !== null)){
let dataType21 = typeof data19;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType21 = typeof data19;
if((typeof data19 === "string") && (data19 === null)){
coerced21 = data19;
}
}
if(!(coerced21 !== undefined)){
if(dataType21 == "number" || dataType21 == "boolean"){
coerced21 = "" + data19;
}
else if(data19 === null){
coerced21 = "";
}
else if(data19 === "" || data19 === 0 || data19 === false){
coerced21 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/bodySrc",schemaPath:"#/properties/bodySrc/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced21 !== undefined){
data19 = coerced21;
if(data !== undefined){
data["bodySrc"] = coerced21;
}
}
}
var valid0 = _errs65 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodySrcFormat !== undefined){
let data20 = data.bodySrcFormat;
const _errs68 = errors;
if((typeof data20 !== "string") && (data20 !== null)){
let dataType22 = typeof data20;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType22 = typeof data20;
if((typeof data20 === "string") && (data20 === null)){
coerced22 = data20;
}
}
if(!(coerced22 !== undefined)){
if(dataType22 == "number" || dataType22 == "boolean"){
coerced22 = "" + data20;
}
else if(data20 === null){
coerced22 = "";
}
else if(data20 === "" || data20 === 0 || data20 === false){
coerced22 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/bodySrcFormat",schemaPath:"#/properties/bodySrcFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced22 !== undefined){
data20 = coerced22;
if(data !== undefined){
data["bodySrcFormat"] = coerced22;
}
}
}
var valid0 = _errs68 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.body !== undefined){
let data21 = data.body;
const _errs71 = errors;
if(typeof data21 !== "string"){
let dataType23 = typeof data21;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType23 = typeof data21;
if(typeof data21 === "string"){
coerced23 = data21;
}
}
if(!(coerced23 !== undefined)){
if(dataType23 == "number" || dataType23 == "boolean"){
coerced23 = "" + data21;
}
else if(data21 === null){
coerced23 = "";
}
else {
validate184.errors = [{instancePath:instancePath+"/body",schemaPath:"#/properties/body/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced23 !== undefined){
data21 = coerced23;
if(data !== undefined){
data["body"] = coerced23;
}
}
}
var valid0 = _errs71 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.bodyFormat !== undefined){
let data22 = data.bodyFormat;
const _errs73 = errors;
if((typeof data22 !== "string") && (data22 !== null)){
let dataType24 = typeof data22;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType24 = typeof data22;
if((typeof data22 === "string") && (data22 === null)){
coerced24 = data22;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data22;
}
else if(data22 === null){
coerced24 = "";
}
else if(data22 === "" || data22 === 0 || data22 === false){
coerced24 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/bodyFormat",schemaPath:"#/properties/bodyFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced24 !== undefined){
data22 = coerced24;
if(data !== undefined){
data["bodyFormat"] = coerced24;
}
}
}
var valid0 = _errs73 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.media !== undefined){
let data23 = data.media;
const _errs76 = errors;
if((!(Array.isArray(data23))) && (data23 !== null)){
let dataType25 = typeof data23;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType25 = typeof data23;
if((Array.isArray(data23)) && (data23 === null)){
coerced25 = data23;
}
}
if(!(coerced25 !== undefined)){
if(dataType25 === "string" || dataType25 === "number"
              || dataType25 === "boolean" || data23 === null){
coerced25 = [data23];
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced25 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/media",schemaPath:"#/properties/media/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced25 !== undefined){
data23 = coerced25;
if(data !== undefined){
data["media"] = coerced25;
}
}
}
if(errors === _errs76){
if(Array.isArray(data23)){
var valid7 = true;
const len0 = data23.length;
for(let i0=0; i0<len0; i0++){
const _errs79 = errors;
if(!(validate152(data23[i0], {instancePath:instancePath+"/media/" + i0,parentData:data23,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate152.errors : vErrors.concat(validate152.errors);
errors = vErrors.length;
}
var valid7 = _errs79 === errors;
if(!valid7){
break;
}
}
}
}
var valid0 = _errs76 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.heading !== undefined){
let data25 = data.heading;
const _errs80 = errors;
if(typeof data25 !== "string"){
let dataType26 = typeof data25;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType26 = typeof data25;
if(typeof data25 === "string"){
coerced26 = data25;
}
}
if(!(coerced26 !== undefined)){
if(dataType26 == "number" || dataType26 == "boolean"){
coerced26 = "" + data25;
}
else if(data25 === null){
coerced26 = "";
}
else {
validate184.errors = [{instancePath:instancePath+"/heading",schemaPath:"#/properties/heading/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced26 !== undefined){
data25 = coerced26;
if(data !== undefined){
data["heading"] = coerced26;
}
}
}
var valid0 = _errs80 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.publishAt !== undefined){
let data26 = data.publishAt;
const _errs82 = errors;
if((!(((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26)))) && (data26 !== null)){
let dataType27 = typeof data26;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType27 = typeof data26;
if((((typeof data26 == "number") && (!(data26 % 1) && !isNaN(data26))) && (isFinite(data26))) && (data26 === null)){
coerced27 = data26;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 === "boolean" || data26 === null
              || (dataType27 === "string" && data26 && data26 == +data26 && !(data26 % 1))){
coerced27 = +data26;
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced27 = null;
}
else {
validate184.errors = [{instancePath:instancePath+"/publishAt",schemaPath:"#/properties/publishAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced27 !== undefined){
data26 = coerced27;
if(data !== undefined){
data["publishAt"] = coerced27;
}
}
}
var valid0 = _errs82 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.updateInfo !== undefined){
let data27 = data.updateInfo;
const _errs85 = errors;
const _errs86 = errors;
let valid8 = false;
const _errs87 = errors;
if((!(data27 && typeof data27 == "object" && !Array.isArray(data27))) && (data27 !== null)){
let dataType28 = typeof data27;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType28 = typeof data27;
if((data27 && typeof data27 == "object" && !Array.isArray(data27)) && (data27 === null)){
coerced28 = data27;
}
}
if(!(coerced28 !== undefined)){
if(data27 === "" || data27 === 0 || data27 === false){
coerced28 = null;
}
else {
const err17 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced28 !== undefined){
data27 = coerced28;
if(data !== undefined){
data["updateInfo"] = coerced28;
}
}
}
const _errs88 = errors;
if(errors === _errs88){
if(data27 && typeof data27 == "object" && !Array.isArray(data27)){
const _errs90 = errors;
for(const key3 in data27){
if(!((key3 === "important") || (key3 === "description"))){
delete data27[key3];
}
}
if(_errs90 === errors){
if(data27.important !== undefined){
let data28 = data27.important;
const _errs91 = errors;
if((typeof data28 !== "boolean") && (data28 !== null)){
let dataType29 = typeof data28;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType29 = typeof data28;
if((typeof data28 === "boolean") && (data28 === null)){
coerced29 = data28;
}
}
if(!(coerced29 !== undefined)){
if(data28 === "false" || data28 === 0 || data28 === null){
coerced29 = false;
}
else if(data28 === "true" || data28 === 1){
coerced29 = true;
}
else if(data28 === "" || data28 === 0 || data28 === false){
coerced29 = null;
}
else {
const err18 = {instancePath:instancePath+"/updateInfo/important",schemaPath:"node#/definitions/UpdateInfo/properties/important/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
}
}
if(coerced29 !== undefined){
data28 = coerced29;
if(data27 !== undefined){
data27["important"] = coerced29;
}
}
}
var valid10 = _errs91 === errors;
}
else {
var valid10 = true;
}
if(valid10){
if(data27.description !== undefined){
let data29 = data27.description;
const _errs94 = errors;
if((typeof data29 !== "string") && (data29 !== null)){
let dataType30 = typeof data29;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType30 = typeof data29;
if((typeof data29 === "string") && (data29 === null)){
coerced30 = data29;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data29;
}
else if(data29 === null){
coerced30 = "";
}
else if(data29 === "" || data29 === 0 || data29 === false){
coerced30 = null;
}
else {
const err19 = {instancePath:instancePath+"/updateInfo/description",schemaPath:"node#/definitions/UpdateInfo/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced30 !== undefined){
data29 = coerced30;
if(data27 !== undefined){
data27["description"] = coerced30;
}
}
}
var valid10 = _errs94 === errors;
}
else {
var valid10 = true;
}
}
}
}
else {
const err20 = {instancePath:instancePath+"/updateInfo",schemaPath:"node#/definitions/UpdateInfo/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
var _valid2 = _errs87 === errors;
valid8 = valid8 || _valid2;
if(!valid8){
const _errs99 = errors;
if(data27 !== null){
let dataType31 = typeof data27;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType31 = typeof data27;
if(data27 === null){
coerced31 = data27;
}
}
if(!(coerced31 !== undefined)){
if(data27 === "" || data27 === 0 || data27 === false){
coerced31 = null;
}
else {
const err21 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced31 !== undefined){
data27 = coerced31;
if(data !== undefined){
data["updateInfo"] = coerced31;
}
}
}
var _valid2 = _errs99 === errors;
valid8 = valid8 || _valid2;
}
if(!valid8){
const err22 = {instancePath:instancePath+"/updateInfo",schemaPath:"#/properties/updateInfo/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
validate184.errors = vErrors;
return false;
}
else {
errors = _errs86;
if(vErrors !== null){
if(_errs86){
vErrors.length = _errs86;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs85 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data30 = data.operations;
const _errs101 = errors;
const _errs102 = errors;
let valid11 = false;
const _errs103 = errors;
if((!(data30 && typeof data30 == "object" && !Array.isArray(data30))) && (data30 !== null)){
let dataType32 = typeof data30;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType32 = typeof data30;
if((data30 && typeof data30 == "object" && !Array.isArray(data30)) && (data30 === null)){
coerced32 = data30;
}
}
if(!(coerced32 !== undefined)){
if(data30 === "" || data30 === 0 || data30 === false){
coerced32 = null;
}
else {
const err23 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced32 !== undefined){
data30 = coerced32;
if(data !== undefined){
data["operations"] = coerced32;
}
}
}
const _errs104 = errors;
if(errors === _errs104){
if(data30 && typeof data30 == "object" && !Array.isArray(data30)){
const _errs106 = errors;
for(const key4 in data30){
if(!(func2.call(schema19.properties, key4))){
delete data30[key4];
}
}
if(_errs106 === errors){
if(data30.view !== undefined){
let data31 = data30.view;
const _errs107 = errors;
if((typeof data31 !== "string") && (data31 !== null)){
let dataType33 = typeof data31;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType33 = typeof data31;
if((typeof data31 === "string") && (data31 === null)){
coerced33 = data31;
}
}
if(!(coerced33 !== undefined)){
if(dataType33 == "number" || dataType33 == "boolean"){
coerced33 = "" + data31;
}
else if(data31 === null){
coerced33 = "";
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced33 = null;
}
else {
const err24 = {instancePath:instancePath+"/operations/view",schemaPath:"node#/definitions/PostingOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
}
}
if(coerced33 !== undefined){
data31 = coerced33;
if(data30 !== undefined){
data30["view"] = coerced33;
}
}
}
var valid13 = _errs107 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.edit !== undefined){
let data32 = data30.edit;
const _errs110 = errors;
if((typeof data32 !== "string") && (data32 !== null)){
let dataType34 = typeof data32;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data32) && data32.length == 1){
data32 = data32[0];
dataType34 = typeof data32;
if((typeof data32 === "string") && (data32 === null)){
coerced34 = data32;
}
}
if(!(coerced34 !== undefined)){
if(dataType34 == "number" || dataType34 == "boolean"){
coerced34 = "" + data32;
}
else if(data32 === null){
coerced34 = "";
}
else if(data32 === "" || data32 === 0 || data32 === false){
coerced34 = null;
}
else {
const err25 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/PostingOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err25];
}
else {
vErrors.push(err25);
}
errors++;
}
}
if(coerced34 !== undefined){
data32 = coerced34;
if(data30 !== undefined){
data30["edit"] = coerced34;
}
}
}
var valid13 = _errs110 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.delete !== undefined){
let data33 = data30.delete;
const _errs113 = errors;
if((typeof data33 !== "string") && (data33 !== null)){
let dataType35 = typeof data33;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data33) && data33.length == 1){
data33 = data33[0];
dataType35 = typeof data33;
if((typeof data33 === "string") && (data33 === null)){
coerced35 = data33;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data33;
}
else if(data33 === null){
coerced35 = "";
}
else if(data33 === "" || data33 === 0 || data33 === false){
coerced35 = null;
}
else {
const err26 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/PostingOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err26];
}
else {
vErrors.push(err26);
}
errors++;
}
}
if(coerced35 !== undefined){
data33 = coerced35;
if(data30 !== undefined){
data30["delete"] = coerced35;
}
}
}
var valid13 = _errs113 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewComments !== undefined){
let data34 = data30.viewComments;
const _errs116 = errors;
if((typeof data34 !== "string") && (data34 !== null)){
let dataType36 = typeof data34;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data34) && data34.length == 1){
data34 = data34[0];
dataType36 = typeof data34;
if((typeof data34 === "string") && (data34 === null)){
coerced36 = data34;
}
}
if(!(coerced36 !== undefined)){
if(dataType36 == "number" || dataType36 == "boolean"){
coerced36 = "" + data34;
}
else if(data34 === null){
coerced36 = "";
}
else if(data34 === "" || data34 === 0 || data34 === false){
coerced36 = null;
}
else {
const err27 = {instancePath:instancePath+"/operations/viewComments",schemaPath:"node#/definitions/PostingOperations/properties/viewComments/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err27];
}
else {
vErrors.push(err27);
}
errors++;
}
}
if(coerced36 !== undefined){
data34 = coerced36;
if(data30 !== undefined){
data30["viewComments"] = coerced36;
}
}
}
var valid13 = _errs116 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.addComment !== undefined){
let data35 = data30.addComment;
const _errs119 = errors;
if((typeof data35 !== "string") && (data35 !== null)){
let dataType37 = typeof data35;
let coerced37 = undefined;
if(dataType37 == 'object' && Array.isArray(data35) && data35.length == 1){
data35 = data35[0];
dataType37 = typeof data35;
if((typeof data35 === "string") && (data35 === null)){
coerced37 = data35;
}
}
if(!(coerced37 !== undefined)){
if(dataType37 == "number" || dataType37 == "boolean"){
coerced37 = "" + data35;
}
else if(data35 === null){
coerced37 = "";
}
else if(data35 === "" || data35 === 0 || data35 === false){
coerced37 = null;
}
else {
const err28 = {instancePath:instancePath+"/operations/addComment",schemaPath:"node#/definitions/PostingOperations/properties/addComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err28];
}
else {
vErrors.push(err28);
}
errors++;
}
}
if(coerced37 !== undefined){
data35 = coerced37;
if(data30 !== undefined){
data30["addComment"] = coerced37;
}
}
}
var valid13 = _errs119 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.overrideComment !== undefined){
let data36 = data30.overrideComment;
const _errs122 = errors;
if((typeof data36 !== "string") && (data36 !== null)){
let dataType38 = typeof data36;
let coerced38 = undefined;
if(dataType38 == 'object' && Array.isArray(data36) && data36.length == 1){
data36 = data36[0];
dataType38 = typeof data36;
if((typeof data36 === "string") && (data36 === null)){
coerced38 = data36;
}
}
if(!(coerced38 !== undefined)){
if(dataType38 == "number" || dataType38 == "boolean"){
coerced38 = "" + data36;
}
else if(data36 === null){
coerced38 = "";
}
else if(data36 === "" || data36 === 0 || data36 === false){
coerced38 = null;
}
else {
const err29 = {instancePath:instancePath+"/operations/overrideComment",schemaPath:"node#/definitions/PostingOperations/properties/overrideComment/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err29];
}
else {
vErrors.push(err29);
}
errors++;
}
}
if(coerced38 !== undefined){
data36 = coerced38;
if(data30 !== undefined){
data30["overrideComment"] = coerced38;
}
}
}
var valid13 = _errs122 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewReactions !== undefined){
let data37 = data30.viewReactions;
const _errs125 = errors;
if((typeof data37 !== "string") && (data37 !== null)){
let dataType39 = typeof data37;
let coerced39 = undefined;
if(dataType39 == 'object' && Array.isArray(data37) && data37.length == 1){
data37 = data37[0];
dataType39 = typeof data37;
if((typeof data37 === "string") && (data37 === null)){
coerced39 = data37;
}
}
if(!(coerced39 !== undefined)){
if(dataType39 == "number" || dataType39 == "boolean"){
coerced39 = "" + data37;
}
else if(data37 === null){
coerced39 = "";
}
else if(data37 === "" || data37 === 0 || data37 === false){
coerced39 = null;
}
else {
const err30 = {instancePath:instancePath+"/operations/viewReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err30];
}
else {
vErrors.push(err30);
}
errors++;
}
}
if(coerced39 !== undefined){
data37 = coerced39;
if(data30 !== undefined){
data30["viewReactions"] = coerced39;
}
}
}
var valid13 = _errs125 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewNegativeReactions !== undefined){
let data38 = data30.viewNegativeReactions;
const _errs128 = errors;
if((typeof data38 !== "string") && (data38 !== null)){
let dataType40 = typeof data38;
let coerced40 = undefined;
if(dataType40 == 'object' && Array.isArray(data38) && data38.length == 1){
data38 = data38[0];
dataType40 = typeof data38;
if((typeof data38 === "string") && (data38 === null)){
coerced40 = data38;
}
}
if(!(coerced40 !== undefined)){
if(dataType40 == "number" || dataType40 == "boolean"){
coerced40 = "" + data38;
}
else if(data38 === null){
coerced40 = "";
}
else if(data38 === "" || data38 === 0 || data38 === false){
coerced40 = null;
}
else {
const err31 = {instancePath:instancePath+"/operations/viewNegativeReactions",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err31];
}
else {
vErrors.push(err31);
}
errors++;
}
}
if(coerced40 !== undefined){
data38 = coerced40;
if(data30 !== undefined){
data30["viewNegativeReactions"] = coerced40;
}
}
}
var valid13 = _errs128 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewReactionTotals !== undefined){
let data39 = data30.viewReactionTotals;
const _errs131 = errors;
if((typeof data39 !== "string") && (data39 !== null)){
let dataType41 = typeof data39;
let coerced41 = undefined;
if(dataType41 == 'object' && Array.isArray(data39) && data39.length == 1){
data39 = data39[0];
dataType41 = typeof data39;
if((typeof data39 === "string") && (data39 === null)){
coerced41 = data39;
}
}
if(!(coerced41 !== undefined)){
if(dataType41 == "number" || dataType41 == "boolean"){
coerced41 = "" + data39;
}
else if(data39 === null){
coerced41 = "";
}
else if(data39 === "" || data39 === 0 || data39 === false){
coerced41 = null;
}
else {
const err32 = {instancePath:instancePath+"/operations/viewReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err32];
}
else {
vErrors.push(err32);
}
errors++;
}
}
if(coerced41 !== undefined){
data39 = coerced41;
if(data30 !== undefined){
data30["viewReactionTotals"] = coerced41;
}
}
}
var valid13 = _errs131 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewNegativeReactionTotals !== undefined){
let data40 = data30.viewNegativeReactionTotals;
const _errs134 = errors;
if((typeof data40 !== "string") && (data40 !== null)){
let dataType42 = typeof data40;
let coerced42 = undefined;
if(dataType42 == 'object' && Array.isArray(data40) && data40.length == 1){
data40 = data40[0];
dataType42 = typeof data40;
if((typeof data40 === "string") && (data40 === null)){
coerced42 = data40;
}
}
if(!(coerced42 !== undefined)){
if(dataType42 == "number" || dataType42 == "boolean"){
coerced42 = "" + data40;
}
else if(data40 === null){
coerced42 = "";
}
else if(data40 === "" || data40 === 0 || data40 === false){
coerced42 = null;
}
else {
const err33 = {instancePath:instancePath+"/operations/viewNegativeReactionTotals",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err33];
}
else {
vErrors.push(err33);
}
errors++;
}
}
if(coerced42 !== undefined){
data40 = coerced42;
if(data30 !== undefined){
data30["viewNegativeReactionTotals"] = coerced42;
}
}
}
var valid13 = _errs134 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewReactionRatios !== undefined){
let data41 = data30.viewReactionRatios;
const _errs137 = errors;
if((typeof data41 !== "string") && (data41 !== null)){
let dataType43 = typeof data41;
let coerced43 = undefined;
if(dataType43 == 'object' && Array.isArray(data41) && data41.length == 1){
data41 = data41[0];
dataType43 = typeof data41;
if((typeof data41 === "string") && (data41 === null)){
coerced43 = data41;
}
}
if(!(coerced43 !== undefined)){
if(dataType43 == "number" || dataType43 == "boolean"){
coerced43 = "" + data41;
}
else if(data41 === null){
coerced43 = "";
}
else if(data41 === "" || data41 === 0 || data41 === false){
coerced43 = null;
}
else {
const err34 = {instancePath:instancePath+"/operations/viewReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err34];
}
else {
vErrors.push(err34);
}
errors++;
}
}
if(coerced43 !== undefined){
data41 = coerced43;
if(data30 !== undefined){
data30["viewReactionRatios"] = coerced43;
}
}
}
var valid13 = _errs137 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.viewNegativeReactionRatios !== undefined){
let data42 = data30.viewNegativeReactionRatios;
const _errs140 = errors;
if((typeof data42 !== "string") && (data42 !== null)){
let dataType44 = typeof data42;
let coerced44 = undefined;
if(dataType44 == 'object' && Array.isArray(data42) && data42.length == 1){
data42 = data42[0];
dataType44 = typeof data42;
if((typeof data42 === "string") && (data42 === null)){
coerced44 = data42;
}
}
if(!(coerced44 !== undefined)){
if(dataType44 == "number" || dataType44 == "boolean"){
coerced44 = "" + data42;
}
else if(data42 === null){
coerced44 = "";
}
else if(data42 === "" || data42 === 0 || data42 === false){
coerced44 = null;
}
else {
const err35 = {instancePath:instancePath+"/operations/viewNegativeReactionRatios",schemaPath:"node#/definitions/PostingOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err35];
}
else {
vErrors.push(err35);
}
errors++;
}
}
if(coerced44 !== undefined){
data42 = coerced44;
if(data30 !== undefined){
data30["viewNegativeReactionRatios"] = coerced44;
}
}
}
var valid13 = _errs140 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.addReaction !== undefined){
let data43 = data30.addReaction;
const _errs143 = errors;
if((typeof data43 !== "string") && (data43 !== null)){
let dataType45 = typeof data43;
let coerced45 = undefined;
if(dataType45 == 'object' && Array.isArray(data43) && data43.length == 1){
data43 = data43[0];
dataType45 = typeof data43;
if((typeof data43 === "string") && (data43 === null)){
coerced45 = data43;
}
}
if(!(coerced45 !== undefined)){
if(dataType45 == "number" || dataType45 == "boolean"){
coerced45 = "" + data43;
}
else if(data43 === null){
coerced45 = "";
}
else if(data43 === "" || data43 === 0 || data43 === false){
coerced45 = null;
}
else {
const err36 = {instancePath:instancePath+"/operations/addReaction",schemaPath:"node#/definitions/PostingOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err36];
}
else {
vErrors.push(err36);
}
errors++;
}
}
if(coerced45 !== undefined){
data43 = coerced45;
if(data30 !== undefined){
data30["addReaction"] = coerced45;
}
}
}
var valid13 = _errs143 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.addNegativeReaction !== undefined){
let data44 = data30.addNegativeReaction;
const _errs146 = errors;
if((typeof data44 !== "string") && (data44 !== null)){
let dataType46 = typeof data44;
let coerced46 = undefined;
if(dataType46 == 'object' && Array.isArray(data44) && data44.length == 1){
data44 = data44[0];
dataType46 = typeof data44;
if((typeof data44 === "string") && (data44 === null)){
coerced46 = data44;
}
}
if(!(coerced46 !== undefined)){
if(dataType46 == "number" || dataType46 == "boolean"){
coerced46 = "" + data44;
}
else if(data44 === null){
coerced46 = "";
}
else if(data44 === "" || data44 === 0 || data44 === false){
coerced46 = null;
}
else {
const err37 = {instancePath:instancePath+"/operations/addNegativeReaction",schemaPath:"node#/definitions/PostingOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err37];
}
else {
vErrors.push(err37);
}
errors++;
}
}
if(coerced46 !== undefined){
data44 = coerced46;
if(data30 !== undefined){
data30["addNegativeReaction"] = coerced46;
}
}
}
var valid13 = _errs146 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.overrideReaction !== undefined){
let data45 = data30.overrideReaction;
const _errs149 = errors;
if((typeof data45 !== "string") && (data45 !== null)){
let dataType47 = typeof data45;
let coerced47 = undefined;
if(dataType47 == 'object' && Array.isArray(data45) && data45.length == 1){
data45 = data45[0];
dataType47 = typeof data45;
if((typeof data45 === "string") && (data45 === null)){
coerced47 = data45;
}
}
if(!(coerced47 !== undefined)){
if(dataType47 == "number" || dataType47 == "boolean"){
coerced47 = "" + data45;
}
else if(data45 === null){
coerced47 = "";
}
else if(data45 === "" || data45 === 0 || data45 === false){
coerced47 = null;
}
else {
const err38 = {instancePath:instancePath+"/operations/overrideReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err38];
}
else {
vErrors.push(err38);
}
errors++;
}
}
if(coerced47 !== undefined){
data45 = coerced47;
if(data30 !== undefined){
data30["overrideReaction"] = coerced47;
}
}
}
var valid13 = _errs149 === errors;
}
else {
var valid13 = true;
}
if(valid13){
if(data30.overrideCommentReaction !== undefined){
let data46 = data30.overrideCommentReaction;
const _errs152 = errors;
if((typeof data46 !== "string") && (data46 !== null)){
let dataType48 = typeof data46;
let coerced48 = undefined;
if(dataType48 == 'object' && Array.isArray(data46) && data46.length == 1){
data46 = data46[0];
dataType48 = typeof data46;
if((typeof data46 === "string") && (data46 === null)){
coerced48 = data46;
}
}
if(!(coerced48 !== undefined)){
if(dataType48 == "number" || dataType48 == "boolean"){
coerced48 = "" + data46;
}
else if(data46 === null){
coerced48 = "";
}
else if(data46 === "" || data46 === 0 || data46 === false){
coerced48 = null;
}
else {
const err39 = {instancePath:instancePath+"/operations/overrideCommentReaction",schemaPath:"node#/definitions/PostingOperations/properties/overrideCommentReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err39];
}
else {
vErrors.push(err39);
}
errors++;
}
}
if(coerced48 !== undefined){
data46 = coerced48;
if(data30 !== undefined){
data30["overrideCommentReaction"] = coerced48;
}
}
}
var valid13 = _errs152 === errors;
}
else {
var valid13 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err40 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/PostingOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err40];
}
else {
vErrors.push(err40);
}
errors++;
}
}
var _valid3 = _errs103 === errors;
valid11 = valid11 || _valid3;
if(!valid11){
const _errs157 = errors;
if(data30 !== null){
let dataType49 = typeof data30;
let coerced49 = undefined;
if(dataType49 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType49 = typeof data30;
if(data30 === null){
coerced49 = data30;
}
}
if(!(coerced49 !== undefined)){
if(data30 === "" || data30 === 0 || data30 === false){
coerced49 = null;
}
else {
const err41 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err41];
}
else {
vErrors.push(err41);
}
errors++;
}
}
if(coerced49 !== undefined){
data30 = coerced49;
if(data !== undefined){
data["operations"] = coerced49;
}
}
}
var _valid3 = _errs157 === errors;
valid11 = valid11 || _valid3;
}
if(!valid11){
const err42 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err42];
}
else {
vErrors.push(err42);
}
errors++;
validate184.errors = vErrors;
return false;
}
else {
errors = _errs102;
if(vErrors !== null){
if(_errs102){
vErrors.length = _errs102;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs101 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentOperations !== undefined){
let data47 = data.commentOperations;
const _errs159 = errors;
const _errs160 = errors;
let valid14 = false;
const _errs161 = errors;
if((!(data47 && typeof data47 == "object" && !Array.isArray(data47))) && (data47 !== null)){
let dataType50 = typeof data47;
let coerced50 = undefined;
if(dataType50 == 'object' && Array.isArray(data47) && data47.length == 1){
data47 = data47[0];
dataType50 = typeof data47;
if((data47 && typeof data47 == "object" && !Array.isArray(data47)) && (data47 === null)){
coerced50 = data47;
}
}
if(!(coerced50 !== undefined)){
if(data47 === "" || data47 === 0 || data47 === false){
coerced50 = null;
}
else {
const err43 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err43];
}
else {
vErrors.push(err43);
}
errors++;
}
}
if(coerced50 !== undefined){
data47 = coerced50;
if(data !== undefined){
data["commentOperations"] = coerced50;
}
}
}
const _errs162 = errors;
if(errors === _errs162){
if(data47 && typeof data47 == "object" && !Array.isArray(data47)){
const _errs164 = errors;
for(const key5 in data47){
if(!(func2.call(schema12.properties, key5))){
delete data47[key5];
}
}
if(_errs164 === errors){
if(data47.view !== undefined){
let data48 = data47.view;
const _errs165 = errors;
if((typeof data48 !== "string") && (data48 !== null)){
let dataType51 = typeof data48;
let coerced51 = undefined;
if(dataType51 == 'object' && Array.isArray(data48) && data48.length == 1){
data48 = data48[0];
dataType51 = typeof data48;
if((typeof data48 === "string") && (data48 === null)){
coerced51 = data48;
}
}
if(!(coerced51 !== undefined)){
if(dataType51 == "number" || dataType51 == "boolean"){
coerced51 = "" + data48;
}
else if(data48 === null){
coerced51 = "";
}
else if(data48 === "" || data48 === 0 || data48 === false){
coerced51 = null;
}
else {
const err44 = {instancePath:instancePath+"/commentOperations/view",schemaPath:"node#/definitions/CommentOperations/properties/view/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err44];
}
else {
vErrors.push(err44);
}
errors++;
}
}
if(coerced51 !== undefined){
data48 = coerced51;
if(data47 !== undefined){
data47["view"] = coerced51;
}
}
}
var valid16 = _errs165 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.edit !== undefined){
let data49 = data47.edit;
const _errs168 = errors;
if((typeof data49 !== "string") && (data49 !== null)){
let dataType52 = typeof data49;
let coerced52 = undefined;
if(dataType52 == 'object' && Array.isArray(data49) && data49.length == 1){
data49 = data49[0];
dataType52 = typeof data49;
if((typeof data49 === "string") && (data49 === null)){
coerced52 = data49;
}
}
if(!(coerced52 !== undefined)){
if(dataType52 == "number" || dataType52 == "boolean"){
coerced52 = "" + data49;
}
else if(data49 === null){
coerced52 = "";
}
else if(data49 === "" || data49 === 0 || data49 === false){
coerced52 = null;
}
else {
const err45 = {instancePath:instancePath+"/commentOperations/edit",schemaPath:"node#/definitions/CommentOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err45];
}
else {
vErrors.push(err45);
}
errors++;
}
}
if(coerced52 !== undefined){
data49 = coerced52;
if(data47 !== undefined){
data47["edit"] = coerced52;
}
}
}
var valid16 = _errs168 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.delete !== undefined){
let data50 = data47.delete;
const _errs171 = errors;
if((typeof data50 !== "string") && (data50 !== null)){
let dataType53 = typeof data50;
let coerced53 = undefined;
if(dataType53 == 'object' && Array.isArray(data50) && data50.length == 1){
data50 = data50[0];
dataType53 = typeof data50;
if((typeof data50 === "string") && (data50 === null)){
coerced53 = data50;
}
}
if(!(coerced53 !== undefined)){
if(dataType53 == "number" || dataType53 == "boolean"){
coerced53 = "" + data50;
}
else if(data50 === null){
coerced53 = "";
}
else if(data50 === "" || data50 === 0 || data50 === false){
coerced53 = null;
}
else {
const err46 = {instancePath:instancePath+"/commentOperations/delete",schemaPath:"node#/definitions/CommentOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err46];
}
else {
vErrors.push(err46);
}
errors++;
}
}
if(coerced53 !== undefined){
data50 = coerced53;
if(data47 !== undefined){
data47["delete"] = coerced53;
}
}
}
var valid16 = _errs171 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewReactions !== undefined){
let data51 = data47.viewReactions;
const _errs174 = errors;
if((typeof data51 !== "string") && (data51 !== null)){
let dataType54 = typeof data51;
let coerced54 = undefined;
if(dataType54 == 'object' && Array.isArray(data51) && data51.length == 1){
data51 = data51[0];
dataType54 = typeof data51;
if((typeof data51 === "string") && (data51 === null)){
coerced54 = data51;
}
}
if(!(coerced54 !== undefined)){
if(dataType54 == "number" || dataType54 == "boolean"){
coerced54 = "" + data51;
}
else if(data51 === null){
coerced54 = "";
}
else if(data51 === "" || data51 === 0 || data51 === false){
coerced54 = null;
}
else {
const err47 = {instancePath:instancePath+"/commentOperations/viewReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err47];
}
else {
vErrors.push(err47);
}
errors++;
}
}
if(coerced54 !== undefined){
data51 = coerced54;
if(data47 !== undefined){
data47["viewReactions"] = coerced54;
}
}
}
var valid16 = _errs174 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewNegativeReactions !== undefined){
let data52 = data47.viewNegativeReactions;
const _errs177 = errors;
if((typeof data52 !== "string") && (data52 !== null)){
let dataType55 = typeof data52;
let coerced55 = undefined;
if(dataType55 == 'object' && Array.isArray(data52) && data52.length == 1){
data52 = data52[0];
dataType55 = typeof data52;
if((typeof data52 === "string") && (data52 === null)){
coerced55 = data52;
}
}
if(!(coerced55 !== undefined)){
if(dataType55 == "number" || dataType55 == "boolean"){
coerced55 = "" + data52;
}
else if(data52 === null){
coerced55 = "";
}
else if(data52 === "" || data52 === 0 || data52 === false){
coerced55 = null;
}
else {
const err48 = {instancePath:instancePath+"/commentOperations/viewNegativeReactions",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactions/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err48];
}
else {
vErrors.push(err48);
}
errors++;
}
}
if(coerced55 !== undefined){
data52 = coerced55;
if(data47 !== undefined){
data47["viewNegativeReactions"] = coerced55;
}
}
}
var valid16 = _errs177 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewReactionTotals !== undefined){
let data53 = data47.viewReactionTotals;
const _errs180 = errors;
if((typeof data53 !== "string") && (data53 !== null)){
let dataType56 = typeof data53;
let coerced56 = undefined;
if(dataType56 == 'object' && Array.isArray(data53) && data53.length == 1){
data53 = data53[0];
dataType56 = typeof data53;
if((typeof data53 === "string") && (data53 === null)){
coerced56 = data53;
}
}
if(!(coerced56 !== undefined)){
if(dataType56 == "number" || dataType56 == "boolean"){
coerced56 = "" + data53;
}
else if(data53 === null){
coerced56 = "";
}
else if(data53 === "" || data53 === 0 || data53 === false){
coerced56 = null;
}
else {
const err49 = {instancePath:instancePath+"/commentOperations/viewReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err49];
}
else {
vErrors.push(err49);
}
errors++;
}
}
if(coerced56 !== undefined){
data53 = coerced56;
if(data47 !== undefined){
data47["viewReactionTotals"] = coerced56;
}
}
}
var valid16 = _errs180 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewNegativeReactionTotals !== undefined){
let data54 = data47.viewNegativeReactionTotals;
const _errs183 = errors;
if((typeof data54 !== "string") && (data54 !== null)){
let dataType57 = typeof data54;
let coerced57 = undefined;
if(dataType57 == 'object' && Array.isArray(data54) && data54.length == 1){
data54 = data54[0];
dataType57 = typeof data54;
if((typeof data54 === "string") && (data54 === null)){
coerced57 = data54;
}
}
if(!(coerced57 !== undefined)){
if(dataType57 == "number" || dataType57 == "boolean"){
coerced57 = "" + data54;
}
else if(data54 === null){
coerced57 = "";
}
else if(data54 === "" || data54 === 0 || data54 === false){
coerced57 = null;
}
else {
const err50 = {instancePath:instancePath+"/commentOperations/viewNegativeReactionTotals",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionTotals/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err50];
}
else {
vErrors.push(err50);
}
errors++;
}
}
if(coerced57 !== undefined){
data54 = coerced57;
if(data47 !== undefined){
data47["viewNegativeReactionTotals"] = coerced57;
}
}
}
var valid16 = _errs183 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewReactionRatios !== undefined){
let data55 = data47.viewReactionRatios;
const _errs186 = errors;
if((typeof data55 !== "string") && (data55 !== null)){
let dataType58 = typeof data55;
let coerced58 = undefined;
if(dataType58 == 'object' && Array.isArray(data55) && data55.length == 1){
data55 = data55[0];
dataType58 = typeof data55;
if((typeof data55 === "string") && (data55 === null)){
coerced58 = data55;
}
}
if(!(coerced58 !== undefined)){
if(dataType58 == "number" || dataType58 == "boolean"){
coerced58 = "" + data55;
}
else if(data55 === null){
coerced58 = "";
}
else if(data55 === "" || data55 === 0 || data55 === false){
coerced58 = null;
}
else {
const err51 = {instancePath:instancePath+"/commentOperations/viewReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err51];
}
else {
vErrors.push(err51);
}
errors++;
}
}
if(coerced58 !== undefined){
data55 = coerced58;
if(data47 !== undefined){
data47["viewReactionRatios"] = coerced58;
}
}
}
var valid16 = _errs186 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.viewNegativeReactionRatios !== undefined){
let data56 = data47.viewNegativeReactionRatios;
const _errs189 = errors;
if((typeof data56 !== "string") && (data56 !== null)){
let dataType59 = typeof data56;
let coerced59 = undefined;
if(dataType59 == 'object' && Array.isArray(data56) && data56.length == 1){
data56 = data56[0];
dataType59 = typeof data56;
if((typeof data56 === "string") && (data56 === null)){
coerced59 = data56;
}
}
if(!(coerced59 !== undefined)){
if(dataType59 == "number" || dataType59 == "boolean"){
coerced59 = "" + data56;
}
else if(data56 === null){
coerced59 = "";
}
else if(data56 === "" || data56 === 0 || data56 === false){
coerced59 = null;
}
else {
const err52 = {instancePath:instancePath+"/commentOperations/viewNegativeReactionRatios",schemaPath:"node#/definitions/CommentOperations/properties/viewNegativeReactionRatios/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err52];
}
else {
vErrors.push(err52);
}
errors++;
}
}
if(coerced59 !== undefined){
data56 = coerced59;
if(data47 !== undefined){
data47["viewNegativeReactionRatios"] = coerced59;
}
}
}
var valid16 = _errs189 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.addReaction !== undefined){
let data57 = data47.addReaction;
const _errs192 = errors;
if((typeof data57 !== "string") && (data57 !== null)){
let dataType60 = typeof data57;
let coerced60 = undefined;
if(dataType60 == 'object' && Array.isArray(data57) && data57.length == 1){
data57 = data57[0];
dataType60 = typeof data57;
if((typeof data57 === "string") && (data57 === null)){
coerced60 = data57;
}
}
if(!(coerced60 !== undefined)){
if(dataType60 == "number" || dataType60 == "boolean"){
coerced60 = "" + data57;
}
else if(data57 === null){
coerced60 = "";
}
else if(data57 === "" || data57 === 0 || data57 === false){
coerced60 = null;
}
else {
const err53 = {instancePath:instancePath+"/commentOperations/addReaction",schemaPath:"node#/definitions/CommentOperations/properties/addReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err53];
}
else {
vErrors.push(err53);
}
errors++;
}
}
if(coerced60 !== undefined){
data57 = coerced60;
if(data47 !== undefined){
data47["addReaction"] = coerced60;
}
}
}
var valid16 = _errs192 === errors;
}
else {
var valid16 = true;
}
if(valid16){
if(data47.addNegativeReaction !== undefined){
let data58 = data47.addNegativeReaction;
const _errs195 = errors;
if((typeof data58 !== "string") && (data58 !== null)){
let dataType61 = typeof data58;
let coerced61 = undefined;
if(dataType61 == 'object' && Array.isArray(data58) && data58.length == 1){
data58 = data58[0];
dataType61 = typeof data58;
if((typeof data58 === "string") && (data58 === null)){
coerced61 = data58;
}
}
if(!(coerced61 !== undefined)){
if(dataType61 == "number" || dataType61 == "boolean"){
coerced61 = "" + data58;
}
else if(data58 === null){
coerced61 = "";
}
else if(data58 === "" || data58 === 0 || data58 === false){
coerced61 = null;
}
else {
const err54 = {instancePath:instancePath+"/commentOperations/addNegativeReaction",schemaPath:"node#/definitions/CommentOperations/properties/addNegativeReaction/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err54];
}
else {
vErrors.push(err54);
}
errors++;
}
}
if(coerced61 !== undefined){
data58 = coerced61;
if(data47 !== undefined){
data47["addNegativeReaction"] = coerced61;
}
}
}
var valid16 = _errs195 === errors;
}
else {
var valid16 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
const err55 = {instancePath:instancePath+"/commentOperations",schemaPath:"node#/definitions/CommentOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err55];
}
else {
vErrors.push(err55);
}
errors++;
}
}
var _valid4 = _errs161 === errors;
valid14 = valid14 || _valid4;
if(!valid14){
const _errs200 = errors;
if(data47 !== null){
let dataType62 = typeof data47;
let coerced62 = undefined;
if(dataType62 == 'object' && Array.isArray(data47) && data47.length == 1){
data47 = data47[0];
dataType62 = typeof data47;
if(data47 === null){
coerced62 = data47;
}
}
if(!(coerced62 !== undefined)){
if(data47 === "" || data47 === 0 || data47 === false){
coerced62 = null;
}
else {
const err56 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err56];
}
else {
vErrors.push(err56);
}
errors++;
}
}
if(coerced62 !== undefined){
data47 = coerced62;
if(data !== undefined){
data["commentOperations"] = coerced62;
}
}
}
var _valid4 = _errs200 === errors;
valid14 = valid14 || _valid4;
}
if(!valid14){
const err57 = {instancePath:instancePath+"/commentOperations",schemaPath:"#/properties/commentOperations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err57];
}
else {
vErrors.push(err57);
}
errors++;
validate184.errors = vErrors;
return false;
}
else {
errors = _errs160;
if(vErrors !== null){
if(_errs160){
vErrors.length = _errs160;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs159 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate184.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate184.errors = vErrors;
return errors === 0;
}

export const DraftInfoArray = validate186;
const schema221 = {"type":"array","items":{"$ref":"node#/definitions/DraftInfo"}};

function validate186(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate186.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate184(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate184.errors : vErrors.concat(validate184.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate186.errors = vErrors;
return errors === 0;
}

export const EntryInfo = validate188;
const schema222 = {"type":"object","properties":{"posting":{"anyOf":[{"$ref":"node#/definitions/PostingInfo","type":"object","nullable":true},{"type":"null"}]},"comment":{"anyOf":[{"$ref":"node#/definitions/CommentInfo","type":"object","nullable":true},{"type":"null"}]}},"additionalProperties":false};

function validate188(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "posting") || (key0 === "comment"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.posting !== undefined){
let data0 = data.posting;
const _errs2 = errors;
const _errs3 = errors;
let valid1 = false;
const _errs4 = errors;
if((!(data0 && typeof data0 == "object" && !Array.isArray(data0))) && (data0 !== null)){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if((data0 && typeof data0 == "object" && !Array.isArray(data0)) && (data0 === null)){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced0 = null;
}
else {
const err0 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["posting"] = coerced0;
}
}
}
if(!(validate154(data0, {instancePath:instancePath+"/posting",parentData:data,parentDataProperty:"posting",rootData}))){
vErrors = vErrors === null ? validate154.errors : vErrors.concat(validate154.errors);
errors = vErrors.length;
}
var _valid0 = _errs4 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs7 = errors;
if(data0 !== null){
let dataType1 = typeof data0;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType1 = typeof data0;
if(data0 === null){
coerced1 = data0;
}
}
if(!(coerced1 !== undefined)){
if(data0 === "" || data0 === 0 || data0 === false){
coerced1 = null;
}
else {
const err1 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced1 !== undefined){
data0 = coerced1;
if(data !== undefined){
data["posting"] = coerced1;
}
}
}
var _valid0 = _errs7 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate188.errors = vErrors;
return false;
}
else {
errors = _errs3;
if(vErrors !== null){
if(_errs3){
vErrors.length = _errs3;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.comment !== undefined){
let data1 = data.comment;
const _errs9 = errors;
const _errs10 = errors;
let valid2 = false;
const _errs11 = errors;
if((!(data1 && typeof data1 == "object" && !Array.isArray(data1))) && (data1 !== null)){
let dataType2 = typeof data1;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType2 = typeof data1;
if((data1 && typeof data1 == "object" && !Array.isArray(data1)) && (data1 === null)){
coerced2 = data1;
}
}
if(!(coerced2 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced2 = null;
}
else {
const err3 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced2 !== undefined){
data1 = coerced2;
if(data !== undefined){
data["comment"] = coerced2;
}
}
}
if(!(validate178(data1, {instancePath:instancePath+"/comment",parentData:data,parentDataProperty:"comment",rootData}))){
vErrors = vErrors === null ? validate178.errors : vErrors.concat(validate178.errors);
errors = vErrors.length;
}
var _valid1 = _errs11 === errors;
valid2 = valid2 || _valid1;
if(!valid2){
const _errs14 = errors;
if(data1 !== null){
let dataType3 = typeof data1;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType3 = typeof data1;
if(data1 === null){
coerced3 = data1;
}
}
if(!(coerced3 !== undefined)){
if(data1 === "" || data1 === 0 || data1 === false){
coerced3 = null;
}
else {
const err4 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced3 !== undefined){
data1 = coerced3;
if(data !== undefined){
data["comment"] = coerced3;
}
}
}
var _valid1 = _errs14 === errors;
valid2 = valid2 || _valid1;
}
if(!valid2){
const err5 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
validate188.errors = vErrors;
return false;
}
else {
errors = _errs10;
if(vErrors !== null){
if(_errs10){
vErrors.length = _errs10;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
}
}
}
else {
validate188.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate188.errors = vErrors;
return errors === 0;
}

export const EntryInfoArray = validate191;
const schema223 = {"type":"array","items":{"$ref":"node#/definitions/EntryInfo"}};

function validate191(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate191.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate188(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate188.errors : vErrors.concat(validate188.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate191.errors = vErrors;
return errors === 0;
}

export const PluginInfo = validate193;
const schema224 = {"type":"object","properties":{"nodeId":{"type":"string"},"local":{"type":"boolean"},"name":{"type":"string"},"title":{"type":"string","nullable":true},"description":{"type":"string","nullable":true},"location":{"type":"string","nullable":true},"acceptedEvents":{"type":"array","items":{"type":"string"},"nullable":true},"settings":{"type":"array","items":{"$ref":"node#/definitions/SettingMetaInfo"},"nullable":true},"tokenId":{"type":"string","nullable":true}},"required":["nodeId","local","name"],"additionalProperties":false};

function validate193(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((data.nodeId === undefined) && (missing0 = "nodeId")) || ((data.local === undefined) && (missing0 = "local"))) || ((data.name === undefined) && (missing0 = "name"))){
validate193.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema224.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.nodeId !== undefined){
let data0 = data.nodeId;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate193.errors = [{instancePath:instancePath+"/nodeId",schemaPath:"#/properties/nodeId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["nodeId"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.local !== undefined){
let data1 = data.local;
const _errs4 = errors;
if(typeof data1 !== "boolean"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "boolean"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(data1 === "false" || data1 === 0 || data1 === null){
coerced1 = false;
}
else if(data1 === "true" || data1 === 1){
coerced1 = true;
}
else {
validate193.errors = [{instancePath:instancePath+"/local",schemaPath:"#/properties/local/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["local"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.name !== undefined){
let data2 = data.name;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate193.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["name"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.title !== undefined){
let data3 = data.title;
const _errs8 = errors;
if((typeof data3 !== "string") && (data3 !== null)){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if((typeof data3 === "string") && (data3 === null)){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 == "number" || dataType3 == "boolean"){
coerced3 = "" + data3;
}
else if(data3 === null){
coerced3 = "";
}
else if(data3 === "" || data3 === 0 || data3 === false){
coerced3 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["title"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.description !== undefined){
let data4 = data.description;
const _errs11 = errors;
if((typeof data4 !== "string") && (data4 !== null)){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if((typeof data4 === "string") && (data4 === null)){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 == "number" || dataType4 == "boolean"){
coerced4 = "" + data4;
}
else if(data4 === null){
coerced4 = "";
}
else if(data4 === "" || data4 === 0 || data4 === false){
coerced4 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["description"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.location !== undefined){
let data5 = data.location;
const _errs14 = errors;
if((typeof data5 !== "string") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "string") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data5;
}
else if(data5 === null){
coerced5 = "";
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/location",schemaPath:"#/properties/location/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["location"] = coerced5;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.acceptedEvents !== undefined){
let data6 = data.acceptedEvents;
const _errs17 = errors;
if((!(Array.isArray(data6))) && (data6 !== null)){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if((Array.isArray(data6)) && (data6 === null)){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "string" || dataType6 === "number"
              || dataType6 === "boolean" || data6 === null){
coerced6 = [data6];
}
else if(data6 === "" || data6 === 0 || data6 === false){
coerced6 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/acceptedEvents",schemaPath:"#/properties/acceptedEvents/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["acceptedEvents"] = coerced6;
}
}
}
if(errors === _errs17){
if(Array.isArray(data6)){
var valid1 = true;
const len0 = data6.length;
for(let i0=0; i0<len0; i0++){
let data7 = data6[i0];
const _errs20 = errors;
if(typeof data7 !== "string"){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if(typeof data7 === "string"){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 == "number" || dataType7 == "boolean"){
coerced7 = "" + data7;
}
else if(data7 === null){
coerced7 = "";
}
else {
validate193.errors = [{instancePath:instancePath+"/acceptedEvents/" + i0,schemaPath:"#/properties/acceptedEvents/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data6 !== undefined){
data6[i0] = coerced7;
}
}
}
var valid1 = _errs20 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.settings !== undefined){
let data8 = data.settings;
const _errs22 = errors;
if((!(Array.isArray(data8))) && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((Array.isArray(data8)) && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(dataType8 === "string" || dataType8 === "number"
              || dataType8 === "boolean" || data8 === null){
coerced8 = [data8];
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/settings",schemaPath:"#/properties/settings/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["settings"] = coerced8;
}
}
}
if(errors === _errs22){
if(Array.isArray(data8)){
var valid2 = true;
const len1 = data8.length;
for(let i1=0; i1<len1; i1++){
const _errs25 = errors;
if(!(validate169(data8[i1], {instancePath:instancePath+"/settings/" + i1,parentData:data8,parentDataProperty:i1,rootData}))){
vErrors = vErrors === null ? validate169.errors : vErrors.concat(validate169.errors);
errors = vErrors.length;
}
var valid2 = _errs25 === errors;
if(!valid2){
break;
}
}
}
}
var valid0 = _errs22 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.tokenId !== undefined){
let data10 = data.tokenId;
const _errs26 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType9 = typeof data10;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType9 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced9 = data10;
}
}
if(!(coerced9 !== undefined)){
if(dataType9 == "number" || dataType9 == "boolean"){
coerced9 = "" + data10;
}
else if(data10 === null){
coerced9 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced9 = null;
}
else {
validate193.errors = [{instancePath:instancePath+"/tokenId",schemaPath:"#/properties/tokenId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced9 !== undefined){
data10 = coerced9;
if(data !== undefined){
data["tokenId"] = coerced9;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate193.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate193.errors = vErrors;
return errors === 0;
}

export const PluginInfoArray = validate195;
const schema225 = {"type":"array","items":{"$ref":"node#/definitions/PluginInfo"}};

function validate195(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate195.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate193(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate193.errors : vErrors.concat(validate193.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate195.errors = vErrors;
return errors === 0;
}

export const StoryInfo = validate197;
const schema226 = {"type":"object","properties":{"id":{"type":"string"},"feedName":{"type":"string"},"storyType":{"type":"string"},"createdAt":{"type":"integer"},"publishedAt":{"type":"integer"},"pinned":{"type":"boolean","nullable":true},"moment":{"type":"integer"},"viewed":{"type":"boolean","nullable":true},"read":{"type":"boolean","nullable":true},"satisfied":{"type":"boolean","nullable":true},"summaryNodeName":{"type":"string","nullable":true},"summaryFullName":{"type":"string","nullable":true},"summaryAvatar":{"anyOf":[{"$ref":"node#/definitions/AvatarImage","type":"object","nullable":true},{"type":"null"}]},"summary":{"type":"string","nullable":true},"summaryData":{"anyOf":[{"$ref":"node#/definitions/StorySummaryData","type":"object","nullable":true},{"type":"null"}]},"posting":{"anyOf":[{"$ref":"node#/definitions/PostingInfo","type":"object","nullable":true},{"type":"null"}]},"postingId":{"type":"string","nullable":true},"comment":{"anyOf":[{"$ref":"node#/definitions/CommentInfo","type":"object","nullable":true},{"type":"null"}]},"commentId":{"type":"string","nullable":true},"remoteNodeName":{"type":"string","nullable":true},"remoteFullName":{"type":"string","nullable":true},"remotePostingId":{"type":"string","nullable":true},"remoteCommentId":{"type":"string","nullable":true},"remoteMediaId":{"type":"string","nullable":true},"operations":{"anyOf":[{"$ref":"node#/definitions/StoryOperations","type":"object","nullable":true},{"type":"null"}]}},"required":["id","feedName","storyType","createdAt","publishedAt","moment"],"additionalProperties":false};

function validate197(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((((((data.id === undefined) && (missing0 = "id")) || ((data.feedName === undefined) && (missing0 = "feedName"))) || ((data.storyType === undefined) && (missing0 = "storyType"))) || ((data.createdAt === undefined) && (missing0 = "createdAt"))) || ((data.publishedAt === undefined) && (missing0 = "publishedAt"))) || ((data.moment === undefined) && (missing0 = "moment"))){
validate197.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(func2.call(schema226.properties, key0))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.id !== undefined){
let data0 = data.id;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate197.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["id"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedName !== undefined){
let data1 = data.feedName;
const _errs4 = errors;
if(typeof data1 !== "string"){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(typeof data1 === "string"){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else {
validate197.errors = [{instancePath:instancePath+"/feedName",schemaPath:"#/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["feedName"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.storyType !== undefined){
let data2 = data.storyType;
const _errs6 = errors;
if(typeof data2 !== "string"){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(typeof data2 === "string"){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 == "number" || dataType2 == "boolean"){
coerced2 = "" + data2;
}
else if(data2 === null){
coerced2 = "";
}
else {
validate197.errors = [{instancePath:instancePath+"/storyType",schemaPath:"#/properties/storyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["storyType"] = coerced2;
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.createdAt !== undefined){
let data3 = data.createdAt;
const _errs8 = errors;
if(!(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))){
let dataType3 = typeof data3;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType3 = typeof data3;
if(((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3))){
coerced3 = data3;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data3 === null
              || (dataType3 === "string" && data3 && data3 == +data3 && !(data3 % 1))){
coerced3 = +data3;
}
else {
validate197.errors = [{instancePath:instancePath+"/createdAt",schemaPath:"#/properties/createdAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data3 = coerced3;
if(data !== undefined){
data["createdAt"] = coerced3;
}
}
}
var valid0 = _errs8 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.publishedAt !== undefined){
let data4 = data.publishedAt;
const _errs10 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType4 = typeof data4;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType4 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced4 = data4;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data4 === null
              || (dataType4 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced4 = +data4;
}
else {
validate197.errors = [{instancePath:instancePath+"/publishedAt",schemaPath:"#/properties/publishedAt/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data4 = coerced4;
if(data !== undefined){
data["publishedAt"] = coerced4;
}
}
}
var valid0 = _errs10 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.pinned !== undefined){
let data5 = data.pinned;
const _errs12 = errors;
if((typeof data5 !== "boolean") && (data5 !== null)){
let dataType5 = typeof data5;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType5 = typeof data5;
if((typeof data5 === "boolean") && (data5 === null)){
coerced5 = data5;
}
}
if(!(coerced5 !== undefined)){
if(data5 === "false" || data5 === 0 || data5 === null){
coerced5 = false;
}
else if(data5 === "true" || data5 === 1){
coerced5 = true;
}
else if(data5 === "" || data5 === 0 || data5 === false){
coerced5 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/pinned",schemaPath:"#/properties/pinned/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced5 !== undefined){
data5 = coerced5;
if(data !== undefined){
data["pinned"] = coerced5;
}
}
}
var valid0 = _errs12 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.moment !== undefined){
let data6 = data.moment;
const _errs15 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType6 = typeof data6;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType6 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced6 = data6;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data6 === null
              || (dataType6 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced6 = +data6;
}
else {
validate197.errors = [{instancePath:instancePath+"/moment",schemaPath:"#/properties/moment/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced6 !== undefined){
data6 = coerced6;
if(data !== undefined){
data["moment"] = coerced6;
}
}
}
var valid0 = _errs15 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.viewed !== undefined){
let data7 = data.viewed;
const _errs17 = errors;
if((typeof data7 !== "boolean") && (data7 !== null)){
let dataType7 = typeof data7;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data7) && data7.length == 1){
data7 = data7[0];
dataType7 = typeof data7;
if((typeof data7 === "boolean") && (data7 === null)){
coerced7 = data7;
}
}
if(!(coerced7 !== undefined)){
if(data7 === "false" || data7 === 0 || data7 === null){
coerced7 = false;
}
else if(data7 === "true" || data7 === 1){
coerced7 = true;
}
else if(data7 === "" || data7 === 0 || data7 === false){
coerced7 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/viewed",schemaPath:"#/properties/viewed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced7 !== undefined){
data7 = coerced7;
if(data !== undefined){
data["viewed"] = coerced7;
}
}
}
var valid0 = _errs17 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.read !== undefined){
let data8 = data.read;
const _errs20 = errors;
if((typeof data8 !== "boolean") && (data8 !== null)){
let dataType8 = typeof data8;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data8) && data8.length == 1){
data8 = data8[0];
dataType8 = typeof data8;
if((typeof data8 === "boolean") && (data8 === null)){
coerced8 = data8;
}
}
if(!(coerced8 !== undefined)){
if(data8 === "false" || data8 === 0 || data8 === null){
coerced8 = false;
}
else if(data8 === "true" || data8 === 1){
coerced8 = true;
}
else if(data8 === "" || data8 === 0 || data8 === false){
coerced8 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/read",schemaPath:"#/properties/read/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced8 !== undefined){
data8 = coerced8;
if(data !== undefined){
data["read"] = coerced8;
}
}
}
var valid0 = _errs20 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.satisfied !== undefined){
let data9 = data.satisfied;
const _errs23 = errors;
if((typeof data9 !== "boolean") && (data9 !== null)){
let dataType9 = typeof data9;
let coerced9 = undefined;
if(dataType9 == 'object' && Array.isArray(data9) && data9.length == 1){
data9 = data9[0];
dataType9 = typeof data9;
if((typeof data9 === "boolean") && (data9 === null)){
coerced9 = data9;
}
}
if(!(coerced9 !== undefined)){
if(data9 === "false" || data9 === 0 || data9 === null){
coerced9 = false;
}
else if(data9 === "true" || data9 === 1){
coerced9 = true;
}
else if(data9 === "" || data9 === 0 || data9 === false){
coerced9 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/satisfied",schemaPath:"#/properties/satisfied/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];
return false;
}
}
if(coerced9 !== undefined){
data9 = coerced9;
if(data !== undefined){
data["satisfied"] = coerced9;
}
}
}
var valid0 = _errs23 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.summaryNodeName !== undefined){
let data10 = data.summaryNodeName;
const _errs26 = errors;
if((typeof data10 !== "string") && (data10 !== null)){
let dataType10 = typeof data10;
let coerced10 = undefined;
if(dataType10 == 'object' && Array.isArray(data10) && data10.length == 1){
data10 = data10[0];
dataType10 = typeof data10;
if((typeof data10 === "string") && (data10 === null)){
coerced10 = data10;
}
}
if(!(coerced10 !== undefined)){
if(dataType10 == "number" || dataType10 == "boolean"){
coerced10 = "" + data10;
}
else if(data10 === null){
coerced10 = "";
}
else if(data10 === "" || data10 === 0 || data10 === false){
coerced10 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/summaryNodeName",schemaPath:"#/properties/summaryNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced10 !== undefined){
data10 = coerced10;
if(data !== undefined){
data["summaryNodeName"] = coerced10;
}
}
}
var valid0 = _errs26 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.summaryFullName !== undefined){
let data11 = data.summaryFullName;
const _errs29 = errors;
if((typeof data11 !== "string") && (data11 !== null)){
let dataType11 = typeof data11;
let coerced11 = undefined;
if(dataType11 == 'object' && Array.isArray(data11) && data11.length == 1){
data11 = data11[0];
dataType11 = typeof data11;
if((typeof data11 === "string") && (data11 === null)){
coerced11 = data11;
}
}
if(!(coerced11 !== undefined)){
if(dataType11 == "number" || dataType11 == "boolean"){
coerced11 = "" + data11;
}
else if(data11 === null){
coerced11 = "";
}
else if(data11 === "" || data11 === 0 || data11 === false){
coerced11 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/summaryFullName",schemaPath:"#/properties/summaryFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced11 !== undefined){
data11 = coerced11;
if(data !== undefined){
data["summaryFullName"] = coerced11;
}
}
}
var valid0 = _errs29 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.summaryAvatar !== undefined){
let data12 = data.summaryAvatar;
const _errs32 = errors;
const _errs33 = errors;
let valid1 = false;
const _errs34 = errors;
if((!(data12 && typeof data12 == "object" && !Array.isArray(data12))) && (data12 !== null)){
let dataType12 = typeof data12;
let coerced12 = undefined;
if(dataType12 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType12 = typeof data12;
if((data12 && typeof data12 == "object" && !Array.isArray(data12)) && (data12 === null)){
coerced12 = data12;
}
}
if(!(coerced12 !== undefined)){
if(data12 === "" || data12 === 0 || data12 === false){
coerced12 = null;
}
else {
const err0 = {instancePath:instancePath+"/summaryAvatar",schemaPath:"#/properties/summaryAvatar/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced12 !== undefined){
data12 = coerced12;
if(data !== undefined){
data["summaryAvatar"] = coerced12;
}
}
}
const _errs35 = errors;
if(errors === _errs35){
if(data12 && typeof data12 == "object" && !Array.isArray(data12)){
let missing1;
if(((data12.mediaId === undefined) && (missing1 = "mediaId")) || ((data12.path === undefined) && (missing1 = "path"))){
const err1 = {instancePath:instancePath+"/summaryAvatar",schemaPath:"node#/definitions/AvatarImage/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
else {
const _errs37 = errors;
for(const key1 in data12){
if(!(((((key1 === "mediaId") || (key1 === "path")) || (key1 === "width")) || (key1 === "height")) || (key1 === "shape"))){
delete data12[key1];
}
}
if(_errs37 === errors){
if(data12.mediaId !== undefined){
let data13 = data12.mediaId;
const _errs38 = errors;
if(typeof data13 !== "string"){
let dataType13 = typeof data13;
let coerced13 = undefined;
if(dataType13 == 'object' && Array.isArray(data13) && data13.length == 1){
data13 = data13[0];
dataType13 = typeof data13;
if(typeof data13 === "string"){
coerced13 = data13;
}
}
if(!(coerced13 !== undefined)){
if(dataType13 == "number" || dataType13 == "boolean"){
coerced13 = "" + data13;
}
else if(data13 === null){
coerced13 = "";
}
else {
const err2 = {instancePath:instancePath+"/summaryAvatar/mediaId",schemaPath:"node#/definitions/AvatarImage/properties/mediaId/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
}
}
if(coerced13 !== undefined){
data13 = coerced13;
if(data12 !== undefined){
data12["mediaId"] = coerced13;
}
}
}
var valid3 = _errs38 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data12.path !== undefined){
let data14 = data12.path;
const _errs40 = errors;
if(typeof data14 !== "string"){
let dataType14 = typeof data14;
let coerced14 = undefined;
if(dataType14 == 'object' && Array.isArray(data14) && data14.length == 1){
data14 = data14[0];
dataType14 = typeof data14;
if(typeof data14 === "string"){
coerced14 = data14;
}
}
if(!(coerced14 !== undefined)){
if(dataType14 == "number" || dataType14 == "boolean"){
coerced14 = "" + data14;
}
else if(data14 === null){
coerced14 = "";
}
else {
const err3 = {instancePath:instancePath+"/summaryAvatar/path",schemaPath:"node#/definitions/AvatarImage/properties/path/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced14 !== undefined){
data14 = coerced14;
if(data12 !== undefined){
data12["path"] = coerced14;
}
}
}
var valid3 = _errs40 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data12.width !== undefined){
let data15 = data12.width;
const _errs42 = errors;
if((!(((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))) && (data15 !== null)){
let dataType15 = typeof data15;
let coerced15 = undefined;
if(dataType15 == 'object' && Array.isArray(data15) && data15.length == 1){
data15 = data15[0];
dataType15 = typeof data15;
if((((typeof data15 == "number") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15))) && (data15 === null)){
coerced15 = data15;
}
}
if(!(coerced15 !== undefined)){
if(dataType15 === "boolean" || data15 === null
              || (dataType15 === "string" && data15 && data15 == +data15 && !(data15 % 1))){
coerced15 = +data15;
}
else if(data15 === "" || data15 === 0 || data15 === false){
coerced15 = null;
}
else {
const err4 = {instancePath:instancePath+"/summaryAvatar/width",schemaPath:"node#/definitions/AvatarImage/properties/width/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
}
if(coerced15 !== undefined){
data15 = coerced15;
if(data12 !== undefined){
data12["width"] = coerced15;
}
}
}
var valid3 = _errs42 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data12.height !== undefined){
let data16 = data12.height;
const _errs45 = errors;
if((!(((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))) && (data16 !== null)){
let dataType16 = typeof data16;
let coerced16 = undefined;
if(dataType16 == 'object' && Array.isArray(data16) && data16.length == 1){
data16 = data16[0];
dataType16 = typeof data16;
if((((typeof data16 == "number") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16))) && (data16 === null)){
coerced16 = data16;
}
}
if(!(coerced16 !== undefined)){
if(dataType16 === "boolean" || data16 === null
              || (dataType16 === "string" && data16 && data16 == +data16 && !(data16 % 1))){
coerced16 = +data16;
}
else if(data16 === "" || data16 === 0 || data16 === false){
coerced16 = null;
}
else {
const err5 = {instancePath:instancePath+"/summaryAvatar/height",schemaPath:"node#/definitions/AvatarImage/properties/height/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced16 !== undefined){
data16 = coerced16;
if(data12 !== undefined){
data12["height"] = coerced16;
}
}
}
var valid3 = _errs45 === errors;
}
else {
var valid3 = true;
}
if(valid3){
if(data12.shape !== undefined){
let data17 = data12.shape;
const _errs48 = errors;
if((typeof data17 !== "string") && (data17 !== null)){
let dataType17 = typeof data17;
let coerced17 = undefined;
if(dataType17 == 'object' && Array.isArray(data17) && data17.length == 1){
data17 = data17[0];
dataType17 = typeof data17;
if((typeof data17 === "string") && (data17 === null)){
coerced17 = data17;
}
}
if(!(coerced17 !== undefined)){
if(dataType17 == "number" || dataType17 == "boolean"){
coerced17 = "" + data17;
}
else if(data17 === null){
coerced17 = "";
}
else if(data17 === "" || data17 === 0 || data17 === false){
coerced17 = null;
}
else {
const err6 = {instancePath:instancePath+"/summaryAvatar/shape",schemaPath:"node#/definitions/AvatarImage/properties/shape/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced17 !== undefined){
data17 = coerced17;
if(data12 !== undefined){
data12["shape"] = coerced17;
}
}
}
var valid3 = _errs48 === errors;
}
else {
var valid3 = true;
}
}
}
}
}
}
}
}
else {
const err7 = {instancePath:instancePath+"/summaryAvatar",schemaPath:"node#/definitions/AvatarImage/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
var _valid0 = _errs34 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs53 = errors;
if(data12 !== null){
let dataType18 = typeof data12;
let coerced18 = undefined;
if(dataType18 == 'object' && Array.isArray(data12) && data12.length == 1){
data12 = data12[0];
dataType18 = typeof data12;
if(data12 === null){
coerced18 = data12;
}
}
if(!(coerced18 !== undefined)){
if(data12 === "" || data12 === 0 || data12 === false){
coerced18 = null;
}
else {
const err8 = {instancePath:instancePath+"/summaryAvatar",schemaPath:"#/properties/summaryAvatar/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
if(coerced18 !== undefined){
data12 = coerced18;
if(data !== undefined){
data["summaryAvatar"] = coerced18;
}
}
}
var _valid0 = _errs53 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err9 = {instancePath:instancePath+"/summaryAvatar",schemaPath:"#/properties/summaryAvatar/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
validate197.errors = vErrors;
return false;
}
else {
errors = _errs33;
if(vErrors !== null){
if(_errs33){
vErrors.length = _errs33;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs32 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.summary !== undefined){
let data18 = data.summary;
const _errs55 = errors;
if((typeof data18 !== "string") && (data18 !== null)){
let dataType19 = typeof data18;
let coerced19 = undefined;
if(dataType19 == 'object' && Array.isArray(data18) && data18.length == 1){
data18 = data18[0];
dataType19 = typeof data18;
if((typeof data18 === "string") && (data18 === null)){
coerced19 = data18;
}
}
if(!(coerced19 !== undefined)){
if(dataType19 == "number" || dataType19 == "boolean"){
coerced19 = "" + data18;
}
else if(data18 === null){
coerced19 = "";
}
else if(data18 === "" || data18 === 0 || data18 === false){
coerced19 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/summary",schemaPath:"#/properties/summary/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced19 !== undefined){
data18 = coerced19;
if(data !== undefined){
data["summary"] = coerced19;
}
}
}
var valid0 = _errs55 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.summaryData !== undefined){
let data19 = data.summaryData;
const _errs58 = errors;
const _errs59 = errors;
let valid4 = false;
const _errs60 = errors;
if((!(data19 && typeof data19 == "object" && !Array.isArray(data19))) && (data19 !== null)){
let dataType20 = typeof data19;
let coerced20 = undefined;
if(dataType20 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType20 = typeof data19;
if((data19 && typeof data19 == "object" && !Array.isArray(data19)) && (data19 === null)){
coerced20 = data19;
}
}
if(!(coerced20 !== undefined)){
if(data19 === "" || data19 === 0 || data19 === false){
coerced20 = null;
}
else {
const err10 = {instancePath:instancePath+"/summaryData",schemaPath:"#/properties/summaryData/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
}
}
if(coerced20 !== undefined){
data19 = coerced20;
if(data !== undefined){
data["summaryData"] = coerced20;
}
}
}
if(!(validate172(data19, {instancePath:instancePath+"/summaryData",parentData:data,parentDataProperty:"summaryData",rootData}))){
vErrors = vErrors === null ? validate172.errors : vErrors.concat(validate172.errors);
errors = vErrors.length;
}
var _valid1 = _errs60 === errors;
valid4 = valid4 || _valid1;
if(!valid4){
const _errs63 = errors;
if(data19 !== null){
let dataType21 = typeof data19;
let coerced21 = undefined;
if(dataType21 == 'object' && Array.isArray(data19) && data19.length == 1){
data19 = data19[0];
dataType21 = typeof data19;
if(data19 === null){
coerced21 = data19;
}
}
if(!(coerced21 !== undefined)){
if(data19 === "" || data19 === 0 || data19 === false){
coerced21 = null;
}
else {
const err11 = {instancePath:instancePath+"/summaryData",schemaPath:"#/properties/summaryData/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err11];
}
else {
vErrors.push(err11);
}
errors++;
}
}
if(coerced21 !== undefined){
data19 = coerced21;
if(data !== undefined){
data["summaryData"] = coerced21;
}
}
}
var _valid1 = _errs63 === errors;
valid4 = valid4 || _valid1;
}
if(!valid4){
const err12 = {instancePath:instancePath+"/summaryData",schemaPath:"#/properties/summaryData/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err12];
}
else {
vErrors.push(err12);
}
errors++;
validate197.errors = vErrors;
return false;
}
else {
errors = _errs59;
if(vErrors !== null){
if(_errs59){
vErrors.length = _errs59;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs58 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.posting !== undefined){
let data20 = data.posting;
const _errs65 = errors;
const _errs66 = errors;
let valid5 = false;
const _errs67 = errors;
if((!(data20 && typeof data20 == "object" && !Array.isArray(data20))) && (data20 !== null)){
let dataType22 = typeof data20;
let coerced22 = undefined;
if(dataType22 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType22 = typeof data20;
if((data20 && typeof data20 == "object" && !Array.isArray(data20)) && (data20 === null)){
coerced22 = data20;
}
}
if(!(coerced22 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced22 = null;
}
else {
const err13 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err13];
}
else {
vErrors.push(err13);
}
errors++;
}
}
if(coerced22 !== undefined){
data20 = coerced22;
if(data !== undefined){
data["posting"] = coerced22;
}
}
}
if(!(validate154(data20, {instancePath:instancePath+"/posting",parentData:data,parentDataProperty:"posting",rootData}))){
vErrors = vErrors === null ? validate154.errors : vErrors.concat(validate154.errors);
errors = vErrors.length;
}
var _valid2 = _errs67 === errors;
valid5 = valid5 || _valid2;
if(!valid5){
const _errs70 = errors;
if(data20 !== null){
let dataType23 = typeof data20;
let coerced23 = undefined;
if(dataType23 == 'object' && Array.isArray(data20) && data20.length == 1){
data20 = data20[0];
dataType23 = typeof data20;
if(data20 === null){
coerced23 = data20;
}
}
if(!(coerced23 !== undefined)){
if(data20 === "" || data20 === 0 || data20 === false){
coerced23 = null;
}
else {
const err14 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err14];
}
else {
vErrors.push(err14);
}
errors++;
}
}
if(coerced23 !== undefined){
data20 = coerced23;
if(data !== undefined){
data["posting"] = coerced23;
}
}
}
var _valid2 = _errs70 === errors;
valid5 = valid5 || _valid2;
}
if(!valid5){
const err15 = {instancePath:instancePath+"/posting",schemaPath:"#/properties/posting/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err15];
}
else {
vErrors.push(err15);
}
errors++;
validate197.errors = vErrors;
return false;
}
else {
errors = _errs66;
if(vErrors !== null){
if(_errs66){
vErrors.length = _errs66;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs65 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.postingId !== undefined){
let data21 = data.postingId;
const _errs72 = errors;
if((typeof data21 !== "string") && (data21 !== null)){
let dataType24 = typeof data21;
let coerced24 = undefined;
if(dataType24 == 'object' && Array.isArray(data21) && data21.length == 1){
data21 = data21[0];
dataType24 = typeof data21;
if((typeof data21 === "string") && (data21 === null)){
coerced24 = data21;
}
}
if(!(coerced24 !== undefined)){
if(dataType24 == "number" || dataType24 == "boolean"){
coerced24 = "" + data21;
}
else if(data21 === null){
coerced24 = "";
}
else if(data21 === "" || data21 === 0 || data21 === false){
coerced24 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/postingId",schemaPath:"#/properties/postingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced24 !== undefined){
data21 = coerced24;
if(data !== undefined){
data["postingId"] = coerced24;
}
}
}
var valid0 = _errs72 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.comment !== undefined){
let data22 = data.comment;
const _errs75 = errors;
const _errs76 = errors;
let valid6 = false;
const _errs77 = errors;
if((!(data22 && typeof data22 == "object" && !Array.isArray(data22))) && (data22 !== null)){
let dataType25 = typeof data22;
let coerced25 = undefined;
if(dataType25 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType25 = typeof data22;
if((data22 && typeof data22 == "object" && !Array.isArray(data22)) && (data22 === null)){
coerced25 = data22;
}
}
if(!(coerced25 !== undefined)){
if(data22 === "" || data22 === 0 || data22 === false){
coerced25 = null;
}
else {
const err16 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err16];
}
else {
vErrors.push(err16);
}
errors++;
}
}
if(coerced25 !== undefined){
data22 = coerced25;
if(data !== undefined){
data["comment"] = coerced25;
}
}
}
if(!(validate178(data22, {instancePath:instancePath+"/comment",parentData:data,parentDataProperty:"comment",rootData}))){
vErrors = vErrors === null ? validate178.errors : vErrors.concat(validate178.errors);
errors = vErrors.length;
}
var _valid3 = _errs77 === errors;
valid6 = valid6 || _valid3;
if(!valid6){
const _errs80 = errors;
if(data22 !== null){
let dataType26 = typeof data22;
let coerced26 = undefined;
if(dataType26 == 'object' && Array.isArray(data22) && data22.length == 1){
data22 = data22[0];
dataType26 = typeof data22;
if(data22 === null){
coerced26 = data22;
}
}
if(!(coerced26 !== undefined)){
if(data22 === "" || data22 === 0 || data22 === false){
coerced26 = null;
}
else {
const err17 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err17];
}
else {
vErrors.push(err17);
}
errors++;
}
}
if(coerced26 !== undefined){
data22 = coerced26;
if(data !== undefined){
data["comment"] = coerced26;
}
}
}
var _valid3 = _errs80 === errors;
valid6 = valid6 || _valid3;
}
if(!valid6){
const err18 = {instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err18];
}
else {
vErrors.push(err18);
}
errors++;
validate197.errors = vErrors;
return false;
}
else {
errors = _errs76;
if(vErrors !== null){
if(_errs76){
vErrors.length = _errs76;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs75 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.commentId !== undefined){
let data23 = data.commentId;
const _errs82 = errors;
if((typeof data23 !== "string") && (data23 !== null)){
let dataType27 = typeof data23;
let coerced27 = undefined;
if(dataType27 == 'object' && Array.isArray(data23) && data23.length == 1){
data23 = data23[0];
dataType27 = typeof data23;
if((typeof data23 === "string") && (data23 === null)){
coerced27 = data23;
}
}
if(!(coerced27 !== undefined)){
if(dataType27 == "number" || dataType27 == "boolean"){
coerced27 = "" + data23;
}
else if(data23 === null){
coerced27 = "";
}
else if(data23 === "" || data23 === 0 || data23 === false){
coerced27 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/commentId",schemaPath:"#/properties/commentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced27 !== undefined){
data23 = coerced27;
if(data !== undefined){
data["commentId"] = coerced27;
}
}
}
var valid0 = _errs82 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteNodeName !== undefined){
let data24 = data.remoteNodeName;
const _errs85 = errors;
if((typeof data24 !== "string") && (data24 !== null)){
let dataType28 = typeof data24;
let coerced28 = undefined;
if(dataType28 == 'object' && Array.isArray(data24) && data24.length == 1){
data24 = data24[0];
dataType28 = typeof data24;
if((typeof data24 === "string") && (data24 === null)){
coerced28 = data24;
}
}
if(!(coerced28 !== undefined)){
if(dataType28 == "number" || dataType28 == "boolean"){
coerced28 = "" + data24;
}
else if(data24 === null){
coerced28 = "";
}
else if(data24 === "" || data24 === 0 || data24 === false){
coerced28 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/remoteNodeName",schemaPath:"#/properties/remoteNodeName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced28 !== undefined){
data24 = coerced28;
if(data !== undefined){
data["remoteNodeName"] = coerced28;
}
}
}
var valid0 = _errs85 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteFullName !== undefined){
let data25 = data.remoteFullName;
const _errs88 = errors;
if((typeof data25 !== "string") && (data25 !== null)){
let dataType29 = typeof data25;
let coerced29 = undefined;
if(dataType29 == 'object' && Array.isArray(data25) && data25.length == 1){
data25 = data25[0];
dataType29 = typeof data25;
if((typeof data25 === "string") && (data25 === null)){
coerced29 = data25;
}
}
if(!(coerced29 !== undefined)){
if(dataType29 == "number" || dataType29 == "boolean"){
coerced29 = "" + data25;
}
else if(data25 === null){
coerced29 = "";
}
else if(data25 === "" || data25 === 0 || data25 === false){
coerced29 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/remoteFullName",schemaPath:"#/properties/remoteFullName/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced29 !== undefined){
data25 = coerced29;
if(data !== undefined){
data["remoteFullName"] = coerced29;
}
}
}
var valid0 = _errs88 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remotePostingId !== undefined){
let data26 = data.remotePostingId;
const _errs91 = errors;
if((typeof data26 !== "string") && (data26 !== null)){
let dataType30 = typeof data26;
let coerced30 = undefined;
if(dataType30 == 'object' && Array.isArray(data26) && data26.length == 1){
data26 = data26[0];
dataType30 = typeof data26;
if((typeof data26 === "string") && (data26 === null)){
coerced30 = data26;
}
}
if(!(coerced30 !== undefined)){
if(dataType30 == "number" || dataType30 == "boolean"){
coerced30 = "" + data26;
}
else if(data26 === null){
coerced30 = "";
}
else if(data26 === "" || data26 === 0 || data26 === false){
coerced30 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/remotePostingId",schemaPath:"#/properties/remotePostingId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced30 !== undefined){
data26 = coerced30;
if(data !== undefined){
data["remotePostingId"] = coerced30;
}
}
}
var valid0 = _errs91 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteCommentId !== undefined){
let data27 = data.remoteCommentId;
const _errs94 = errors;
if((typeof data27 !== "string") && (data27 !== null)){
let dataType31 = typeof data27;
let coerced31 = undefined;
if(dataType31 == 'object' && Array.isArray(data27) && data27.length == 1){
data27 = data27[0];
dataType31 = typeof data27;
if((typeof data27 === "string") && (data27 === null)){
coerced31 = data27;
}
}
if(!(coerced31 !== undefined)){
if(dataType31 == "number" || dataType31 == "boolean"){
coerced31 = "" + data27;
}
else if(data27 === null){
coerced31 = "";
}
else if(data27 === "" || data27 === 0 || data27 === false){
coerced31 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/remoteCommentId",schemaPath:"#/properties/remoteCommentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced31 !== undefined){
data27 = coerced31;
if(data !== undefined){
data["remoteCommentId"] = coerced31;
}
}
}
var valid0 = _errs94 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.remoteMediaId !== undefined){
let data28 = data.remoteMediaId;
const _errs97 = errors;
if((typeof data28 !== "string") && (data28 !== null)){
let dataType32 = typeof data28;
let coerced32 = undefined;
if(dataType32 == 'object' && Array.isArray(data28) && data28.length == 1){
data28 = data28[0];
dataType32 = typeof data28;
if((typeof data28 === "string") && (data28 === null)){
coerced32 = data28;
}
}
if(!(coerced32 !== undefined)){
if(dataType32 == "number" || dataType32 == "boolean"){
coerced32 = "" + data28;
}
else if(data28 === null){
coerced32 = "";
}
else if(data28 === "" || data28 === 0 || data28 === false){
coerced32 = null;
}
else {
validate197.errors = [{instancePath:instancePath+"/remoteMediaId",schemaPath:"#/properties/remoteMediaId/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced32 !== undefined){
data28 = coerced32;
if(data !== undefined){
data["remoteMediaId"] = coerced32;
}
}
}
var valid0 = _errs97 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.operations !== undefined){
let data29 = data.operations;
const _errs100 = errors;
const _errs101 = errors;
let valid7 = false;
const _errs102 = errors;
if((!(data29 && typeof data29 == "object" && !Array.isArray(data29))) && (data29 !== null)){
let dataType33 = typeof data29;
let coerced33 = undefined;
if(dataType33 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType33 = typeof data29;
if((data29 && typeof data29 == "object" && !Array.isArray(data29)) && (data29 === null)){
coerced33 = data29;
}
}
if(!(coerced33 !== undefined)){
if(data29 === "" || data29 === 0 || data29 === false){
coerced33 = null;
}
else {
const err19 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err19];
}
else {
vErrors.push(err19);
}
errors++;
}
}
if(coerced33 !== undefined){
data29 = coerced33;
if(data !== undefined){
data["operations"] = coerced33;
}
}
}
const _errs103 = errors;
if(errors === _errs103){
if(data29 && typeof data29 == "object" && !Array.isArray(data29)){
const _errs105 = errors;
for(const key2 in data29){
if(!((key2 === "edit") || (key2 === "delete"))){
delete data29[key2];
}
}
if(_errs105 === errors){
if(data29.edit !== undefined){
let data30 = data29.edit;
const _errs106 = errors;
if((typeof data30 !== "string") && (data30 !== null)){
let dataType34 = typeof data30;
let coerced34 = undefined;
if(dataType34 == 'object' && Array.isArray(data30) && data30.length == 1){
data30 = data30[0];
dataType34 = typeof data30;
if((typeof data30 === "string") && (data30 === null)){
coerced34 = data30;
}
}
if(!(coerced34 !== undefined)){
if(dataType34 == "number" || dataType34 == "boolean"){
coerced34 = "" + data30;
}
else if(data30 === null){
coerced34 = "";
}
else if(data30 === "" || data30 === 0 || data30 === false){
coerced34 = null;
}
else {
const err20 = {instancePath:instancePath+"/operations/edit",schemaPath:"node#/definitions/StoryOperations/properties/edit/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err20];
}
else {
vErrors.push(err20);
}
errors++;
}
}
if(coerced34 !== undefined){
data30 = coerced34;
if(data29 !== undefined){
data29["edit"] = coerced34;
}
}
}
var valid9 = _errs106 === errors;
}
else {
var valid9 = true;
}
if(valid9){
if(data29.delete !== undefined){
let data31 = data29.delete;
const _errs109 = errors;
if((typeof data31 !== "string") && (data31 !== null)){
let dataType35 = typeof data31;
let coerced35 = undefined;
if(dataType35 == 'object' && Array.isArray(data31) && data31.length == 1){
data31 = data31[0];
dataType35 = typeof data31;
if((typeof data31 === "string") && (data31 === null)){
coerced35 = data31;
}
}
if(!(coerced35 !== undefined)){
if(dataType35 == "number" || dataType35 == "boolean"){
coerced35 = "" + data31;
}
else if(data31 === null){
coerced35 = "";
}
else if(data31 === "" || data31 === 0 || data31 === false){
coerced35 = null;
}
else {
const err21 = {instancePath:instancePath+"/operations/delete",schemaPath:"node#/definitions/StoryOperations/properties/delete/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err21];
}
else {
vErrors.push(err21);
}
errors++;
}
}
if(coerced35 !== undefined){
data31 = coerced35;
if(data29 !== undefined){
data29["delete"] = coerced35;
}
}
}
var valid9 = _errs109 === errors;
}
else {
var valid9 = true;
}
}
}
}
else {
const err22 = {instancePath:instancePath+"/operations",schemaPath:"node#/definitions/StoryOperations/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err22];
}
else {
vErrors.push(err22);
}
errors++;
}
}
var _valid4 = _errs102 === errors;
valid7 = valid7 || _valid4;
if(!valid7){
const _errs114 = errors;
if(data29 !== null){
let dataType36 = typeof data29;
let coerced36 = undefined;
if(dataType36 == 'object' && Array.isArray(data29) && data29.length == 1){
data29 = data29[0];
dataType36 = typeof data29;
if(data29 === null){
coerced36 = data29;
}
}
if(!(coerced36 !== undefined)){
if(data29 === "" || data29 === 0 || data29 === false){
coerced36 = null;
}
else {
const err23 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err23];
}
else {
vErrors.push(err23);
}
errors++;
}
}
if(coerced36 !== undefined){
data29 = coerced36;
if(data !== undefined){
data["operations"] = coerced36;
}
}
}
var _valid4 = _errs114 === errors;
valid7 = valid7 || _valid4;
}
if(!valid7){
const err24 = {instancePath:instancePath+"/operations",schemaPath:"#/properties/operations/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err24];
}
else {
vErrors.push(err24);
}
errors++;
validate197.errors = vErrors;
return false;
}
else {
errors = _errs101;
if(vErrors !== null){
if(_errs101){
vErrors.length = _errs101;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs100 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
else {
validate197.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate197.errors = vErrors;
return errors === 0;
}

export const CommentCreated = validate201;
const schema229 = {"type":"object","properties":{"comment":{"$ref":"node#/definitions/CommentInfo"},"total":{"type":"integer"}},"required":["comment","total"],"additionalProperties":false};

function validate201(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if(((data.comment === undefined) && (missing0 = "comment")) || ((data.total === undefined) && (missing0 = "total"))){
validate201.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((key0 === "comment") || (key0 === "total"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.comment !== undefined){
const _errs2 = errors;
if(!(validate178(data.comment, {instancePath:instancePath+"/comment",parentData:data,parentDataProperty:"comment",rootData}))){
vErrors = vErrors === null ? validate178.errors : vErrors.concat(validate178.errors);
errors = vErrors.length;
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.total !== undefined){
let data1 = data.total;
const _errs3 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType0 = typeof data1;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType0 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced0 = data1;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data1 === null
              || (dataType0 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced0 = +data1;
}
else {
validate201.errors = [{instancePath:instancePath+"/total",schemaPath:"#/properties/total/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data1 = coerced0;
if(data !== undefined){
data["total"] = coerced0;
}
}
}
var valid0 = _errs3 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
else {
validate201.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate201.errors = vErrors;
return errors === 0;
}

export const FeedSliceInfo = validate203;
const schema230 = {"type":"object","properties":{"before":{"type":"integer"},"after":{"type":"integer"},"stories":{"type":"array","items":{"$ref":"node#/definitions/StoryInfo"}},"totalInPast":{"type":"integer"},"totalInFuture":{"type":"integer"}},"required":["before","after","stories","totalInPast","totalInFuture"],"additionalProperties":false};

function validate203(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((((((data.before === undefined) && (missing0 = "before")) || ((data.after === undefined) && (missing0 = "after"))) || ((data.stories === undefined) && (missing0 = "stories"))) || ((data.totalInPast === undefined) && (missing0 = "totalInPast"))) || ((data.totalInFuture === undefined) && (missing0 = "totalInFuture"))){
validate203.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!(((((key0 === "before") || (key0 === "after")) || (key0 === "stories")) || (key0 === "totalInPast")) || (key0 === "totalInFuture"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.before !== undefined){
let data0 = data.before;
const _errs2 = errors;
if(!(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0)))){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(((typeof data0 == "number") && (!(data0 % 1) && !isNaN(data0))) && (isFinite(data0))){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "boolean" || data0 === null
              || (dataType0 === "string" && data0 && data0 == +data0 && !(data0 % 1))){
coerced0 = +data0;
}
else {
validate203.errors = [{instancePath:instancePath+"/before",schemaPath:"#/properties/before/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["before"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.after !== undefined){
let data1 = data.after;
const _errs4 = errors;
if(!(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1)))){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if(((typeof data1 == "number") && (!(data1 % 1) && !isNaN(data1))) && (isFinite(data1))){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 === "boolean" || data1 === null
              || (dataType1 === "string" && data1 && data1 == +data1 && !(data1 % 1))){
coerced1 = +data1;
}
else {
validate203.errors = [{instancePath:instancePath+"/after",schemaPath:"#/properties/after/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["after"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.stories !== undefined){
let data2 = data.stories;
const _errs6 = errors;
if(!(Array.isArray(data2))){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if(Array.isArray(data2)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(dataType2 === "string" || dataType2 === "number"
              || dataType2 === "boolean" || data2 === null){
coerced2 = [data2];
}
else {
validate203.errors = [{instancePath:instancePath+"/stories",schemaPath:"#/properties/stories/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["stories"] = coerced2;
}
}
}
if(errors === _errs6){
if(Array.isArray(data2)){
var valid1 = true;
const len0 = data2.length;
for(let i0=0; i0<len0; i0++){
const _errs8 = errors;
if(!(validate197(data2[i0], {instancePath:instancePath+"/stories/" + i0,parentData:data2,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate197.errors : vErrors.concat(validate197.errors);
errors = vErrors.length;
}
var valid1 = _errs8 === errors;
if(!valid1){
break;
}
}
}
}
var valid0 = _errs6 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInPast !== undefined){
let data4 = data.totalInPast;
const _errs9 = errors;
if(!(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))){
let dataType3 = typeof data4;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType3 = typeof data4;
if(((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4))){
coerced3 = data4;
}
}
if(!(coerced3 !== undefined)){
if(dataType3 === "boolean" || data4 === null
              || (dataType3 === "string" && data4 && data4 == +data4 && !(data4 % 1))){
coerced3 = +data4;
}
else {
validate203.errors = [{instancePath:instancePath+"/totalInPast",schemaPath:"#/properties/totalInPast/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced3 !== undefined){
data4 = coerced3;
if(data !== undefined){
data["totalInPast"] = coerced3;
}
}
}
var valid0 = _errs9 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.totalInFuture !== undefined){
let data5 = data.totalInFuture;
const _errs11 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType4 = typeof data5;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType4 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced4 = data5;
}
}
if(!(coerced4 !== undefined)){
if(dataType4 === "boolean" || data5 === null
              || (dataType4 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced4 = +data5;
}
else {
validate203.errors = [{instancePath:instancePath+"/totalInFuture",schemaPath:"#/properties/totalInFuture/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];
return false;
}
}
if(coerced4 !== undefined){
data5 = coerced4;
if(data !== undefined){
data["totalInFuture"] = coerced4;
}
}
}
var valid0 = _errs11 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
}
else {
validate203.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate203.errors = vErrors;
return errors === 0;
}

export const PushContent = validate205;
const schema231 = {"type":"object","properties":{"type":{"type":"string"},"id":{"type":"string","nullable":true},"story":{"anyOf":[{"$ref":"node#/definitions/StoryInfo","type":"object","nullable":true},{"type":"null"}]},"feedStatus":{"anyOf":[{"$ref":"node#/definitions/FeedWithStatus","type":"object","nullable":true},{"type":"null"}]}},"required":["type"],"additionalProperties":false};

function validate205(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(errors === 0){
if(data && typeof data == "object" && !Array.isArray(data)){
let missing0;
if((data.type === undefined) && (missing0 = "type")){
validate205.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];
return false;
}
else {
const _errs1 = errors;
for(const key0 in data){
if(!((((key0 === "type") || (key0 === "id")) || (key0 === "story")) || (key0 === "feedStatus"))){
delete data[key0];
}
}
if(_errs1 === errors){
if(data.type !== undefined){
let data0 = data.type;
const _errs2 = errors;
if(typeof data0 !== "string"){
let dataType0 = typeof data0;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data0) && data0.length == 1){
data0 = data0[0];
dataType0 = typeof data0;
if(typeof data0 === "string"){
coerced0 = data0;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 == "number" || dataType0 == "boolean"){
coerced0 = "" + data0;
}
else if(data0 === null){
coerced0 = "";
}
else {
validate205.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced0 !== undefined){
data0 = coerced0;
if(data !== undefined){
data["type"] = coerced0;
}
}
}
var valid0 = _errs2 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.id !== undefined){
let data1 = data.id;
const _errs4 = errors;
if((typeof data1 !== "string") && (data1 !== null)){
let dataType1 = typeof data1;
let coerced1 = undefined;
if(dataType1 == 'object' && Array.isArray(data1) && data1.length == 1){
data1 = data1[0];
dataType1 = typeof data1;
if((typeof data1 === "string") && (data1 === null)){
coerced1 = data1;
}
}
if(!(coerced1 !== undefined)){
if(dataType1 == "number" || dataType1 == "boolean"){
coerced1 = "" + data1;
}
else if(data1 === null){
coerced1 = "";
}
else if(data1 === "" || data1 === 0 || data1 === false){
coerced1 = null;
}
else {
validate205.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];
return false;
}
}
if(coerced1 !== undefined){
data1 = coerced1;
if(data !== undefined){
data["id"] = coerced1;
}
}
}
var valid0 = _errs4 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.story !== undefined){
let data2 = data.story;
const _errs7 = errors;
const _errs8 = errors;
let valid1 = false;
const _errs9 = errors;
if((!(data2 && typeof data2 == "object" && !Array.isArray(data2))) && (data2 !== null)){
let dataType2 = typeof data2;
let coerced2 = undefined;
if(dataType2 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType2 = typeof data2;
if((data2 && typeof data2 == "object" && !Array.isArray(data2)) && (data2 === null)){
coerced2 = data2;
}
}
if(!(coerced2 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced2 = null;
}
else {
const err0 = {instancePath:instancePath+"/story",schemaPath:"#/properties/story/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err0];
}
else {
vErrors.push(err0);
}
errors++;
}
}
if(coerced2 !== undefined){
data2 = coerced2;
if(data !== undefined){
data["story"] = coerced2;
}
}
}
if(!(validate197(data2, {instancePath:instancePath+"/story",parentData:data,parentDataProperty:"story",rootData}))){
vErrors = vErrors === null ? validate197.errors : vErrors.concat(validate197.errors);
errors = vErrors.length;
}
var _valid0 = _errs9 === errors;
valid1 = valid1 || _valid0;
if(!valid1){
const _errs12 = errors;
if(data2 !== null){
let dataType3 = typeof data2;
let coerced3 = undefined;
if(dataType3 == 'object' && Array.isArray(data2) && data2.length == 1){
data2 = data2[0];
dataType3 = typeof data2;
if(data2 === null){
coerced3 = data2;
}
}
if(!(coerced3 !== undefined)){
if(data2 === "" || data2 === 0 || data2 === false){
coerced3 = null;
}
else {
const err1 = {instancePath:instancePath+"/story",schemaPath:"#/properties/story/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err1];
}
else {
vErrors.push(err1);
}
errors++;
}
}
if(coerced3 !== undefined){
data2 = coerced3;
if(data !== undefined){
data["story"] = coerced3;
}
}
}
var _valid0 = _errs12 === errors;
valid1 = valid1 || _valid0;
}
if(!valid1){
const err2 = {instancePath:instancePath+"/story",schemaPath:"#/properties/story/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err2];
}
else {
vErrors.push(err2);
}
errors++;
validate205.errors = vErrors;
return false;
}
else {
errors = _errs8;
if(vErrors !== null){
if(_errs8){
vErrors.length = _errs8;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs7 === errors;
}
else {
var valid0 = true;
}
if(valid0){
if(data.feedStatus !== undefined){
let data3 = data.feedStatus;
const _errs14 = errors;
const _errs15 = errors;
let valid2 = false;
const _errs16 = errors;
if((!(data3 && typeof data3 == "object" && !Array.isArray(data3))) && (data3 !== null)){
let dataType4 = typeof data3;
let coerced4 = undefined;
if(dataType4 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType4 = typeof data3;
if((data3 && typeof data3 == "object" && !Array.isArray(data3)) && (data3 === null)){
coerced4 = data3;
}
}
if(!(coerced4 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced4 = null;
}
else {
const err3 = {instancePath:instancePath+"/feedStatus",schemaPath:"#/properties/feedStatus/anyOf/0/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err3];
}
else {
vErrors.push(err3);
}
errors++;
}
}
if(coerced4 !== undefined){
data3 = coerced4;
if(data !== undefined){
data["feedStatus"] = coerced4;
}
}
}
const _errs17 = errors;
if(errors === _errs17){
if(data3 && typeof data3 == "object" && !Array.isArray(data3)){
let missing1;
if((((data3.feedName === undefined) && (missing1 = "feedName")) || ((data3.notViewed === undefined) && (missing1 = "notViewed"))) || ((data3.notRead === undefined) && (missing1 = "notRead"))){
const err4 = {instancePath:instancePath+"/feedStatus",schemaPath:"node#/definitions/FeedWithStatus/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};
if(vErrors === null){
vErrors = [err4];
}
else {
vErrors.push(err4);
}
errors++;
}
else {
const _errs19 = errors;
for(const key1 in data3){
if(!(((key1 === "feedName") || (key1 === "notViewed")) || (key1 === "notRead"))){
delete data3[key1];
}
}
if(_errs19 === errors){
if(data3.feedName !== undefined){
let data4 = data3.feedName;
const _errs20 = errors;
if(typeof data4 !== "string"){
let dataType5 = typeof data4;
let coerced5 = undefined;
if(dataType5 == 'object' && Array.isArray(data4) && data4.length == 1){
data4 = data4[0];
dataType5 = typeof data4;
if(typeof data4 === "string"){
coerced5 = data4;
}
}
if(!(coerced5 !== undefined)){
if(dataType5 == "number" || dataType5 == "boolean"){
coerced5 = "" + data4;
}
else if(data4 === null){
coerced5 = "";
}
else {
const err5 = {instancePath:instancePath+"/feedStatus/feedName",schemaPath:"node#/definitions/FeedWithStatus/properties/feedName/type",keyword:"type",params:{type: "string"},message:"must be string"};
if(vErrors === null){
vErrors = [err5];
}
else {
vErrors.push(err5);
}
errors++;
}
}
if(coerced5 !== undefined){
data4 = coerced5;
if(data3 !== undefined){
data3["feedName"] = coerced5;
}
}
}
var valid4 = _errs20 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data3.notViewed !== undefined){
let data5 = data3.notViewed;
const _errs22 = errors;
if(!(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))){
let dataType6 = typeof data5;
let coerced6 = undefined;
if(dataType6 == 'object' && Array.isArray(data5) && data5.length == 1){
data5 = data5[0];
dataType6 = typeof data5;
if(((typeof data5 == "number") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5))){
coerced6 = data5;
}
}
if(!(coerced6 !== undefined)){
if(dataType6 === "boolean" || data5 === null
              || (dataType6 === "string" && data5 && data5 == +data5 && !(data5 % 1))){
coerced6 = +data5;
}
else {
const err6 = {instancePath:instancePath+"/feedStatus/notViewed",schemaPath:"node#/definitions/FeedWithStatus/properties/notViewed/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err6];
}
else {
vErrors.push(err6);
}
errors++;
}
}
if(coerced6 !== undefined){
data5 = coerced6;
if(data3 !== undefined){
data3["notViewed"] = coerced6;
}
}
}
var valid4 = _errs22 === errors;
}
else {
var valid4 = true;
}
if(valid4){
if(data3.notRead !== undefined){
let data6 = data3.notRead;
const _errs24 = errors;
if(!(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))){
let dataType7 = typeof data6;
let coerced7 = undefined;
if(dataType7 == 'object' && Array.isArray(data6) && data6.length == 1){
data6 = data6[0];
dataType7 = typeof data6;
if(((typeof data6 == "number") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6))){
coerced7 = data6;
}
}
if(!(coerced7 !== undefined)){
if(dataType7 === "boolean" || data6 === null
              || (dataType7 === "string" && data6 && data6 == +data6 && !(data6 % 1))){
coerced7 = +data6;
}
else {
const err7 = {instancePath:instancePath+"/feedStatus/notRead",schemaPath:"node#/definitions/FeedWithStatus/properties/notRead/type",keyword:"type",params:{type: "integer"},message:"must be integer"};
if(vErrors === null){
vErrors = [err7];
}
else {
vErrors.push(err7);
}
errors++;
}
}
if(coerced7 !== undefined){
data6 = coerced7;
if(data3 !== undefined){
data3["notRead"] = coerced7;
}
}
}
var valid4 = _errs24 === errors;
}
else {
var valid4 = true;
}
}
}
}
}
}
else {
const err8 = {instancePath:instancePath+"/feedStatus",schemaPath:"node#/definitions/FeedWithStatus/type",keyword:"type",params:{type: "object"},message:"must be object"};
if(vErrors === null){
vErrors = [err8];
}
else {
vErrors.push(err8);
}
errors++;
}
}
var _valid1 = _errs16 === errors;
valid2 = valid2 || _valid1;
if(!valid2){
const _errs28 = errors;
if(data3 !== null){
let dataType8 = typeof data3;
let coerced8 = undefined;
if(dataType8 == 'object' && Array.isArray(data3) && data3.length == 1){
data3 = data3[0];
dataType8 = typeof data3;
if(data3 === null){
coerced8 = data3;
}
}
if(!(coerced8 !== undefined)){
if(data3 === "" || data3 === 0 || data3 === false){
coerced8 = null;
}
else {
const err9 = {instancePath:instancePath+"/feedStatus",schemaPath:"#/properties/feedStatus/anyOf/1/type",keyword:"type",params:{type: "null"},message:"must be null"};
if(vErrors === null){
vErrors = [err9];
}
else {
vErrors.push(err9);
}
errors++;
}
}
if(coerced8 !== undefined){
data3 = coerced8;
if(data !== undefined){
data["feedStatus"] = coerced8;
}
}
}
var _valid1 = _errs28 === errors;
valid2 = valid2 || _valid1;
}
if(!valid2){
const err10 = {instancePath:instancePath+"/feedStatus",schemaPath:"#/properties/feedStatus/anyOf",keyword:"anyOf",params:{},message:"must match a schema in anyOf"};
if(vErrors === null){
vErrors = [err10];
}
else {
vErrors.push(err10);
}
errors++;
validate205.errors = vErrors;
return false;
}
else {
errors = _errs15;
if(vErrors !== null){
if(_errs15){
vErrors.length = _errs15;
}
else {
vErrors = null;
}
}
}
var valid0 = _errs14 === errors;
}
else {
var valid0 = true;
}
}
}
}
}
}
}
else {
validate205.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];
return false;
}
}
validate205.errors = vErrors;
return errors === 0;
}

export const PushContentArray = validate207;
const schema233 = {"type":"array","items":{"$ref":"node#/definitions/PushContent"}};

function validate207(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){
let vErrors = null;
let errors = 0;
if(!(Array.isArray(data))){
let dataType0 = typeof data;
let coerced0 = undefined;
if(dataType0 == 'object' && Array.isArray(data) && data.length == 1){
data = data[0];
dataType0 = typeof data;
if(Array.isArray(data)){
coerced0 = data;
}
}
if(!(coerced0 !== undefined)){
if(dataType0 === "string" || dataType0 === "number"
              || dataType0 === "boolean" || data === null){
coerced0 = [data];
}
else {
validate207.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "array"},message:"must be array"}];
return false;
}
}
if(coerced0 !== undefined){
data = coerced0;
if(parentData !== undefined){
parentData[parentDataProperty] = coerced0;
}
}
}
if(errors === 0){
if(Array.isArray(data)){
var valid0 = true;
const len0 = data.length;
for(let i0=0; i0<len0; i0++){
const _errs1 = errors;
if(!(validate205(data[i0], {instancePath:instancePath+"/" + i0,parentData:data,parentDataProperty:i0,rootData}))){
vErrors = vErrors === null ? validate205.errors : vErrors.concat(validate205.errors);
errors = vErrors.length;
}
var valid0 = _errs1 === errors;
if(!valid0){
break;
}
}
}
}
validate207.errors = vErrors;
return errors === 0;
}

export const NODE_API_VALIDATORS = {
    "CommentOperations": CommentOperations,
    "ContactOperations": ContactOperations,
    "FeedOperations": FeedOperations,
    "FriendOperations": FriendOperations,
    "FriendGroupOperations": FriendGroupOperations,
    "NodeNameOperations": NodeNameOperations,
    "PeopleOperations": PeopleOperations,
    "PostingOperations": PostingOperations,
    "PrivateMediaFileOperations": PrivateMediaFileOperations,
    "ProfileOperations": ProfileOperations,
    "ReactionOperations": ReactionOperations,
    "StoryOperations": StoryOperations,
    "SubscriberOperations": SubscriberOperations,
    "SubscriptionOperations": SubscriptionOperations,
    "AcceptedReactions": AcceptedReactions,
    "AsyncOperationCreated": AsyncOperationCreated,
    "AvatarImage": AvatarImage,
    "AvatarInfo": AvatarInfo,
    "AvatarInfoArray": AvatarInfoArray,
    "AvatarOrdinal": AvatarOrdinal,
    "AvatarOrdinalArray": AvatarOrdinalArray,
    "BlockedInstantInfo": BlockedInstantInfo,
    "BlockedInstantInfoArray": BlockedInstantInfoArray,
    "BlockedPostingInstantInfo": BlockedPostingInstantInfo,
    "BlockedUsersChecksums": BlockedUsersChecksums,
    "CarteInfo": CarteInfo,
    "CarteSet": CarteSet,
    "CarteVerificationInfo": CarteVerificationInfo,
    "ClientReactionInfo": ClientReactionInfo,
    "CommentTotalInfo": CommentTotalInfo,
    "ContactInfo": ContactInfo,
    "ContactInfoArray": ContactInfoArray,
    "CredentialsCreated": CredentialsCreated,
    "DeleteNodeStatus": DeleteNodeStatus,
    "DomainAvailable": DomainAvailable,
    "DomainInfo": DomainInfo,
    "DomainInfoArray": DomainInfoArray,
    "EmailHint": EmailHint,
    "FeedReference": FeedReference,
    "FeedStatus": FeedStatus,
    "FeedWithStatus": FeedWithStatus,
    "FriendGroupDetails": FriendGroupDetails,
    "FriendGroupInfo": FriendGroupInfo,
    "FriendGroupInfoArray": FriendGroupInfoArray,
    "FriendGroupsFeatures": FriendGroupsFeatures,
    "FriendInfo": FriendInfo,
    "FriendInfoArray": FriendInfoArray,
    "FriendOfInfo": FriendOfInfo,
    "FriendOfInfoArray": FriendOfInfoArray,
    "FundraiserInfo": FundraiserInfo,
    "GrantInfo": GrantInfo,
    "GrantInfoArray": GrantInfoArray,
    "KeyMnemonic": KeyMnemonic,
    "LinkPreview": LinkPreview,
    "LinkPreviewInfo": LinkPreviewInfo,
    "MediaFilePreviewInfo": MediaFilePreviewInfo,
    "NodeNameInfo": NodeNameInfo,
    "PeopleGeneralInfo": PeopleGeneralInfo,
    "PostingFeatures": PostingFeatures,
    "PostingSourceInfo": PostingSourceInfo,
    "PrivateMediaFileInfo": PrivateMediaFileInfo,
    "ProfileInfo": ProfileInfo,
    "PublicMediaFileInfo": PublicMediaFileInfo,
    "ReactionInfo": ReactionInfo,
    "ReactionInfoArray": ReactionInfoArray,
    "ReactionsSliceInfo": ReactionsSliceInfo,
    "ReactionTotalInfo": ReactionTotalInfo,
    "ReactionTotalsInfo": ReactionTotalsInfo,
    "ReactionTotalsInfoArray": ReactionTotalsInfoArray,
    "RegisteredNameSecret": RegisteredNameSecret,
    "RemoteMediaInfo": RemoteMediaInfo,
    "RemotePostingVerificationInfo": RemotePostingVerificationInfo,
    "RemoteReactionVerificationInfo": RemoteReactionVerificationInfo,
    "RepliedTo": RepliedTo,
    "Result": Result,
    "SheriffMark": SheriffMark,
    "SettingInfo": SettingInfo,
    "SettingInfoArray": SettingInfoArray,
    "SettingTypeModifiers": SettingTypeModifiers,
    "SheriffComplaintGroupInfo": SheriffComplaintGroupInfo,
    "SheriffComplaintGroupsSliceInfo": SheriffComplaintGroupsSliceInfo,
    "SheriffComplaintInfo": SheriffComplaintInfo,
    "SheriffComplaintInfoArray": SheriffComplaintInfoArray,
    "SheriffOrderInfo": SheriffOrderInfo,
    "StorySummaryBlocked": StorySummaryBlocked,
    "StorySummaryFriendGroup": StorySummaryFriendGroup,
    "StorySummaryEntry": StorySummaryEntry,
    "StorySummaryNode": StorySummaryNode,
    "StorySummaryPageClicks": StorySummaryPageClicks,
    "StorySummaryReaction": StorySummaryReaction,
    "StorySummarySheriff": StorySummarySheriff,
    "SubscriberInfo": SubscriberInfo,
    "SubscriberInfoArray": SubscriberInfoArray,
    "SubscriptionInfo": SubscriptionInfo,
    "SubscriptionInfoArray": SubscriptionInfoArray,
    "TokenInfo": TokenInfo,
    "TokenInfoArray": TokenInfoArray,
    "UpdateInfo": UpdateInfo,
    "UserListInfo": UserListInfo,
    "UserListItemInfo": UserListItemInfo,
    "UserListSliceInfo": UserListSliceInfo,
    "WhoAmI": WhoAmI,
    "ActivityReactionInfo": ActivityReactionInfo,
    "ActivityReactionInfoArray": ActivityReactionInfoArray,
    "BlockedByUserInfo": BlockedByUserInfo,
    "BlockedByUserInfoArray": BlockedByUserInfoArray,
    "BlockedUserInfo": BlockedUserInfo,
    "BlockedUserInfoArray": BlockedUserInfoArray,
    "Body": Body,
    "CommentRevisionInfo": CommentRevisionInfo,
    "CommentRevisionInfoArray": CommentRevisionInfoArray,
    "Features": Features,
    "FeedInfo": FeedInfo,
    "FeedInfoArray": FeedInfoArray,
    "MediaAttachment": MediaAttachment,
    "PostingInfo": PostingInfo,
    "PostingInfoArray": PostingInfoArray,
    "PostingRevisionInfo": PostingRevisionInfo,
    "PostingRevisionInfoArray": PostingRevisionInfoArray,
    "ReactionCreated": ReactionCreated,
    "SettingMetaInfo": SettingMetaInfo,
    "SettingMetaInfoArray": SettingMetaInfoArray,
    "StorySummaryData": StorySummaryData,
    "CommentInfo": CommentInfo,
    "CommentsSliceInfo": CommentsSliceInfo,
    "DraftInfo": DraftInfo,
    "DraftInfoArray": DraftInfoArray,
    "EntryInfo": EntryInfo,
    "EntryInfoArray": EntryInfoArray,
    "PluginInfo": PluginInfo,
    "PluginInfoArray": PluginInfoArray,
    "StoryInfo": StoryInfo,
    "CommentCreated": CommentCreated,
    "FeedSliceInfo": FeedSliceInfo,
    "PushContent": PushContent,
    "PushContentArray": PushContentArray,
};
